0000                       0001 ; Seattle Computer Products 8086 Assembler  version 2.44
0000                       0002 ;   by Tim Paterson
0000                       0003 ; Runs on the 8086 under MS-DOS
0000                       0004 
0000                       0005 ;* * * * * * REVISION HISTORY * * * * * *
0000                       0006 ;
0000                       0007 ; 12/29/80  2.01  General release with 86-DOS version 0.34
0000                       0008 ; 02/22/81  2.10  Increased buffer size from 128 bytes to 1024 bytes
0000                       0009 ; 03/18/81  2.11  General cleanup and more documentation
0000                       0010 ; 03/24/81  2.20  Modify ESC handling for full 8087 operation
0000                       0011 ; 04/01/81  2.21  Fix date in HEX and PRN files; modify buffer handling
0000                       0012 ; 04/03/81  2.22  Fix 2.21 buffer handling
0000                       0013 ; 04/13/81  2.23  Re-open source file for listing to allow assembling CON:
0000                       0014 ; 04/28/81  2.24  Allow nested IFs
0000                       0015 ; 07/30/81  2.25  Add Intel string mnemonics; clean up a little
0000                       0016 ; 08/02/81  2.30  Re-write pass 2:
0000                       0017 ;			Always report errors to console
0000                       0018 ;			Exact byte lengths for HEX and PRN files
0000                       0019 ; 11/08/81  2.40  Add 8087 mnemonics; print full error messages;
0000                       0020 ;		  allow expressions with *, /, and ()
0000                       0021 ; 07/04/82  2.41  Fix Intel's 8087 "reverse-bit" bug; don't copy date
0000                       0022 ; 08/18/82  2.42  Increase stack from 80 to 256 (Damn! Overflowed again!)
0000                       0023 ; 01/05/83  2.43  Correct over-zealous optimization in 2.42
0000                       0024 ; 05/09/83  2.44  Add memory usage report
0000                       0025 ;
0000                       0026 ;* * * * * * * * * * * * * * * * * * * * *
0000                       0027 
0000                       0028 SYMWID:	EQU	5	;5 symbols per line in dump
0000                       0029 FCB:	EQU	5CH
0000                       0030 BUFSIZ:	EQU	1024	;Source code buffer
0000                       0031 LSTBUFSIZ:EQU	BUFSIZ	;List file buffer
0000                       0032 HEXBUFSIZ:EQU	70	;Hex file buffer (26*2 + 5*2 + 3 + EXTRA)
0000                       0033 EOL:	EQU	13	;ASCII carriage return
0000                       0034 OBJECT:	EQU	100H	;DEFAULT "PUT" ADDRESS
0000                       0035 
0000                       0036 ;System call function codes
0000                       0037 PRINTMES: EQU	9
0000                       0038 OPEN:	EQU	15
0000                       0039 CLOSE:	EQU	16
0000                       0040 READ:	EQU	20
0000                       0041 SETDMA:	EQU	26
0000                       0042 MAKE:	EQU	22
0000                       0043 BLKWRT:	EQU	40
0000                       0044 
0000                       0045 ;The following equates define some token values returned by GETSYM
0000                       0046 UNDEFID:EQU	0	;Undefined identifier (including no nearby RET)
0000                       0047 CONST:	EQU	1	;Constant (including $)
0000                       0048 REG:	EQU	2	;8-bit register
0000                       0049 XREG:	EQU	3	;16-bit register (except segment registers)
0000                       0050 SREG:	EQU	4	;Segment register
0000                       0051 FREG:	EQU	6	;8087 floating point register
0000                       0052 
0000                       0053 ;Bits to build 8087 opcode table entries
0000                       0054 ONEREG:	EQU	40H	;Single ST register OK as operand
0000                       0055 NEEDOP:	EQU	80H	;Must have an operand
0000                       0056 INTEGER:EQU	20H	;For integer operations
0000                       0057 REAL:	EQU	28H	;For real operations
0000                       0058 EXTENDED EQU	10H	;For Long integers or Temporary real
0000                       0059 MEMORY:	EQU	18H	;For general memory operations
0000                       0060 STACKOP:EQU	10H	;Two register arithmetic with pop
0000                       0061 ARITH:	EQU	8	;Non-pop arithmetic operations
0000                       0062 
0000                       0063 	ORG	100H
0100                       0064 	PUT	100H
0100                       0065 
0100 EB 74                 0066 	JMPS	BEGIN
0102                       0067 
0102 0D 0A 53 65 61 74 74  0068 HEADER:	DB	13,10,'Seattle Computer Products 8086 Assembler Version 2.44'
     6C 65 20 43 6F 6D 70 
     75 74 65 72 20 50 72 
     6F 64 75 63 74 73 20 
     38 30 38 36 20 41 73 
     73 65 6D 62 6C 65 72 
     20 56 65 72 73 69 6F 
     6E 20 32 2E 34 34    
0139 0D 0A 43 6F 70 79 72  0069 	DB	13,10,'Copyright 1979-1983 by Seattle Computer Products, Inc.'
     69 67 68 74 20 31 39 
     37 39 2D 31 39 38 33 
     20 62 79 20 53 65 61 
     74 74 6C 65 20 43 6F 
     6D 70 75 74 65 72 20 
     50 72 6F 64 75 63 74 
     73 2C 20 49 6E 63 2E 
0171 0D 0A 0D 0A 24        0070 	DB	13,10,13,10,'$'
0176                       0071 
0176                       0072 BEGIN:
0176 BC EC 2A              0073 	MOV	SP,STACK
0179 BA 02 01              0074 	MOV	DX,HEADER
017C B4 09                 0075 	MOV	AH,PRINTMES
017E CD 21                 0076 	INT	33
0180 A0 6D 00              0077 	MOV	AL,[FCB+17]
0183 A2 7B 21              0078 	MOV	[SYMFLG],AL	;Save symbol table request flag
0186 BE 65 00              0079 	MOV	SI,FCB+9	;Point to file extension
0189 AC                    0080 	LODB			;Get source drive letter
018A E8 13 01              0081 	CALL	CHKDSK		;Valid drive?
018D 0A C0                 0082 	OR	AL,AL
018F 74 03                 0083 	JZ	DEFAULT		;If no extension, use existing drive spec
0191 A2 5C 00              0084 	MOV	[FCB],AL
0194                       0085 DEFAULT:
0194 AC                    0086 	LODB			;Get HEX file drive letter
0195 3C 5A                 0087 	CMP	AL,'Z'		;Suppress HEX file?
0197 74 03                 0088 	JZ	L0000
0199 E8 04 01              0089 	CALL	CHKDSK
019C                       0090 L0000:	
019C A2 C6 20              0091 	MOV	[HEXFCB],AL
019F AC                    0092 	LODB			;Get PRN file drive letter
01A0 B4 00                 0093 	MOV	AH,0		;Signal no PRN file
01A2 3C 5A                 0094 	CMP	AL,'Z'		;Suppress PRN file?
01A4 74 15                 0095 	JZ	NOPRN
01A6 3C 59                 0096 	CMP	AL,'Y'		;Print errors only on console?
01A8 74 11                 0097 	JZ	NOPRN
01AA B4 02                 0098 	MOV	AH,2
01AC 3C 58                 0099 	CMP	AL,'X'		;PRN file to console?
01AE 74 0B                 0100 	JZ	NOPRN
01B0 B4 04                 0101 	MOV	AH,4
01B2 3C 50                 0102 	CMP	AL,'P'		;PRN file to printer?
01B4 74 05                 0103 	JZ	NOPRN
01B6 E8 E7 00              0104 	CALL	CHKDSK
01B9 B4 80                 0105 	MOV	AH,80H
01BB                       0106 NOPRN:
01BB A2 EB 20              0107 	MOV	[LSTFCB],AL
01BE 88 26 98 21           0108 	MOV	[LSTDEV],AH	;Flag device for list ouput
01C2 BE B5 20              0109 	MOV	SI,EXTEND
01C5 BF 65 00              0110 	MOV	DI,FCB+9
01C8 A5                    0111 	MOVW
01C9 A4                    0112 	MOVB			;Set extension to ASM
01CA A5                    0113 	MOVW			;Zero extent field
01CB BA 5C 00              0114 	MOV	DX,FCB
01CE B4 0F                 0115 	MOV	AH,OPEN
01D0 CD 21                 0116 	INT	33
01D2 BB 30 20              0117 	MOV	BX,NOFILE
01D5 0A C0                 0118 	OR	AL,AL
01D7 74 03                 0119 	JZ	$+5
01D9 E9 9A 00              0120 	JMP	PRERR
01DC BA C6 20              0121 	MOV	DX,HEXFCB
01DF E8 9C 00              0122 	CALL	MAKFIL
01E2 BA EB 20              0123 	MOV	DX,LSTFCB
01E5 E8 96 00              0124 	CALL	MAKFIL
01E8 33 C0                 0125 	XOR	AX,AX
01EA A3 68 00              0126 	MOV	[FCB+12],AX	;Zero CURRENT BLOCK field
01ED A2 7C 00              0127 	MOV	[FCB+32],AL	;Zero Next Record field
01F0 C7 06 6A 00 00 04     0128 	MOV	[FCB+14],BUFSIZ	;Set record size
01F6 C7 06 EA 25 EC 25     0129 	MOV	[BUFPT],SRCBUF	;Initialize buffer pointer
01FC C7 06 7D 21 ED 2A     0130 	MOV	[CODE],START+1	;POINTER TO NEXT BYTE OF INTERMEDIATE CODE
0202 C7 06 9E 21 EC 2A     0131 	MOV	[IY],START	;POINTER TO CURRENT RELOCATION BYTE
0208 33 C0                 0132 	XOR	AX,AX
020A A3 10 21              0133 	MOV	[PC],AX		;DEFAULT PROGRAM COUNTER
020D A3 77 21              0134 	MOV	[BASE],AX	;POINTER TO ROOT OF ID TREE=NIL
0210 A3 96 21              0135 	MOV	[RETPT],AX	;Pointer to last RET record
0213 A2 90 21              0136 	MOV	[IFFLG],AL	;NOT WITHIN IF/ENDIF
0216 A2 91 21              0137 	MOV	[CHKLAB],AL	;LOOKUP ALL LABELS
0219 48                    0138 	DEC	AX
021A A3 94 21              0139 	MOV	[LSTRET],AX	;Location of last RET
021D A1 06 00              0140 	MOV	AX,[6]		;HL=END OF MEMORY
0220 A3 79 21              0141 	MOV	[HEAP],AX	;BACK END OF SYMBOL TABLE SPACE
0223 C7 06 81 21 04 00     0142 	MOV	[BCOUNT],4	;CODE BYTES PER RELOCATION BYTE
0229                       0143 
0229                       0144 ;Assemble each line of code
0229                       0145 
0229                       0146 LOOP:
0229 E8 8A 00              0147 	CALL	NEXTCHR		;Get first character on line
022C 3C 1A                 0148 	CMP	AL,1AH
022E 74 1E                 0149 	JZ	ENDJ
0230 B0 FF                 0150 	MOV	AL,-1		;Flag that no tokens have been read yet
0232 A2 76 21              0151 	MOV	[SYM],AL
0235 E8 1C 07              0152 	CALL	ASMLIN		;Assemble the line
0238 A0 76 21              0153 	MOV	AL,[SYM]
023B 3C FF                 0154 	CMP	AL,-1		;Any tokens found on line?
023D 75 03                 0155 	JNZ	L0002
023F E8 C0 03              0156 	CALL	GETSYM		;If no tokens read yet, read first one
0242                       0157 L0002:	
0242 3C 3B                 0158 	CMP	AL,';'
0244 74 0B                 0159 	JZ	ENDLN
0246 3C 0D                 0160 	CMP	AL,EOL
0248 74 07                 0161 	JZ	ENDLN
024A B0 14                 0162 	MOV	AL,14H		;Garbage at end of line error
024C EB 05                 0163 	JP	ENDLIN
024E E9 09 0F              0164 ENDJ:	JMP	END
0251                       0165 
0251                       0166 ENDLN:
0251 32 C0                 0167 	XOR	AL,AL		;Flag no errors on line
0253                       0168 ENDLIN:
0253                       0169 ;AL = error code for line. Stack depth unknown
0253 BC EC 2A              0170 	MOV	SP,STACK
0256 E8 02 00              0171 	CALL	NEXLIN
0259 EB CE                 0172 	JP	LOOP
025B                       0173 
025B                       0174 NEXLIN:
025B B5 C0                 0175 	MOV	CH,0C0H		;Put end of line marker and error code (AL)
025D E8 81 09              0176 	CALL	PUTCD
0260 E8 46 09              0177 	CALL	GEN1
0263 A0 75 21              0178 	MOV	AL,[CHR]
0266                       0179 GETEOL:
0266 3C 0A                 0180 	CMP	AL,10
0268 74 35                 0181 	JZ	RET
026A 3C 1A                 0182 	CMP	AL,1AH
026C 74 E0                 0183 	JZ	ENDJ
026E E8 45 00              0184 	CALL	NEXTCHR		;Scan over comments for linefeed
0271 EB F3                 0185 	JP	GETEOL
0273                       0186 
0273                       0187 ABORT:
0273 BB 18 20              0188 	MOV	BX,NOMEM
0276                       0189 PRERR:
0276 8B D3                 0190 	MOV	DX,BX
0278 B4 09                 0191 	MOV	AH,PRINTMES
027A CD 21                 0192 	INT	33
027C CD 20                 0193 	INT	32
027E                       0194 
027E                       0195 MAKFIL:
027E 8B F2                 0196 	MOV	SI,DX
0280 AC                    0197 	LODB			;Get drive select byte
0281 3C 20                 0198 	CMP	AL,20H		;If not valid, don't make file
0283 73 1A                 0199 	JNC	RET
0285 B9 04 00              0200 	MOV	CX,4
0288 8B FE                 0201 	MOV	DI,SI
028A BE 5D 00              0202 	MOV	SI,FCB+1
028D F3                    0203 	REP
028E A5                    0204 	MOVW			;Copy source file name
028F B4 16                 0205 	MOV	AH,MAKE
0291 CD 21                 0206 	INT	33
0293 C7 45 05 01 00        0207 	MOV	[DI-9+14],1	;Set record length to 1 byte
0298 BB 00 20              0208 	MOV	BX,NOSPAC
029B 0A C0                 0209 	OR	AL,AL		;Success?
029D 75 D7                 0210 	JNZ	PRERR
029F C3                    0211 	RET
02A0                       0212 
02A0                       0213 CHKDSK:
02A0 2C 20                 0214 	SUB	AL,' '		;If not present, set zero flag
02A2 74 FB                 0215 	JZ	RET
02A4 2C 20                 0216 	SUB	AL,20H
02A6 74 04                 0217 	JZ	DSKERR		;Must be in range A-O
02A8 3C 10                 0218 	CMP	AL,'P'-'@'
02AA 72 F3                 0219 	JC	RET
02AC                       0220 DSKERR:
02AC BB 51 20              0221 	MOV	BX,BADDSK
02AF EB C5                 0222 	JP	PRERR
02B1                       0223 
02B1                       0224 ERROR:
02B1 8A C1                 0225 	MOV	AL,CL
02B3 E9 9D FF              0226 	JMP	ENDLIN
02B6                       0227 
02B6                       0228 NEXTCHR:
02B6 8B 36 EA 25           0229 	MOV	SI,[BUFPT]
02BA 81 FE EC 25           0230 	CMP	SI,SRCBUF
02BE 75 1A                 0231 	JNZ	GETCH
02C0                       0232 ;Buffer empty so refill it
02C0 52                    0233 	PUSH	DX
02C1 50                    0234 	PUSH	AX		;AH must be saved
02C2 8B D6                 0235 	MOV	DX,SI
02C4 B4 1A                 0236 	MOV	AH,SETDMA
02C6 CD 21                 0237 	INT	33
02C8 BA 5C 00              0238 	MOV	DX,FCB
02CB B4 14                 0239 	MOV	AH,READ
02CD CD 21                 0240 	INT	33
02CF 92                    0241 	XCHG	AX,DX		;Put error code in DL
02D0 58                    0242 	POP	AX		;Restore AH
02D1 8A C2                 0243 	MOV	AL,DL		;Error code back in AL
02D3 5A                    0244 	POP	DX
02D4 3C 01                 0245 	CMP	AL,1
02D6 B0 1A                 0246 	MOV	AL,1AH		;Possibly signal End of File
02D8 74 0A                 0247 	JZ	NOMOD		;If nothing read
02DA                       0248 GETCH:
02DA AC                    0249 	LODB
02DB 81 FE EC 29           0250 	CMP	SI,SRCBUF+BUFSIZ
02DF 75 03                 0251 	JNZ	NOMOD
02E1 BE EC 25              0252 	MOV	SI,SRCBUF
02E4                       0253 NOMOD:
02E4 89 36 EA 25           0254 	MOV	[BUFPT],SI
02E8 A2 75 21              0255 	MOV	[CHR],AL
02EB C3                    0256 	RET
02EC                       0257 
02EC                       0258 
02EC                       0259 MROPS:
02EC                       0260 
02EC                       0261 ; Get two operands and check for certain types, according to flag byte
02EC                       0262 ; in CL. OP code in CH. Returns only if immediate operation.
02EC                       0263 
02EC 51                    0264 	PUSH	CX		;Save type flags
02ED E8 D8 00              0265 	CALL	GETOP
02F0 52                    0266 	PUSH	DX		;Save first operand
02F1 E8 CB 00              0267 	CALL	GETOP2
02F4 5B                    0268 	POP	BX		;First op in BX, second op in DX
02F5 B0 04                 0269 	MOV	AL,SREG		;Check for a segment register
02F7 3A C7                 0270 	CMP	AL,BH
02F9 74 41                 0271 	JZ	SEGCHK
02FB 3A C6                 0272 	CMP	AL,DH
02FD 74 3D                 0273 	JZ	SEGCHK
02FF B0 01                 0274 	MOV	AL,CONST	;Check if the first operand is immediate
0301 B1 1A                 0275 	MOV	CL,26
0303 3A C7                 0276 	CMP	AL,BH
0305 74 AA                 0277 	JZ	ERROR		;Error if so
0307 59                    0278 	POP	CX		;Restore type flags
0308 3A C6                 0279 	CMP	AL,DH		;If second operand is immediate, then done
030A 74 DF                 0280 	JZ	RET
030C B0 00                 0281 	MOV	AL,UNDEFID	;Check for memory reference
030E 3A C7                 0282 	CMP	AL,BH
0310 74 4F                 0283 	JZ	STORE		;Is destination memory?
0312 3A C6                 0284 	CMP	AL,DH
0314 74 55                 0285 	JZ	LOAD		;Is source memory?
0316 F6 C1 01              0286 	TEST	CL,1		;Check if register-to-register operation OK
0319 B1 1B                 0287 	MOV	CL,27
031B 74 94                 0288 	JZ	ERROR
031D 8A C6                 0289 	MOV	AL,DH
031F 3A C7                 0290 	CMP	AL,BH		;Registers must be of same length
0321                       0291 RR:
0321 B1 16                 0292 	MOV	CL,22
0323 75 8C                 0293 	JNZ	ERROR
0325                       0294 RR1:
0325 24 01                 0295 	AND	AL,1		;Get register length (1=16 bits)
0327 0A C5                 0296 	OR	AL,CH		;Or in to OP code
0329 E8 70 08              0297 	CALL	PUT		;And write it
032C 59                    0298 	POP	CX		;Dump return address
032D 8A C3                 0299 	MOV	AL,BL
032F 02 C0                 0300 	ADD	AL,AL		;Rotate register number into middle position
0331 02 C0                 0301 	ADD	AL,AL
0333 02 C0                 0302 	ADD	AL,AL
0335 0C C0                 0303 	OR	AL,0C0H		;Set register-to-register mode
0337 0A C2                 0304 	OR	AL,DL		;Combine with other register number
0339 E9 60 08              0305 	JMP	PUT
033C                       0306 
033C                       0307 SEGCHK:
033C                       0308 ;Come here if at least one operand is a segment register
033C 59                    0309 	POP	CX		;Restore flags
033D F6 C1 08              0310 	TEST	CL,8		;Check if segment register OK
0340 B1 16                 0311 	MOV	CL,22
0342 74 78                 0312 	JZ	ERR1
0344 B9 03 8E              0313 	MOV	CX,8E03H	;Segment register move OP code
0347 B0 00                 0314 	MOV	AL,UNDEFID
0349 3A C6                 0315 	CMP	AL,DH		;Check if source is memory
034B 74 1E                 0316 	JZ	LOAD
034D 3A C7                 0317 	CMP	AL,BH		;Check if destination is memory
034F 74 10                 0318 	JZ	STORE
0351 B0 03                 0319 	MOV	AL,XREG
0353 2A C6                 0320 	SUB	AL,DH		;Check if source is 16-bit register
0355 74 CA                 0321 	JZ	RR		;If so, AL must be zero
0357 B5 8C                 0322 	MOV	CH,8CH		;Change direction
0359 87 DA                 0323 	XCHG	DX,BX		;Flip which operand is first and second
035B B0 03                 0324 	MOV	AL,XREG
035D 2A C6                 0325 	SUB	AL,DH		;Let RR perform finish the test
035F EB C0                 0326 	JP	RR
0361                       0327 
0361                       0328 STORE:
0361 F6 C1 04              0329 	TEST	CL,004H		;Check if storing is OK
0364 75 52                 0330 	JNZ	STERR
0366 87 DA                 0331 	XCHG	DX,BX		;If so, flip operands
0368 80 E5 FD              0332 	AND	CH,0FDH		;   and zero direction bit
036B                       0333 LOAD:
036B B6 19                 0334 	MOV	DH,25
036D 3A C7                 0335 	CMP	AL,BH		;Check if memory-to-memory
036F 74 49                 0336 	JZ	MRERR
0371 8A C7                 0337 	MOV	AL,BH
0373 3C 02                 0338 	CMP	AL,REG		;Check if 8-bit operation
0375 75 07                 0339 	JNZ	XRG
0377 B6 16                 0340 	MOV	DH,22
0379 F6 C1 01              0341 	TEST	CL,1		;See if 8-bit operation is OK
037C 74 3C                 0342 	JZ	MRERR
037E                       0343 XRG:
037E 8A C2                 0344 	MOV	AL,DL
0380 2C 06                 0345 	SUB	AL,6		;Check for R/M mode 6 and register 0
0382 0A C3                 0346 	OR	AL,BL		;   meaning direct load/store of accumulator
0384 75 19                 0347 	JNZ	NOTAC
0386 F6 C1 08              0348 	TEST	CL,8		;See if direct load/store of accumulator
0389 74 14                 0349 	JZ	NOTAC		;   means anything in this case
038B                       0350 ; Process direct load/store of accumulator
038B 8A C5                 0351 	MOV	AL,CH
038D 24 02                 0352 	AND	AL,2		;Preserve direction bit only
038F 34 02                 0353 	XOR	AL,2		;   but flip it
0391 0C A0                 0354 	OR	AL,0A0H		;Combine with OP code
0393 8A E8                 0355 	MOV	CH,AL
0395 8A C7                 0356 	MOV	AL,BH		;Check byte/word operation
0397 24 01                 0357 	AND	AL,1
0399 0A C5                 0358 	OR	AL,CH
039B 59                    0359 	POP	CX		;Dump return address
039C E9 BD 08              0360 	JMP	PUTADD		;Write the address
039F                       0361 
039F                       0362 NOTAC:
039F 8A C7                 0363 	MOV	AL,BH
03A1 24 01                 0364 	AND	AL,1		;Get byte/word bit
03A3 22 C1                 0365 	AND	AL,CL		;But don't use it in word-only operations
03A5 0A C5                 0366 	OR	AL,CH		;Combine with OP code
03A7 E8 F2 07              0367 	CALL	PUT
03AA 8A C3                 0368 	MOV	AL,BL
03AC 02 C0                 0369 	ADD	AL,AL		;Rotate to middle position
03AE 02 C0                 0370 	ADD	AL,AL
03B0 02 C0                 0371 	ADD	AL,AL
03B2 0A C2                 0372 	OR	AL,DL		;Combine register field
03B4 59                    0373 	POP	CX		;Dump return address
03B5 E9 A4 08              0374 	JMP	PUTADD		;Write the address
03B8                       0375 
03B8                       0376 STERR:
03B8 B6 1D                 0377 	MOV	DH,29
03BA                       0378 MRERR:
03BA 8A CE                 0379 	MOV	CL,DH
03BC                       0380 
03BC E9 F2 FE              0381 ERR1:	JMP	ERROR
03BF                       0382 
03BF                       0383 GETOP2:
03BF                       0384 ;Get the second operand: look for a comma and drop into GETOP
03BF A0 76 21              0385 	MOV	AL,[SYM]
03C2 3C 2C                 0386 	CMP	AL,','
03C4 B1 15                 0387 	MOV	CL,21
03C6 75 F4                 0388 	JNZ	ERR1
03C8                       0389 
03C8                       0390 
03C8                       0391 GETOP:
03C8                       0392 
03C8                       0393 ; Get one operand. Operand may be a memory reference in brackets, a register,
03C8                       0394 ; or a constant. If a flag (such as "B" for byte operation) is encountered,
03C8                       0395 ; it is noted and processing continues to find the operand.
03C8                       0396 ;
03C8                       0397 ; On exit, AL (=DH) has the type of operand. Other information depends
03C8                       0398 ; on the actual operand:
03C8                       0399 ;
03C8                       0400 ; AL=DH=0  Memory Reference.  DL has the address mode properly prepared in
03C8                       0401 ; the 8086 R/M format (middle bits zero). The constant part of the address
03C8                       0402 ; is in ADDR. If an undefined label needs to be added to this, a pointer to
03C8                       0403 ; its information fields is in ALABEL, otherwise ALABEL is zero.
03C8                       0404 ;
03C8                       0405 ; AL=DH=1  Value. The constant part is in DATA. If an undefined label needs
03C8                       0406 ; to be added to this, a pointer to its information fields is in DLABEL,
03C8                       0407 ; otherwise DLABEL is zero. "$" and "RET" are in this class.
03C8                       0408 ;
03C8                       0409 ; AL=DH=2  8-bit Register. DL has the register number.
03C8                       0410 ;
03C8                       0411 ; AL=DH=3  16-bit Register. DL has the register number.
03C8                       0412 ;
03C8                       0413 ; AL=DH=4  Segment Register. DL has the register number.
03C8                       0414 
03C8 E8 37 02              0415 	CALL	GETSYM
03CB                       0416 GETOP1:
03CB                       0417 ;Enter here if we don't need a GETSYM first
03CB 3C 5B                 0418 	CMP	AL,'['		;Memory reference?
03CD 74 30                 0419 	JZ	MEM
03CF 3C 05                 0420 	CMP	AL,5		;Flag ("B", "W", etc.)?
03D1 74 57                 0421 	JZ	FLG
03D3 3C 02                 0422 	CMP	AL,REG		;8-Bit register?
03D5 74 20                 0423 	JZ	NREG
03D7 3C 03                 0424 	CMP	AL,XREG		;16-Bit register?
03D9 74 1C                 0425 	JZ	NREG
03DB 3C 04                 0426 	CMP	AL,SREG		;Segment register?
03DD 74 18                 0427 	JZ	NREG
03DF                       0428 VAL:				;Must be immediate
03DF 32 C0                 0429 	XOR	AL,AL		;No addressing modes allowed
03E1                       0430 VAL1:
03E1 E8 57 00              0431 	CALL	GETVAL
03E4 A1 20 21              0432 	MOV	AX,[CON]	;Defined part
03E7 A3 1C 21              0433 	MOV	[DATA],AX
03EA A1 22 21              0434 	MOV	AX,[UNDEF]	;Undefined part
03ED A3 1E 21              0435 	MOV	[DLABEL],AX
03F0 8A D5                 0436 	MOV	DL,CH
03F2 B6 01                 0437 	MOV	DH,CONST
03F4 8A C6                 0438 	MOV	AL,DH
03F6 C3                    0439 	RET
03F7                       0440 NREG:
03F7 52                    0441 	PUSH	DX
03F8 E8 07 02              0442 	CALL	GETSYM
03FB 5A                    0443 	POP	DX
03FC 8A C6                 0444 	MOV	AL,DH
03FE C3                    0445 	RET
03FF                       0446 MEM:
03FF E8 00 02              0447 	CALL	GETSYM
0402 B0 01                 0448 	MOV	AL,1
0404 E8 34 00              0449 	CALL	GETVAL
0407 A0 76 21              0450 	MOV	AL,[SYM]
040A 3C 5D                 0451 	CMP	AL,']'
040C B1 18                 0452 	MOV	CL,24
040E 75 AC                 0453 	JNZ	ERR1
0410 E8 EF 01              0454 	CALL	GETSYM
0413 8B 1E 20 21           0455 	MOV	BX,[CON]
0417 89 1E 18 21           0456 	MOV	[ADDR],BX
041B 8B 1E 22 21           0457 	MOV	BX,[UNDEF]
041F 89 1E 1A 21           0458 	MOV	[ALABEL],BX
0423 8A D5                 0459 	MOV	DL,CH
0425 B6 00                 0460 	MOV	DH,UNDEFID
0427 8A C6                 0461 	MOV	AL,DH
0429 C3                    0462 	RET
042A                       0463 FLG:
042A 3A 16 17 21           0464 	CMP	DL,[MAXFLG]	;Invalid flag for this operation?
042E B1 27                 0465 	MOV	CL,27H
0430 7F 8A                 0466 	JG	ERR1
0432 E8 CD 01              0467 	CALL	GETSYM
0435 3C 2C                 0468 	CMP	AL,','
0437 74 8F                 0469 	JZ	GETOP
0439 EB 90                 0470 	JP	GETOP1
043B                       0471 
043B                       0472 
043B                       0473 GETVAL:
043B                       0474 
043B                       0475 ; Expression analyzer. On entry, if AL=0 then do not allow base or index
043B                       0476 ; registers. If AL=1, we are analyzing a memory reference, so allow base
043B                       0477 ; and index registers, and compute addressing mode when done. The constant
043B                       0478 ; part of the expression will be found in CON. If an undefined label is to
043B                       0479 ; be added to this, a pointer to its information fields will be found in
043B                       0480 ; UNDEF.
043B                       0481 
043B 8A E0                 0482 	MOV	AH,AL		;Flag is kept in AH
043D C7 06 22 21 00 00     0483 	MOV	[UNDEF],0
0443 A0 76 21              0484 	MOV	AL,[SYM]
0446 E8 51 00              0485 	CALL	EXPRESSION
0449 89 16 20 21           0486 	MOV	[CON],DX
044D 8A C4                 0487 	MOV	AL,AH
044F B5 00                 0488 	MOV	CH,0		;Initial mode
0451 A8 10                 0489 	TEST	AL,10H		;Test INDEX bit
0453 D0 D0                 0490 	RCL	AL		;BASE bit (zero flag not affected)
0455 74 37                 0491 	JZ	NOIND		;Jump if not indexed, with BASE bit in carry
0457 F5                    0492 	CMC
0458 D0 D5                 0493 	RCL	CH		;Rotate in BASE bit
045A D0 D0                 0494 	RCL	AL		;BP bit
045C D0 D5                 0495 	RCL	CH
045E D0 D0                 0496 	RCL	AL		;DI bit
0460 D0 D5                 0497 	RCL	CH		;The low 3 bits now have indexing mode
0462                       0498 MODE:
0462 80 CD 80              0499 	OR	CH,080H		;If undefined label, force 16-bit displacement
0465 F7 06 22 21 FF FF     0500 	TEST	[UNDEF],-1
046B 75 BC                 0501 	JNZ	RET
046D 8B 1E 20 21           0502 	MOV	BX,[CON]
0471 8A C3                 0503 	MOV	AL,BL
0473 98                    0504 	CBW			;Extend sign
0474 3B C3                 0505 	CMP	AX,BX		;Is it a signed 8-bit number?
0476 75 B1                 0506 	JNZ	RET		;If not, use 16-bit displacement
0478 80 E5 7F              0507 	AND	CH,07FH		;Reset 16-bit displacement
047B 80 CD 40              0508 	OR	CH,040H		;Set 8-bit displacement
047E 0B DB                 0509 	OR	BX,BX
0480 75 A7                 0510 	JNZ	RET		;Use it if not zero displacement
0482 80 E5 07              0511 	AND	CH,7		;Specify no displacement
0485 82 FD 06              0512 	CMP	CH,6		;Check for BP+0 addressing mode
0488 75 9F                 0513 	JNZ	RET
048A 80 CD 40              0514 	OR	CH,040H		;If BP+0, use 8-bit displacement
048D C3                    0515 	RET
048E                       0516 
048E                       0517 NOIND:
048E B5 06                 0518 	MOV	CH,6		;Try direct address mode
0490 73 FB                 0519 	JNC	RET		;If no base register, that's right
0492 D0 D0                 0520 	RCL	AL		;Check BP bit
0494 72 CC                 0521 	JC	MODE
0496 FE C5                 0522 	INC	CH		;If not, must be BX
0498 EB C8                 0523 	JP	MODE
049A                       0524 
049A                       0525 EXPRESSION:
049A                       0526 ;Analyze arbitrary expression. Flag byte in AH.
049A                       0527 ;On exit, AL has type byte: 0=register or undefined label
049A B5 FF                 0528 	MOV	CH,-1		;Initial type
049C 8B FA                 0529 	MOV	DI,DX
049E 33 D2                 0530 	XOR	DX,DX		;Initial value
04A0 3C 2B                 0531 	CMP	AL,'+'
04A2 74 0C                 0532 	JZ	PLSMNS
04A4 3C 2D                 0533 	CMP	AL,'-'
04A6 74 08                 0534 	JZ	PLSMNS
04A8 B1 2B                 0535 	MOV	CL,'+'
04AA 52                    0536 	PUSH	DX
04AB 51                    0537 	PUSH	CX
04AC 8B D7                 0538 	MOV	DX,DI
04AE EB 0A                 0539 	JP	OPERATE
04B0                       0540 PLSMNS:
04B0 8A C8                 0541 	MOV	CL,AL
04B2 52                    0542 	PUSH	DX
04B3 51                    0543 	PUSH	CX
04B4 80 CC 04              0544 	OR	AH,4		;Flag that a sign was found
04B7 E8 48 01              0545 	CALL	GETSYM
04BA                       0546 OPERATE:
04BA E8 2B 00              0547 	CALL	TERM
04BD 59                    0548 	POP	CX		;Recover operator
04BE 5B                    0549 	POP	BX		;Recover current value
04BF 87 DA                 0550 	XCHG	DX,BX
04C1 22 E8                 0551 	AND	CH,AL
04C3 0A C0                 0552 	OR	AL,AL		;Is it register or undefined label?
04C5 74 17                 0553 	JZ	NOCON		;If so, then no constant part
04C7 82 F9 2D              0554 	CMP	CL,"-"		;Subtract it?
04CA 75 02                 0555 	JNZ	ADD
04CC F7 DB                 0556 	NEG	BX
04CE                       0557 ADD:
04CE 03 D3                 0558 	ADD	DX,BX
04D0                       0559 NEXTERM:
04D0 A0 76 21              0560 	MOV	AL,[SYM]
04D3 3C 2B                 0561 	CMP	AL,'+'
04D5 74 D9                 0562 	JZ	PLSMNS
04D7 3C 2D                 0563 	CMP	AL,'-'
04D9 74 D5                 0564 	JZ	PLSMNS
04DB 8A C5                 0565 	MOV	AL,CH
04DD C3                    0566 	RET
04DE                       0567 NOCON:
04DE 82 F9 2D              0568 	CMP	CL,"-"
04E1 75 ED                 0569 	JNZ	NEXTERM
04E3                       0570 BADOP:
04E3 B1 05                 0571 	MOV	CL,5
04E5 E9 C9 FD              0572 	JMP	ERROR
04E8                       0573 
04E8                       0574 TERM:
04E8 E8 40 00              0575 	CALL	FACTOR
04EB                       0576 MULOP:
04EB 52                    0577 	PUSH	DX		;Save value
04EC 50                    0578 	PUSH	AX		;Save type
04ED E8 12 01              0579 	CALL	GETSYM
04F0 59                    0580 	POP	CX
04F1 3C 2A                 0581 	CMP	AL,"*"
04F3 74 04                 0582 	JZ	GETFACT
04F5 3C 2F                 0583 	CMP	AL,"/"
04F7 75 2E                 0584 	JNZ	ENDTERM
04F9                       0585 GETFACT:
04F9 0A C9                 0586 	OR	CL,CL		;Can we operate on this type?
04FB 74 E6                 0587 	JZ	BADOP
04FD 50                    0588 	PUSH	AX		;Save operator
04FE E8 01 01              0589 	CALL	GETSYM		;Get past operator
0501 E8 27 00              0590 	CALL	FACTOR
0504 0A C0                 0591 	OR	AL,AL
0506 74 DB                 0592 	JZ	BADOP
0508 59                    0593 	POP	CX		;Recover operator
0509 5D                    0594 	POP	BP		;And current value
050A 95                    0595 	XCHG	AX,BP		;Save AH in BP
050B 82 F9 2F              0596 	CMP	CL,"/"		;Do we divide?
050E 75 0E                 0597 	JNZ	DOMUL
0510 0B D2                 0598 	OR	DX,DX		;Dividing by zero?
0512 B1 29                 0599 	MOV	CL,29H
0514 74 51                 0600 	JZ	ERR2
0516 8B DA                 0601 	MOV	BX,DX
0518 33 D2                 0602 	XOR	DX,DX		;Make 32-bit dividend
051A F7 F3                 0603 	DIV	AX,BX
051C EB 02                 0604 	JMPS	NEXFACT
051E                       0605 DOMUL:
051E F7 E2                 0606 	MUL	AX,DX
0520                       0607 NEXFACT:
0520 8B D0                 0608 	MOV	DX,AX		;Result in DX
0522 95                    0609 	XCHG	AX,BP		;Restore flags to AH
0523 B0 FF                 0610 	MOV	AL,-1		;Indicate a number
0525 EB C4                 0611 	JMPS	MULOP
0527                       0612 ENDTERM:
0527 5A                    0613 	POP	DX
0528 8A C1                 0614 	MOV	AL,CL
052A C3                    0615 	RET
052B                       0616 
052B                       0617 FACTOR:
052B A0 76 21              0618 	MOV	AL,[SYM]
052E 3C 01                 0619 	CMP	AL,CONST
0530 74 F8                 0620 	JZ	RET
0532 3C 00                 0621 	CMP	AL,UNDEFID
0534 74 5C                 0622 	JZ	UVAL
0536 3C 28                 0623 	CMP	AL,"("
0538 74 48                 0624 	JZ	PAREN
053A 3C 22                 0625 	CMP	AL,'"'
053C 74 66                 0626 	JZ	STRING
053E 3C 27                 0627 	CMP	AL,"'"
0540 74 62                 0628 	JZ	STRING
0542 3C 03                 0629 	CMP	AL,XREG		;Only 16-bit register may index
0544 B1 14                 0630 	MOV	CL,20
0546 75 1F                 0631 	JNZ	ERR2
0548 F6 C4 01              0632 	TEST	AH,1		;Check to see if indexing is OK
054B B1 01                 0633 	MOV	CL,1
054D 74 18                 0634 	JZ	ERR2
054F 8A C2                 0635 	MOV	AL,DL
0551 B1 03                 0636 	MOV	CL,3
0553 2C 03                 0637 	SUB	AL,3		;Check for BX
0555 74 22                 0638 	JZ	BXJ
0557 2C 02                 0639 	SUB	AL,2		;Check for BP
0559 74 1B                 0640 	JZ	BPJ
055B FE C8                 0641 	DEC	AL		;Check for SI
055D B1 04                 0642 	MOV	CL,4
055F 74 0C                 0643 	JZ	SIJ
0561 FE C8                 0644 	DEC	AL		;Check for DI
0563 74 05                 0645 	JZ	DIJ
0565 B1 02                 0646 	MOV	CL,2		;Invalid base/index register
0567 E9 47 FD              0647 ERR2:	JMP	ERROR
056A                       0648 
056A                       0649 DIJ:
056A 80 CC 20              0650 	OR	AH,20H		;Flag seeing index register DI
056D                       0651 SIJ:
056D F6 C4 10              0652 	TEST	AH,10H		;Check if already seen index register
0570 75 F5                 0653 	JNZ	ERR2
0572 80 CC 10              0654 	OR	AH,10H		;Flag seeing index register
0575 C3                    0655 	RET
0576                       0656 
0576                       0657 BPJ:
0576 80 CC 40              0658 	OR	AH,40H		;Flag seeing base register BP
0579                       0659 BXJ:
0579 F6 C4 80              0660 	TEST	AH,80H		;Check if already seen base register
057C 75 E9                 0661 	JNZ	ERR2
057E 80 CC 80              0662 	OR	AH,80H		;Flag seeing base register
0581 C3                    0663 	RET
0582                       0664 
0582                       0665 PAREN:
0582 E8 7D 00              0666 	CALL	GETSYM		;Eat the "("
0585 E8 12 FF              0667 	CALL	EXPRESSION
0588 82 3E 76 21 29        0668 	CMP	B,[SYM],")"	;Better have closing paren
058D B1 14                 0669 	MOV	CL,20
058F 75 10                 0670 	JNZ	ERR30
0591 C3                    0671 	RET
0592                       0672 
0592                       0673 UVAL:
0592 B1 06                 0674 	MOV	CL,6
0594 F6 C4 08              0675 	TEST	AH,8		;Check if undefined label has been seen
0597 75 08                 0676 	JNZ	ERR30
0599 80 CC 08              0677 	OR	AH,8		;Flag seeing undefined label
059C 89 1E 22 21           0678 	MOV	[UNDEF],BX
05A0 C3                    0679 	RET
05A1                       0680 
05A1 E9 0D FD              0681 ERR30:	JMP	ERROR
05A4                       0682 
05A4                       0683 STRING:
05A4 8A E8                 0684 	MOV	CH,AL
05A6 A0 75 21              0685 	MOV	AL,[CHR]
05A9 3A C5                 0686 	CMP	AL,CH
05AB B1 23                 0687 	MOV	CL,35
05AD 8A D0                 0688 	MOV	DL,AL
05AF B6 00                 0689 	MOV	DH,0
05B1 75 03                 0690 	JNZ	L0003
05B3 E8 32 00              0691 	CALL	ZERLEN
05B6                       0692 L0003:
05B6 E8 37 00              0693 	CALL	GETCHR
05B9 B1 25                 0694 	MOV	CL,37
05BB F6 C4 02              0695 	TEST	AH,2
05BE 74 E1                 0696 	JZ	ERR30
05C0 F6 C4 04              0697 	TEST	AH,4
05C3 B1 26                 0698 	MOV	CL,38
05C5 75 DA                 0699 	JNZ	ERR30
05C7                       0700 STRGDAT:
05C7 8A C2                 0701 	MOV	AL,DL
05C9 3C 0D                 0702 	CMP	AL,EOL
05CB B1 27                 0703 	MOV	CL,39
05CD 74 D2                 0704 	JZ	ERR30
05CF E8 CA 05              0705 	CALL	PUT
05D2 A0 7F 21              0706 	MOV	AL,[DATSIZ]
05D5 0A C0                 0707 	OR	AL,AL
05D7 75 05                 0708 	JNZ	BYTSIZ
05D9 8A C6                 0709 	MOV	AL,DH
05DB E8 BE 05              0710 	CALL	PUT
05DE                       0711 BYTSIZ:
05DE A0 75 21              0712 	MOV	AL,[CHR]
05E1 8A D0                 0713 	MOV	DL,AL
05E3 E8 0A 00              0714 	CALL	GETCHR
05E6 EB DF                 0715 	JP	STRGDAT
05E8                       0716 
05E8                       0717 ZERLEN:
05E8 E8 CB FC              0718 	CALL	NEXTCHR
05EB 3A C5                 0719 	CMP	AL,CH
05ED 75 B2                 0720 	JNZ	ERR30
05EF C3                    0721 	RET
05F0                       0722 
05F0                       0723 GETCHR:
05F0 E8 C3 FC              0724 	CALL	NEXTCHR
05F3 3A C5                 0725 	CMP	AL,CH
05F5 75 F8                 0726 	JNZ	RET
05F7 E8 BC FC              0727 	CALL	NEXTCHR
05FA 3A C5                 0728 	CMP	AL,CH
05FC 74 F1                 0729 	JZ	RET
05FE 5B                    0730 	POP	BX		;Kill return address to STRGDAT loop
05FF B0 FF                 0731 	MOV	AL,-1		;Flag type as constant
0601 C3                    0732 	RET
0602                       0733 
0602                       0734 
0602                       0735 GETSYM:
0602                       0736 
0602                       0737 ; The lexical scanner. Used only in the operand field. Returns with the token
0602                       0738 ; in SYM and AL, sometimes with additional info in BX or DX.
0602                       0739 ;
0602                       0740 ; AL=SYM=0  Undefined label. BX has pointer to information fields.
0602                       0741 ;
0602                       0742 ; AL=SYM=1  Constant (or defined label). DX has value.
0602                       0743 ;
0602                       0744 ; AL=SYM=2,3,4  8-bit register, 16-bit register, or segment register,
0602                       0745 ; respectively. DL has register number.
0602                       0746 ;
0602                       0747 ; AL=SYM=5  A mode flag (such as "B" for byte operation). Type of flag in DL
0602                       0748 ; and also stored in FLAG: -1=no flags, 0=B, 1=W, 2=S, 3=L, 4=T.
0602                       0749 ;
0602                       0750 ; AL=SYM=6  8087 floating point register, ST(n) or ST. DL has register number.
0602                       0751 ;
0602                       0752 ; All other values are the ASCII code of the character. Note that this may
0602                       0753 ; never be a letter or number.
0602                       0754 
0602 50                    0755 	PUSH	AX		;Save AH
0603 E8 21 00              0756 	CALL	GETSY
0606 58                    0757 	POP	AX
0607 A0 76 21              0758 	MOV	AL,[SYM]
060A C3                    0759 	RET
060B                       0760 
060B                       0761 SCANB:
060B A0 75 21              0762 	MOV	AL,[CHR]
060E                       0763 SCANT:
060E 3C 20                 0764 	CMP	AL,' '
0610 74 04                 0765 	JZ	NEXB
0612 3C 09                 0766 	CMP	AL,9
0614 75 F4                 0767 	JNZ	RET
0616                       0768 NEXB:
0616 E8 9D FC              0769 	CALL	NEXTCHR
0619 EB F3                 0770 	JP	SCANT
061B                       0771 
061B                       0772 DOLLAR:
061B 8B 16 12 21           0773 	MOV	DX,[OLDPC]
061F B0 01                 0774 	MOV	AL,CONST
0621 A2 76 21              0775 	MOV	[SYM],AL
0624                       0776 NEXTCHJ:
0624 E9 8F FC              0777 	JMP	NEXTCHR
0627                       0778 
0627                       0779 GETSY:
0627 E8 E1 FF              0780 	CALL	SCANB
062A 3C 24                 0781 	CMP	AL,'$'
062C 74 ED                 0782 	JZ	DOLLAR
062E A2 76 21              0783 	MOV	[SYM],AL
0631 0C 20                 0784 	OR	AL,20H
0633 3C 7B                 0785 	CMP	AL,'z'+1
0635 73 ED                 0786 	JNC	NEXTCHJ
0637 3C 61                 0787 	CMP	AL,'a'
0639 72 03                 0788 	JC	$+5
063B E9 BF 00              0789 	JMP	LETTER
063E 3C 3A                 0790 	CMP	AL,'9'+1
0640 73 E2                 0791 	JNC	NEXTCHJ
0642 3C 30                 0792 	CMP	AL,'0'
0644 72 DE                 0793 	JC	NEXTCHJ
0646 BB 76 21              0794 	MOV	BX,SYM
0649 C6 07 01              0795 	MOV	B,[BX],CONST
064C E8 83 00              0796 	CALL	READID
064F 4B                    0797 	DEC	BX
0650 8A 07                 0798 	MOV	AL,[BX]
0652 B1 07                 0799 	MOV	CL,7
0654 BB 00 00              0800 	MOV	BX,0
0657 3C 68                 0801 	CMP	AL,'h'
0659 75 03                 0802 	JNZ	$+5
065B E9 32 00              0803 	JMP	HEX
065E FE C1                 0804 	INC	CL
0660 C7 06 9C 21 25 21     0805 	MOV	[IX],ID
0666                       0806 DEC:
0666 8B 36 9C 21           0807 	MOV	SI,[IX]
066A 8A 04                 0808 	MOV	AL,[SI]
066C FF 06 9C 21           0809 	INC	[IX]
0670 3C 3A                 0810 	CMP	AL,'9'+1
0672 72 03                 0811 	JC	$+5
0674 E9 3A FC              0812 	JMP	ERROR
0677 2C 30                 0813 	SUB	AL,'0'
0679 8B D3                 0814 	MOV	DX,BX
067B D1 E3                 0815 	SHL	BX
067D D1 E3                 0816 	SHL	BX
067F 03 DA                 0817 	ADD	BX,DX
0681 D1 E3                 0818 	SHL	BX
0683 8A D0                 0819 	MOV	DL,AL
0685 B6 00                 0820 	MOV	DH,0
0687 03 DA                 0821 	ADD	BX,DX
0689 FE CD                 0822 	DEC	CH
068B 75 D9                 0823 	JNZ	DEC
068D 87 DA                 0824 	XCHG	DX,BX
068F C3                    0825 	RET
0690                       0826 
0690                       0827 HEX:
0690 BA 25 21              0828 	MOV	DX,ID
0693 FE CD                 0829 	DEC	CH
0695                       0830 HEX1:
0695 8B F2                 0831 	MOV	SI,DX
0697 AC                    0832 	LODB
0698 42                    0833 	INC	DX
0699 2C 30                 0834 	SUB	AL,'0'
069B 3C 0A                 0835 	CMP	AL,10
069D 72 06                 0836 	JC	GOTIT
069F 3C 37                 0837 	CMP	AL,'g'-'0'
06A1 73 13                 0838 	JNC	ERR4
06A3 2C 27                 0839 	SUB	AL,'a'-10-'0'
06A5                       0840 GOTIT:
06A5 D1 E3                 0841 	SHL	BX
06A7 D1 E3                 0842 	SHL	BX
06A9 D1 E3                 0843 	SHL	BX
06AB D1 E3                 0844 	SHL	BX
06AD 02 D8                 0845 	ADD	BL,AL
06AF FE CD                 0846 	DEC	CH
06B1 75 E2                 0847 	JNZ	HEX1
06B3 87 DA                 0848 	XCHG	DX,BX
06B5 C3                    0849 	RET
06B6                       0850 
06B6 E9 F8 FB              0851 ERR4:	JMP	ERROR
06B9                       0852 
06B9                       0853 GETLET:
06B9 E8 4F FF              0854 	CALL	SCANB
06BC 3C 0D                 0855 	CMP	AL,EOL
06BE F9                    0856 	STC
06BF 74 F4                 0857 	JZ	RET
06C1 3C 3B                 0858 	CMP	AL,';'
06C3 F9                    0859 	STC
06C4 74 EF                 0860 	JZ	RET
06C6 B1 0A                 0861 	MOV	CL,10
06C8 0C 20                 0862 	OR	AL,20H
06CA 3C 61                 0863 	CMP	AL,'a'
06CC 72 E8                 0864 	JC	ERR4
06CE 3C 7B                 0865 	CMP	AL,'z'+1
06D0 73 E4                 0866 	JNC	ERR4
06D2                       0867 READID:
06D2 BB 25 21              0868 	MOV	BX,ID
06D5 B5 00                 0869 	MOV	CH,0
06D7                       0870 MOREID:
06D7 88 07                 0871 	MOV	[BX],AL
06D9 FE C5                 0872 	INC	CH
06DB 43                    0873 	INC	BX
06DC E8 D7 FB              0874 	CALL	NEXTCHR
06DF 3C 30                 0875 	CMP	AL,'0'
06E1 72 0E                 0876 	JC	NOMORE
06E3 0C 20                 0877 	OR	AL,20H
06E5 3C 7B                 0878 	CMP	AL,'z'+1
06E7 73 08                 0879 	JNC	NOMORE
06E9 3C 3A                 0880 	CMP	AL,'9'+1
06EB 72 EA                 0881 	JC	MOREID
06ED 3C 61                 0882 	CMP	AL,'a'
06EF 73 E6                 0883 	JNC	MOREID
06F1                       0884 NOMORE:
06F1 8A C8                 0885 	MOV	CL,AL
06F3 8A C5                 0886 	MOV	AL,CH
06F5 A2 24 21              0887 	MOV	[LENID],AL
06F8 0A C0                 0888 	OR	AL,AL
06FA 8A C1                 0889 	MOV	AL,CL
06FC C3                    0890 	RET
06FD                       0891 
06FD                       0892 LETTER:
06FD E8 D2 FF              0893 	CALL	READID
0700 8A C5                 0894 	MOV	AL,CH
0702 FE C8                 0895 	DEC	AL
0704 75 14                 0896 	JNZ	NOFLG
0706 A0 25 21              0897 	MOV	AL,[ID]
0709 B9 05 00              0898 	MOV	CX,5
070C BF 40 07              0899 	MOV	DI,FLGTAB
070F FC                    0900 	UP
0710 F2                    0901 	REPNE
0711 AE                    0902 	SCAB			;See if one of B,W,S,L,T
0712 74 1A                 0903 	JZ	SAVFLG		;Go save flag
0714 32 C0                 0904 	XOR	AL,AL
0716 8A 2E 24 21           0905 	MOV	CH,[LENID]
071A                       0906 NOFLG:
071A FE C8                 0907 	DEC	AL
071C 53                    0908 	PUSH	BX
071D 75 03                 0909 	JNZ	L0004
071F E8 5A 00              0910 	CALL	REGCHK
0722                       0911 L0004:	
0722 5B                    0912 	POP	BX
0723 8A C6                 0913 	MOV	AL,DH
0725 74 03                 0914 	JZ	SYMSAV
0727 E8 F9 00              0915 	CALL	LOOKRET
072A                       0916 SYMSAV:
072A A2 76 21              0917 	MOV	[SYM],AL
072D C3                    0918 	RET
072E                       0919 
072E                       0920 SAVFLG:
072E 8A D1                 0921 	MOV	DL,CL		;Need flag type in DL
0730 86 0E 16 21           0922 	XCHG	[FLAG],CL
0734 82 F9 FF              0923 	CMP	CL,-1
0737 B1 20                 0924 	MOV	CL,32
0739 B0 05                 0925 	MOV	AL,5
073B 74 ED                 0926 	JZ	SYMSAV
073D E9 71 FB              0927 ERRJ3:	JMP	ERROR
0740                       0928 
0740 74 6C 73 77 62        0929 FLGTAB:	DB	"tlswb"
0745                       0930 
0745                       0931 FPREG:
0745                       0932 ;Have detected "ST" for 8087 floating point stack register
0745 B2 00                 0933 	MOV	DL,0		;Default is ST(0)
0747 E8 C1 FE              0934 	CALL	SCANB		;Get next character
074A 3C 28                 0935 	CMP	AL,"("		;Specifying register number?
074C 75 29                 0936 	JNZ	HAVREG
074E                       0937 ;Get register number
074E E8 65 FB              0938 	CALL	NEXTCHR		;Skip over the "("
0751 E8 74 FC              0939 	CALL	GETOP		;A little recursion never hurt anybody
0754 3C 01                 0940 	CMP	AL,CONST	;Better have found a constant
0756 B1 14                 0941 	MOV	CL,20		;Operand error if not
0758 75 E3                 0942 	JNZ	ERRJ3
075A 83 3E 1E 21 00        0943 	CMP	[DLABEL],0	;Constant must be defined
075F B1 1E                 0944 	MOV	CL,30
0761 75 DA                 0945 	JNZ	ERRJ3
0763 8B 16 1C 21           0946 	MOV	DX,[DATA]	;Get constant
0767 83 FA 07              0947 	CMP	DX,7		;Constant must be in range 0-7
076A B1 1F                 0948 	MOV	CL,31
076C 77 CF                 0949 	JA	ERRJ3
076E A0 76 21              0950 	MOV	AL,[SYM]
0771 3C 29                 0951 	CMP	AL,")"
0773 B1 18                 0952 	MOV	CL,24
0775 75 C6                 0953 	JNZ	ERRJ3
0777                       0954 HAVREG:
0777 B6 06                 0955 	MOV	DH,FREG
0779 32 C0                 0956 	XOR	AL,AL		;Zero set means register found
077B C3                    0957 	RET
077C                       0958 
077C                       0959 REGCHK:
077C BB 25 21              0960 	MOV	BX,ID
077F 81 3F 73 74           0961 	CMP	[BX],"s"+7400H	;"st"
0783 74 C0                 0962 	JZ	FPREG
0785 8A 0F                 0963 	MOV	CL,[BX]
0787 43                    0964 	INC	BX
0788 8A 07                 0965 	MOV	AL,[BX]
078A BB E7 07              0966 	MOV	BX,REGTAB
078D B6 03                 0967 	MOV	DH,XREG
078F B2 00                 0968 	MOV	DL,0
0791 3C 78                 0969 	CMP	AL,'x'
0793 74 3B                 0970 	JZ	SCANREG
0795 B6 02                 0971 	MOV	DH,REG
0797 3C 6C                 0972 	CMP	AL,'l'
0799 74 35                 0973 	JZ	SCANREG
079B B2 04                 0974 	MOV	DL,4
079D 3C 68                 0975 	CMP	AL,'h'
079F 74 2F                 0976 	JZ	SCANREG
07A1 B6 04                 0977 	MOV	DH,SREG
07A3 B2 00                 0978 	MOV	DL,0
07A5 BB EB 07              0979 	MOV	BX,SEGTAB
07A8 3C 73                 0980 	CMP	AL,'s'
07AA 74 24                 0981 	JZ	SCANREG
07AC B6 03                 0982 	MOV	DH,XREG
07AE 3C 70                 0983 	CMP	AL,'p'
07B0 74 11                 0984 	JZ	PREG
07B2 3C 69                 0985 	CMP	AL,'i'
07B4 75 C5                 0986 	JNZ	RET
07B6 B2 06                 0987 	MOV	DL,6
07B8 8A C1                 0988 	MOV	AL,CL
07BA 3C 73                 0989 	CMP	AL,'s'
07BC 74 BD                 0990 	JZ	RET
07BE FE C2                 0991 	INC	DL
07C0 3C 64                 0992 	CMP	AL,'d'
07C2 C3                    0993 	RET
07C3                       0994 PREG:
07C3 B2 04                 0995 	MOV	DL,4
07C5 8A C1                 0996 	MOV	AL,CL
07C7 3C 73                 0997 	CMP	AL,'s'
07C9 74 F7                 0998 	JZ	RET
07CB FE C2                 0999 	INC	DL
07CD 3C 62                 1000 	CMP	AL,'b'
07CF C3                    1001 	RET
07D0                       1002 SCANREG:
07D0 8A C1                 1003 	MOV	AL,CL
07D2 B9 04 00              1004 	MOV	CX,4
07D5 FC                    1005 	UP
07D6 8B FB                 1006 	MOV	DI,BX
07D8 F2                    1007 	REPNZ
07D9 AE                    1008 	SCAB
07DA 8B DF                 1009 	MOV	BX,DI
07DC 75 F1                 1010 	JNZ	RET
07DE 8A C1                 1011 	MOV	AL,CL
07E0 02 C2                 1012 	ADD	AL,DL
07E2 8A D0                 1013 	MOV	DL,AL
07E4 32 C0                 1014 	XOR	AL,AL
07E6 C3                    1015 	RET
07E7                       1016 
07E7 62 64 63 61           1017 REGTAB:	DB	'bdca'
07EB                       1018 
07EB 64 73 63 65           1019 SEGTAB:	DB	'dsce'
07EF                       1020 
07EF                       1021 LOOK:
07EF 8A 2F                 1022 	MOV	CH,[BX]
07F1 43                    1023 	INC	BX
07F2 BA 25 21              1024 	MOV	DX,ID
07F5 E8 FA 00              1025 	CALL	CPSLP
07F8 74 EC                 1026 	JZ	RET
07FA 34 80                 1027 	XOR	AL,80H
07FC D0 C0                 1028 	ROL	AL		;Make end-of-symbol bit least significant
07FE 8A C8                 1029 	MOV	CL,AL
0800 4B                    1030 	DEC	BX
0801 8A 07                 1031 	MOV	AL,[BX]
0803 34 80                 1032 	XOR	AL,80H
0805 D0 C0                 1033 	ROL	AL
0807 3A C1                 1034 	CMP	AL,CL
0809 73 04                 1035 	JNC	SMALL
080B FE C5                 1036 	INC	CH
080D FE C5                 1037 	INC	CH
080F                       1038 SMALL:
080F 8A D5                 1039 	MOV	DL,CH
0811 B6 00                 1040 	MOV	DH,0
0813 03 DA                 1041 	ADD	BX,DX
0815 8B 17                 1042 	MOV	DX,[BX]
0817 43                    1043 	INC	BX
0818 8A C2                 1044 	MOV	AL,DL
081A 0A C6                 1045 	OR	AL,DH
081C F9                    1046 	STC
081D 74 C7                 1047 	JZ	RET
081F 87 DA                 1048 	XCHG	DX,BX
0821 EB CC                 1049 	JP	LOOK
0823                       1050 
0823                       1051 LOOKRET:
0823 8A C5                 1052 	MOV	AL,CH
0825 3C 03                 1053 	CMP	AL,3	;RET has 3 letters
0827 75 4F                 1054 	JNZ	LOOKUP
0829 4B                    1055 	DEC	BX
082A 80 0F 80              1056 	OR	B,[BX],080H
082D BA C5 20              1057 	MOV	DX,RETSTR+2
0830                       1058 CHKRET:
0830 8B F2                 1059 	MOV	SI,DX
0832 AC                    1060 	LODB
0833 3A 07                 1061 	CMP	AL,[BX]
0835 75 45                 1062 	JNZ	LOOKIT
0837 4B                    1063 	DEC	BX
0838 4A                    1064 	DEC	DX
0839 FE CD                 1065 	DEC	CH
083B 75 F3                 1066 	JNZ	CHKRET
083D 8B 16 94 21           1067 	MOV	DX,[LSTRET]
0841 8A C2                 1068 	MOV	AL,DL
0843 22 C6                 1069 	AND	AL,DH
0845 FE C0                 1070 	INC	AL
0847 74 0F                 1071 	JZ	ALLRET
0849 8B 1E 10 21           1072 	MOV	BX,[PC]
084D 2B DA                 1073 	SUB	BX,DX
084F 8A C3                 1074 	MOV	AL,BL
0851 98                    1075 	CBW
0852 3B C3                 1076 	CMP	AX,BX		;Signed 8-bit number?
0854 B0 01                 1077 	MOV	AL,1
0856 74 8E                 1078 	JZ	RET
0858                       1079 ALLRET:
0858 8B 1E 96 21           1080 	MOV	BX,[RETPT]
085C 8A C7                 1081 	MOV	AL,BH
085E 0A C3                 1082 	OR	AL,BL
0860 B0 00                 1083 	MOV	AL,0
0862 75 82                 1084 	JNZ	RET
0864 8B 1E 79 21           1085 	MOV	BX,[HEAP]
0868 4B                    1086 	DEC	BX
0869 4B                    1087 	DEC	BX
086A 4B                    1088 	DEC	BX
086B 89 1E 79 21           1089 	MOV	[HEAP],BX
086F 32 C0                 1090 	XOR	AL,AL
0871 88 07                 1091 	MOV	[BX],AL
0873 89 1E 96 21           1092 	MOV	[RETPT],BX
0877 C3                    1093 	RET
0878                       1094 
0878                       1095 LOOKUP:
0878 4B                    1096 	DEC	BX
0879 80 0F 80              1097 	OR	B,[BX],080H
087C                       1098 LOOKIT:
087C 8B 1E 77 21           1099 	MOV	BX,[BASE]
0880 8A C7                 1100 	MOV	AL,BH
0882 0A C3                 1101 	OR	AL,BL
0884 74 1E                 1102 	JZ	EMPTY
0886 E8 66 FF              1103 	CALL	LOOK
0889 72 10                 1104 	JC	ENTER
088B BA 04 00              1105 	MOV	DX,4
088E 03 DA                 1106 	ADD	BX,DX
0890 8A 07                 1107 	MOV	AL,[BX]
0892 0A C0                 1108 	OR	AL,AL
0894 74 E1                 1109 	JZ	RET
0896 43                    1110 	INC	BX
0897 8B 17                 1111 	MOV	DX,[BX]
0899 43                    1112 	INC	BX
089A C3                    1113 	RET
089B                       1114 
089B                       1115 ENTER:
089B 53                    1116 	PUSH	BX		;Save pointer to link field
089C E8 0D 00              1117 	CALL	CREATE		;Add the node
089F 5E                    1118 	POP	SI
08A0 89 54 FF              1119 	MOV	[SI-1],DX	;Link new node
08A3 C3                    1120 	RET			;Zero was set by CREATE
08A4                       1121 
08A4                       1122 EMPTY:
08A4 E8 05 00              1123 	CALL	CREATE
08A7 89 16 77 21           1124 	MOV	[BASE],DX
08AB C3                    1125 	RET
08AC                       1126 
08AC                       1127 
08AC                       1128 CREATE:
08AC                       1129 
08AC                       1130 ; Add a new node to the identifier tree. The identifier is at ID with
08AC                       1131 ; bit 7 of the last character set to one. The length of the identifier is
08AC                       1132 ; in LENID, which is ID-1.
08AC                       1133 ;
08AC                       1134 ; Node format:
08AC                       1135 ;	1. Length of identifier (1 byte)
08AC                       1136 ;	2. Identifier (1-80 bytes)
08AC                       1137 ;	3. Left link (2-byte pointer to alphabetically smaller identifiers)
08AC                       1138 ;	4. Right link (0 if none larger)
08AC                       1139 ;	5. Data field:
08AC                       1140 ;	   a. Defined flag (0=undefined, 1=defined)
08AC                       1141 ;	   b. Value (2 bytes)
08AC                       1142 ;
08AC                       1143 ; This routine returns with AL=zero and zero flag set (which indicates
08AC                       1144 ; on return from LOOKUP that it has not yet been defined), DX points
08AC                       1145 ; to start of new node, and BX points to data field of new node.
08AC                       1146 
08AC A0 24 21              1147 	MOV	AL,[LENID]
08AF 04 08                 1148 	ADD	AL,8		;Storage needed for the node
08B1 8B 1E 79 21           1149 	MOV	BX,[HEAP]
08B5 8A D0                 1150 	MOV	DL,AL
08B7 B6 00                 1151 	MOV	DH,0
08B9 2B DA                 1152 	SUB	BX,DX		;Heap grows downward
08BB 89 1E 79 21           1153 	MOV	[HEAP],BX
08BF 87 DA                 1154 	XCHG	DX,BX
08C1 8B 1E 7D 21           1155 	MOV	BX,[CODE]	;Check to make sure there's enough
08C5 3B DA                 1156 	CMP	BX,DX
08C7 72 03                 1157 	JB	$+5
08C9 E9 A7 F9              1158 	JMP	ABORT
08CC 52                    1159 	PUSH	DX
08CD BB 24 21              1160 	MOV	BX,LENID
08D0 8A 0F                 1161 	MOV	CL,[BX]
08D2 FE C1                 1162 	INC	CL
08D4 B5 00                 1163 	MOV	CH,0
08D6 FC                    1164 	UP
08D7 8B F3                 1165 	MOV	SI,BX
08D9 8B FA                 1166 	MOV	DI,DX
08DB F3                    1167 	REP
08DC A4                    1168 	MOVB			;Move identifier and length into node
08DD 8B D7                 1169 	MOV	DX,DI
08DF 8B DE                 1170 	MOV	BX,SI
08E1 B5 04                 1171 	MOV	CH,4
08E3 87 DA                 1172 	XCHG	DX,BX
08E5                       1173 NILIFY:
08E5 88 0F                 1174 	MOV	[BX],CL		;Zero left and right links
08E7 43                    1175 	INC	BX
08E8 FE CD                 1176 	DEC	CH
08EA 75 F9                 1177 	JNZ	NILIFY
08EC 32 C0                 1178 	XOR	AL,AL		;Set zero flag
08EE 88 07                 1179 	MOV	[BX],AL		;Zero defined flag
08F0 5A                    1180 	POP	DX		;Restore pointer to node
08F1 C3                    1181 	RET
08F2                       1182 
08F2                       1183 CPSLP:
08F2 8B F2                 1184 	MOV	SI,DX
08F4 AC                    1185 	LODB
08F5 3A 07                 1186 	CMP	AL,[BX]
08F7 9F                    1187 	LAHF
08F8 42                    1188 	INC	DX
08F9 43                    1189 	INC	BX
08FA 9E                    1190 	SAHF
08FB 75 F4                 1191 	JNZ	RET
08FD FE CD                 1192 	DEC	CH
08FF 75 F1                 1193 	JNZ	CPSLP
0901 C3                    1194 	RET
0902                       1195 
0902                       1196 GETLAB:
0902 BB 00 00              1197 	MOV	BX,0
0905 89 1E 14 21           1198 	MOV	[LABPT],BX
0909 C6 06 16 21 FF        1199 	MOV	B,[FLAG],-1
090E B6 00                 1200 	MOV	DH,0
0910 A0 75 21              1201 	MOV	AL,[CHR]
0913 3C 21                 1202 	CMP	AL,' '+1
0915 72 03                 1203 	JC	NOT1
0917 80 CE 01              1204 	OR	DH,001H
091A                       1205 NOT1:
091A E8 9C FD              1206 	CALL	GETLET
091D 72 E2                 1207 	JC	RET
091F 3C 3A                 1208 	CMP	AL,':'
0921 75 05                 1209 	JNZ	LABCHK
0923 E8 90 F9              1210 	CALL	NEXTCHR
0926 EB 07                 1211 	JP	LABEL
0928                       1212 LABCHK:
0928 0A C0                 1213 	OR	AL,AL
092A F6 C6 01              1214 	TEST	DH,001H
092D 74 D2                 1215 	JZ	RET
092F                       1216 LABEL:
092F A0 91 21              1217 	MOV	AL,[CHKLAB]
0932 0A C0                 1218 	OR	AL,AL
0934 74 03                 1219 	JZ	$+5
0936 E9 80 FD              1220 	JMP	GETLET
0939 E8 3C FF              1221 	CALL	LOOKUP
093C B1 0B                 1222 	MOV	CL,11
093E 75 11                 1223 	JNZ	ERR5
0940 8B 16 10 21           1224 	MOV	DX,[PC]
0944 C6 07 01              1225 	MOV	B,[BX],1
0947 43                    1226 	INC	BX
0948 89 17                 1227 	MOV	[BX],DX
094A 89 1E 14 21           1228 	MOV	[LABPT],BX
094E E9 68 FD              1229 	JMP	GETLET
0951                       1230 
0951 E9 5D F9              1231 ERR5:	JMP	ERROR
0954                       1232 
0954                       1233 ASMLIN:
0954 C6 06 17 21 01        1234 	MOV	B,[MAXFLG],1	;Allow only B and W flags normally
0959 8B 1E 10 21           1235 	MOV	BX,[PC]
095D 89 1E 12 21           1236 	MOV	[OLDPC],BX
0961 E8 9E FF              1237 	CALL	GETLAB
0964 73 03                 1238 	JNC	$+5
0966 E9 E8 F8              1239 	JMP	ENDLN
0969 BB 24 21              1240 	MOV	BX,LENID
096C 8A 07                 1241 	MOV	AL,[BX]
096E B1 0C                 1242 	MOV	CL,12
0970 2C 02                 1243 	SUB	AL,2
0972 8A E8                 1244 	MOV	CH,AL
0974 72 DB                 1245 	JC	ERR5
0976 43                    1246 	INC	BX
0977 82 3F 66              1247 	CMP	B,[BX],"f"	;See if an 8087 mnemonic
097A 74 4C                 1248 	JZ	NDPOP
097C 3C 05                 1249 	CMP	AL,5
097E 73 D1                 1250 	JNC	ERR5
0980 8A 07                 1251 	MOV	AL,[BX]
0982 2C 61                 1252 	SUB	AL,'a'
0984 8A C8                 1253 	MOV	CL,AL
0986 02 C0                 1254 	ADD	AL,AL
0988 02 C0                 1255 	ADD	AL,AL
098A 02 C1                 1256 	ADD	AL,CL
098C 02 C5                 1257 	ADD	AL,CH
098E 02 C0                 1258 	ADD	AL,AL
0990 BB EC 1A              1259 	MOV	BX,OPTAB
0993 8A D0                 1260 	MOV	DL,AL
0995 B6 00                 1261 	MOV	DH,0
0997 03 DA                 1262 	ADD	BX,DX
0999 8B 1F                 1263 	MOV	BX,[BX]
099B FE C5                 1264 	INC	CH
099D 8A CD                 1265 	MOV	CL,CH
099F 8A 27                 1266 	MOV	AH,[BX]
09A1 43                    1267 	INC	BX
09A2 0A E4                 1268 	OR	AH,AH
09A4 74 18                 1269 	JZ	OPERR
09A6                       1270 FINDOP:
09A6 8A E9                 1271 	MOV	CH,CL
09A8 BA 26 21              1272 	MOV	DX,ID+1
09AB 95                    1273 	XCHG	AX,BP		;Save count of opcodes in BP
09AC E8 43 FF              1274 	CALL	CPSLP
09AF 74 12                 1275 	JZ	HAVOP
09B1 95                    1276 	XCHG	AX,BP
09B2 B6 00                 1277 	MOV	DH,0
09B4 8A D5                 1278 	MOV	DL,CH
09B6 42                    1279 	INC	DX
09B7 42                    1280 	INC	DX
09B8 03 DA                 1281 	ADD	BX,DX
09BA FE CC                 1282 	DEC	AH
09BC 75 E8                 1283 	JNZ	FINDOP
09BE                       1284 OPERR:
09BE B1 0C                 1285 	MOV	CL,12
09C0 E9 EE F8              1286 	JMP	ERROR
09C3                       1287 
09C3                       1288 HAVOP:
09C3 8A 47 02              1289 	MOV	AL,[BX+2]	;Get opcode
09C6 FF 27                 1290 	JMP	[BX]
09C8                       1291 
09C8                       1292 NDPOP:	;First letter is "F" so must be 8087 opcode ("Numeric Data Processor")
09C8 C6 06 17 21 04        1293 	MOV	B,[MAXFLG],4	;Allow all type flags
09CD 43                    1294 	INC	BX
09CE 82 3F 6E              1295 	CMP	B,[BX],"n"	;"No-wait" form?
09D1 B4 00                 1296 	MOV	AH,0
09D3 75 05                 1297 	JNZ	SAVNFLG
09D5 B4 01                 1298 	MOV	AH,1
09D7 FE C8                 1299 	DEC	AL
09D9 43                    1300 	INC	BX		;Skip over the "N"
09DA                       1301 SAVNFLG:
09DA 88 26 9B 21           1302 	MOV	[NOWAIT],AH	;0 for wait, 1 for no wait
09DE 3C 01                 1303 	CMP	AL,1
09E0 72 DC                 1304 	JB	OPERR		;Not enough char left for valid opcode?
09E2 3C 05                 1305 	CMP	AL,5
09E4 77 D8                 1306 	JA	OPERR		;Too many?
09E6 98                    1307 	CBW
09E7 92                    1308 	XCHG	AX,DX		;Save length in DX
09E8 8B F2                 1309 	MOV	SI,DX
09EA 80 08 80              1310 	OR	B,[SI+BX],80H	;Set high bit of last character
09ED 8A 07                 1311 	MOV	AL,[BX]		;Get first char of opcode
09EF 43                    1312 	INC	BX
09F0 2C 61                 1313 	SUB	AL,"a"
09F2 72 28                 1314 	JB	TRY2XM1		;Go see if opcode starts with "2"
09F4 3C 19                 1315 	CMP	AL,"z"-"a"
09F6 77 C6                 1316 	JA	OPERR
09F8 98                    1317 	CBW
09F9 D1 E0                 1318 	SHL	AX		;Double to index into address table
09FB 96                    1319 	XCHG	AX,SI		;Put in index register
09FC 8B BC F0 1B           1320 	MOV	DI,[SI+NDPTAB]	;Get start of opcode table for this letter
0A00                       1321 LOOKNDP:
0A00 8A 25                 1322 	MOV	AH,[DI]		;Number of opcodes starting with this letter
0A02 0A E4                 1323 	OR	AH,AH
0A04 74 B8                 1324 	JZ	OPERR		;Any start with this letter?
0A06                       1325 FNDNDP:
0A06 47                    1326 	INC	DI
0A07 8B F3                 1327 	MOV	SI,BX		;Pointer to start of opcode
0A09 8B CA                 1328 	MOV	CX,DX		;Get length of opcode
0A0B F3                    1329 	REPE
0A0C A6                    1330 	CMPB			;Compare opcode to table entry
0A0D 74 38                 1331 	JZ	HAVNDP
0A0F 4F                    1332 	DEC	DI		;Back up in case that was last letter
0A10 B0 80                 1333 	MOV	AL,80H		;Look for char with high bit set
0A12                       1334 ENDOP:
0A12 AE                    1335 	SCASB
0A13 77 FD                 1336 	JA	ENDOP
0A15 47                    1337 	INC	DI		;Skip over info about opcode
0A16 FE CC                 1338 	DEC	AH
0A18 75 EC                 1339 	JNZ	FNDNDP
0A1A EB A2                 1340 OPERRJ:	JP	OPERR
0A1C                       1341 
0A1C                       1342 TRY2XM1:
0A1C 3C D1                 1343 	CMP	AL,"2"-"a"
0A1E 75 9E                 1344 	JNZ	OPERR
0A20 BF 7A 19              1345 	MOV	DI,XM1
0A23 EB DB                 1346 	JP	LOOKNDP
0A25                       1347 
0A25                       1348 SPECIALOP:
0A25 24 07                 1349 	AND	AL,7		;Mask to special op number
0A27 74 16                 1350 	JZ	FWAIT		;If zero, go handle FWAIT
0A29                       1351 ;Handle FNOP
0A29 82 3E 9B 21 00        1352 	CMP	B,[NOWAIT],0	;Was "N" present (If not opcode was "FOP")
0A2E 74 8E                 1353 	JZ	OPERR
0A30 B0 9B                 1354 	MOV	AL,9BH		;Need Wait opcode after all
0A32 E8 67 01              1355 	CALL	PUT
0A35 B0 D9                 1356 	MOV	AL,0D9H
0A37 E8 62 01              1357 	CALL	PUT
0A3A B0 D0                 1358 	MOV	AL,0D0H
0A3C E9 5D 01              1359 	JMP	PUT
0A3F                       1360 
0A3F                       1361 FWAIT:
0A3F 82 3E 9B 21 00        1362 	CMP	B,[NOWAIT],0	;"FNWAIT" not legal
0A44 75 D4                 1363 	JNZ	OPERRJ
0A46 C3                    1364 	RET			;Nothing to do - "WAIT" already sent
0A47                       1365 
0A47                       1366 HAVNDP:
0A47 8B F7                 1367 	MOV	SI,DI
0A49 82 3E 9B 21 00        1368 	CMP	B,[NOWAIT],0
0A4E 75 05                 1369 	JNZ	NWAIT
0A50 B0 9B                 1370 	MOV	AL,9BH		;Wait opcode
0A52 E8 47 01              1371 	CALL	PUT
0A55                       1372 NWAIT:
0A55 AD                    1373 	LODW			;Get opcode info
0A56 A8 F8                 1374 	TEST	AL,0F8H		;Any operand bits set?
0A58 74 66                 1375 	JZ	NOOPS		;If no operands, output code
0A5A A8 78                 1376 	TEST	AL,78H		;Special case?
0A5C 74 C7                 1377 	JZ	SPECIALOP
0A5E 50                    1378 	PUSH	AX
0A5F E8 A0 FB              1379 	CALL	GETSYM		;See if any operands
0A62 59                    1380 	POP	CX
0A63 3C 3B                 1381 	CMP	AL,";"
0A65 74 52                 1382 	JZ	NOOPCHK
0A67 3C 0D                 1383 	CMP	AL,EOL
0A69 74 4E                 1384 	JZ	NOOPCHK
0A6B 3C 06                 1385 	CMP	AL,FREG		;Is it 8087 register?
0A6D 75 6F                 1386 	JNZ	MEMOP
0A6F 91                    1387 	XCHG	AX,CX
0A70 A8 40                 1388 	TEST	AL,ONEREG	;One register OK as operand?
0A72 75 36                 1389 	JNZ	PUTREG		;Yes - save it
0A74 A8 20                 1390 	TEST	AL,20H		;Memory-only operation?
0A76 B1 14                 1391 	MOV	CL,20
0A78 75 61                 1392 	JNZ	ERRJ4
0A7A A8 18                 1393 	TEST	AL,18H		;Two-register operation?
0A7C 7A 5D                 1394 	JPE	ERRJ4		;Must be exactly one bit set
0A7E 52                    1395 	PUSH	DX		;Save register number
0A7F 50                    1396 	PUSH	AX		;Save opcode
0A80 E8 7F FB              1397 	CALL	GETSYM
0A83 3C 2C                 1398 	CMP	AL,","
0A85 B1 15                 1399 	MOV	CL,15H
0A87 75 52                 1400 	JNZ	ERRJ4
0A89 E8 76 FB              1401 	CALL	GETSYM
0A8C B1 14                 1402 	MOV	CL,20
0A8E 3C 06                 1403 	CMP	AL,FREG
0A90 75 49                 1404 	JNZ	ERRJ4
0A92 58                    1405 	POP	AX
0A93 5B                    1406 	POP	BX
0A94 34 02                 1407 	XOR	AL,2		;Flip "POP" bit
0A96 24 FB                 1408 	AND	AL,0FBH		;Reset direction bit to ST(0)
0A98 0A DB                 1409 	OR	BL,BL		;Is first register ST(0)?
0A9A 74 0A                 1410 	JZ	ST0DEST
0A9C 87 DA                 1411 	XCHG	DX,BX
0A9E 0A DB                 1412 	OR	BL,BL		;One of these must be ST(0)
0AA0 75 39                 1413 	JNZ	ERRJ4
0AA2 34 04                 1414 	XOR	AL,4		;Flip direction
0AA4 EB 04                 1415 	JMPS	PUTREG
0AA6                       1416 ST0DEST:
0AA6 A8 02                 1417 	TEST	AL,2		;Is POP bit set?
0AA8 75 31                 1418 	JNZ	ERRJ4		;Don't allow destination ST(0) then pop
0AAA                       1419 PUTREG:
0AAA 80 E4 F8              1420 	AND	AH,0F8H		;Zero out register field
0AAD 0A E2                 1421 	OR	AH,DL
0AAF 80 CC C0              1422 	OR	AH,0C0H
0AB2 50                    1423 	PUSH	AX
0AB3 E8 4C FB              1424 	CALL	GETSYM		;Get to next symbol
0AB6 58                    1425 	POP	AX
0AB7 EB 07                 1426 	JMPS	NOOPS
0AB9                       1427 
0AB9                       1428 NOOPCHK:
0AB9 91                    1429 	XCHG	AX,CX
0ABA A8 80                 1430 	TEST	AL,80H		;Is no operands OK?
0ABC B1 14                 1431 	MOV	CL,20
0ABE 75 1B                 1432 	JNZ	ERRJ4
0AC0                       1433 NOOPS:
0AC0                       1434 ;First test for FDIV or FSUB and reverse "R" bit if "D" bit is set
0AC0 50                    1435 	PUSH	AX
0AC1 25 05 E0              1436 	AND	AX,0E005H
0AC4 3D 04 E0              1437 	CMP	AX,0E004H
0AC7 58                    1438 	POP	AX
0AC8 75 03                 1439 	JNZ	NOREV
0ACA 80 F4 08              1440 	XOR	AH,8		;Reverse "R" bit
0ACD                       1441 NOREV:
0ACD 24 07                 1442 	AND	AL,7
0ACF 0C D8                 1443 	OR	AL,0D8H		;ESC hook
0AD1 E8 C8 00              1444 	CALL	PUT
0AD4 8A C4                 1445 	MOV	AL,AH
0AD6 E9 C3 00              1446 	JMP	PUT
0AD9                       1447 
0AD9                       1448 BADFLAG:
0AD9 B1 20                 1449 	MOV	CL,20H
0ADB E9 D3 F7              1450 ERRJ4:	JMP	ERROR
0ADE                       1451 
0ADE                       1452 MEMOP:
0ADE 51                    1453 	PUSH	CX		;Save opcode
0ADF E8 E9 F8              1454 	CALL	GETOP1		;Get memory operand
0AE2 3C 00                 1455 	CMP	AL,UNDEFID	;Is it?
0AE4 B1 14                 1456 	MOV	CL,20
0AE6 75 F3                 1457 	JNZ	ERRJ4
0AE8 58                    1458 	POP	AX
0AE9 A8 20                 1459 	TEST	AL,20H		;Does it have memory format field?
0AEB 75 08                 1460 	JNZ	GETFORMAT
0AED A8 08                 1461 	TEST	AL,8		;Check if any memory operand legal
0AEF 74 EA                 1462 	JZ	ERRJ4
0AF1 A8 10                 1463 	TEST	AL,10H		;Check for 2-op arithmetic
0AF3 75 1E                 1464 	JNZ	PUTMEM		;If not, just use as plain memory op
0AF5                       1465 GETFORMAT:
0AF5 24 F9                 1466 	AND	AL,0F9H		;Zero memory format bits
0AF7 8A 0E 16 21           1467 	MOV	CL,[FLAG]
0AFB FE C9                 1468 	DEC	CL		;Must now be in range 0-3
0AFD 7C DA                 1469 	JL	BADFLAG
0AFF 8A E8                 1470 	MOV	CH,AL		;Save opcode byte
0B01 D0 E8                 1471 	SHR	AL		;Put format bits in bits 2 & 3
0B03 24 0C                 1472 	AND	AL,0CH
0B05 0A C1                 1473 	OR	AL,CL		;Combine format bits with flag
0B07 BB 23 0B              1474 	MOV	BX,FORMATTAB
0B0A D7                    1475 	XLAT
0B0B 0A C0                 1476 	OR	AL,AL		;Valid combination?
0B0D 78 CA                 1477 	JS	BADFLAG
0B0F 0A E0                 1478 	OR	AH,AL		;Possibly set new bits in second byte
0B11 0A C5                 1479 	OR	AL,CH		;Set memory format bits
0B13                       1480 PUTMEM:
0B13 24 07                 1481 	AND	AL,7
0B15 0C D8                 1482 	OR	AL,0D8H
0B17 E8 82 00              1483 	CALL	PUT
0B1A 8A C4                 1484 	MOV	AL,AH
0B1C 24 38                 1485 	AND	AL,38H
0B1E 0A C2                 1486 	OR	AL,DL		;Combine addressing mode
0B20 E9 39 01              1487 	JMP	PUTADD
0B23                       1488 
0B23                       1489 FORMATTAB:
0B23                       1490 ;There are 16 entries in this table. The 4-bit index is built like this:
0B23                       1491 ;	Bit 3		0 for normal memory ops, 1 if extended is OK
0B23                       1492 ;	Bit 2		0 for integer, 1 for real
0B23                       1493 ;	Bit 0 & 1	Flag: 00=W, 01=S, 10=L, 11=T
0B23                       1494 ;
0B23                       1495 ;The entries in the table are used as two 3-bit fields. Bits 0-2 are ORed
0B23                       1496 ;into the first byte of the opcode for the Memory Format field. Bits 3-6
0B23                       1497 ;are ORed into the second byte to modify the opcode for extended operands.
0B23                       1498 ;If bit 7 is set, then that combination is illegal.
0B23                       1499 
0B23 06 02 80 80           1500 	DB	6,2,80H,80H	;Normal integers
0B27 80 00 04 80           1501 	DB	80H,0,4,80H	;Normal reals
0B2B 06 02 2E 80           1502 	DB	6,2,2EH,80H	;Extended integers
0B2F 80 00 04 2B           1503 	DB	80H,0,4,2BH	;Extended reals
0B33                       1504 
0B33                       1505 GRP1:
0B33 B9 09 8A              1506 	MOV	CX,8A09H
0B36 E8 B3 F7              1507 	CALL	MROPS
0B39 B9 C6 00              1508 	MOV	CX,0C6H
0B3C 8A C7                 1509 	MOV	AL,BH
0B3E 3C 00                 1510 	CMP	AL,UNDEFID
0B40 75 03                 1511 	JNZ	L0006
0B42 E8 3C 00              1512 	CALL	STIMM
0B45                       1513 L0006:	
0B45 24 01                 1514 	AND	AL,1
0B47 74 0A                 1515 	JZ	BYTIMM
0B49 B0 B8                 1516 	MOV	AL,0B8H
0B4B 0A C3                 1517 	OR	AL,BL
0B4D E8 4C 00              1518 	CALL	PUT
0B50 E9 98 00              1519 	JMP	PUTWOR
0B53                       1520 
0B53                       1521 BYTIMM:
0B53 B0 B0                 1522 	MOV	AL,0B0H
0B55 0A C3                 1523 	OR	AL,BL
0B57 E8 42 00              1524 	CALL	PUT
0B5A E9 95 00              1525 PUTBJ:	JMP	PUTBYT
0B5D                       1526 
0B5D                       1527 IMMED:
0B5D 8A C7                 1528 	MOV	AL,BH
0B5F 3C 00                 1529 	CMP	AL,UNDEFID
0B61 74 1E                 1530 	JZ	STIMM
0B63 8A C3                 1531 	MOV	AL,BL
0B65 0A C0                 1532 	OR	AL,AL
0B67 74 32                 1533 	JZ	RET
0B69 8A C7                 1534 	MOV	AL,BH
0B6B E8 1E 00              1535 	CALL	IMM
0B6E 0C C0                 1536 	OR	AL,0C0H
0B70 E8 29 00              1537 	CALL	PUT
0B73                       1538 FINIMM:
0B73 8A C1                 1539 	MOV	AL,CL
0B75 59                    1540 	POP	CX
0B76 A8 01                 1541 	TEST	AL,1
0B78 74 E0                 1542 	JZ	PUTBJ
0B7A 3C 83                 1543 	CMP	AL,83H
0B7C 74 DC                 1544 	JZ	PUTBJ
0B7E E9 6A 00              1545 	JMP	PUTWOR
0B81                       1546 
0B81                       1547 STIMM:
0B81 A0 16 21              1548 	MOV	AL,[FLAG]
0B84 E8 05 00              1549 	CALL	IMM
0B87 E8 D2 00              1550 	CALL	PUTADD
0B8A EB E7                 1551 	JP	FINIMM
0B8C                       1552 
0B8C                       1553 IMM:
0B8C 24 01                 1554 	AND	AL,1
0B8E 0A C1                 1555 	OR	AL,CL
0B90 8A C8                 1556 	MOV	CL,AL
0B92 E8 07 00              1557 	CALL	PUT
0B95 8A C5                 1558 	MOV	AL,CH
0B97 24 38                 1559 	AND	AL,38H
0B99 0A C3                 1560 	OR	AL,BL
0B9B C3                    1561 	RET
0B9C                       1562 
0B9C                       1563 PUT:
0B9C                       1564 ;Save byte in AL as pure code, with intermediate code bits 00. AL and
0B9C                       1565 ;DI destroyed, no other registers affected.
0B9C 53                    1566 	PUSH	BX
0B9D 51                    1567 	PUSH	CX
0B9E B5 00                 1568 	MOV	CH,0		;Flag as pure code
0BA0 E8 03 00              1569 	CALL	GEN
0BA3 59                    1570 	POP	CX
0BA4 5B                    1571 	POP	BX
0BA5 C3                    1572 	RET
0BA6                       1573 
0BA6                       1574 GEN:
0BA6                       1575 ;Save byte of code in AL, given intermediate code bits in bits 7&8 of CH.
0BA6 E8 34 00              1576 	CALL	PUTINC		;Save it and bump code pointer
0BA9                       1577 GEN1:
0BA9 A0 80 21              1578 	MOV	AL,[RELOC]
0BAC D0 D5                 1579 	RCL	CH
0BAE D0 D0                 1580 	RCL	AL
0BB0 D0 D5                 1581 	RCL	CH
0BB2 D0 D0                 1582 	RCL	AL
0BB4 A2 80 21              1583 	MOV	[RELOC],AL
0BB7 BB 81 21              1584 	MOV	BX,BCOUNT
0BBA FE 0F                 1585 	DEC	B,[BX]
0BBC 75 E7                 1586 	JNZ	RET
0BBE C6 07 04              1587 	MOV	B,[BX],4
0BC1 BB 80 21              1588 	MOV	BX,RELOC
0BC4 8A 07                 1589 	MOV	AL,[BX]
0BC6 C6 07 00              1590 	MOV	B,[BX],0
0BC9 8B 3E 9E 21           1591 	MOV	DI,[IY]
0BCD 88 05                 1592 	MOV	[DI],AL
0BCF 8B 1E 7D 21           1593 	MOV	BX,[CODE]
0BD3 89 1E 9E 21           1594 	MOV	[IY],BX
0BD7 43                    1595 	INC	BX
0BD8 89 1E 7D 21           1596 	MOV	[CODE],BX
0BDC C3                    1597 	RET
0BDD                       1598 
0BDD                       1599 PUTINC:
0BDD FF 06 10 21           1600 	INC	[PC]
0BE1                       1601 PUTCD:
0BE1 8B 3E 7D 21           1602 	MOV	DI,[CODE]
0BE5 AA                    1603 	STOB
0BE6 89 3E 7D 21           1604 	MOV	[CODE],DI
0BEA C3                    1605 	RET
0BEB                       1606 
0BEB                       1607 PUTWOR:
0BEB                       1608 ;Save the word value described by [DLABEL] and [DATA] as code. If defined,
0BEB                       1609 ;two bytes of pure code will be produced. Otherwise, appropriate intermediate
0BEB                       1610 ;code will be generated.
0BEB 51                    1611 	PUSH	CX
0BEC B5 80                 1612 	MOV	CH,80H
0BEE 52                    1613 	PUSH	DX
0BEF 53                    1614 	PUSH	BX
0BF0 EB 20                 1615 	JP	PUTBW
0BF2                       1616 
0BF2                       1617 PUTBYT:
0BF2                       1618 ;Same as PUTWOR, above, but for byte value.
0BF2 51                    1619 	PUSH	CX
0BF3 B5 40                 1620 	MOV	CH,40H
0BF5 52                    1621 	PUSH	DX
0BF6 53                    1622 	PUSH	BX
0BF7 8B 1E 1E 21           1623 	MOV	BX,[DLABEL]
0BFB 8A C7                 1624 	MOV	AL,BH
0BFD 0A C3                 1625 	OR	AL,BL
0BFF 75 11                 1626 	JNZ	PUTBW
0C01 8B 1E 1C 21           1627 	MOV	BX,[DATA]
0C05 0A C7                 1628 	OR	AL,BH
0C07 74 09                 1629 	JZ	PUTBW
0C09 FE C7                 1630 	INC	BH
0C0B 74 05                 1631 	JZ	PUTBW
0C0D B1 1F                 1632 	MOV	CL,31
0C0F E9 9F F6              1633 	JMP	ERROR
0C12                       1634 PUTBW:
0C12 8B 16 1E 21           1635 	MOV	DX,[DLABEL]
0C16 8B 1E 1C 21           1636 	MOV	BX,[DATA]
0C1A                       1637 PUTCHK:
0C1A 0B D2                 1638 	OR	DX,DX
0C1C 74 25                 1639 	JZ	NOUNDEF
0C1E 8A C2                 1640 	MOV	AL,DL
0C20 E8 BE FF              1641 	CALL	PUTCD
0C23 8A C6                 1642 	MOV	AL,DH
0C25 E8 B9 FF              1643 	CALL	PUTCD
0C28 8A C3                 1644 	MOV	AL,BL
0C2A E8 B0 FF              1645 	CALL	PUTINC
0C2D 8A C7                 1646 	MOV	AL,BH
0C2F F6 C5 80              1647 	TEST	CH,080H
0C32 74 05                 1648 	JZ	SMPUT
0C34 E8 6F FF              1649 	CALL	GEN
0C37 EB 06                 1650 	JP	PRET
0C39                       1651 SMPUT:
0C39 E8 A5 FF              1652 	CALL	PUTCD
0C3C E8 6A FF              1653 	CALL	GEN1
0C3F                       1654 PRET:
0C3F 5B                    1655 	POP	BX
0C40 5A                    1656 	POP	DX
0C41 59                    1657 	POP	CX
0C42 C3                    1658 	RET
0C43                       1659 
0C43                       1660 NOUNDEF:
0C43 8A C3                 1661 	MOV	AL,BL
0C45 8A CF                 1662 	MOV	CL,BH
0C47 51                    1663 	PUSH	CX
0C48 B5 00                 1664 	MOV	CH,0
0C4A E8 59 FF              1665 	CALL	GEN
0C4D 59                    1666 	POP	CX
0C4E 8A C1                 1667 	MOV	AL,CL
0C50 F6 C5 80              1668 	TEST	CH,080H
0C53 B5 00                 1669 	MOV	CH,0
0C55 74 E8                 1670 	JZ	PRET
0C57 E8 4C FF              1671 	CALL	GEN
0C5A EB E3                 1672 	JP	PRET
0C5C                       1673 
0C5C                       1674 PUTADD:
0C5C                       1675 ;Save complete addressing mode. Addressing mode is in AL; if this is a register
0C5C                       1676 ;operation (>=C0), then the one byte will be saved as pure code. Otherwise,
0C5C                       1677 ;the details of the addressing mode will be investigated and the optional one-
0C5C                       1678 ;or two-byte displacement will be added, as described by [ADDR] and [ALABEL].
0C5C 51                    1679 	PUSH	CX
0C5D 52                    1680 	PUSH	DX
0C5E 53                    1681 	PUSH	BX
0C5F B5 00                 1682 	MOV	CH,0
0C61 8A C8                 1683 	MOV	CL,AL
0C63 E8 40 FF              1684 	CALL	GEN		;Save the addressing mode as pure code
0C66 8A C1                 1685 	MOV	AL,CL
0C68 B5 80                 1686 	MOV	CH,80H
0C6A 24 C7                 1687 	AND	AL,0C7H
0C6C 3C 06                 1688 	CMP	AL,6
0C6E 74 0A                 1689 	JZ	TWOBT		;Direct address?
0C70 24 C0                 1690 	AND	AL,0C0H
0C72 74 CB                 1691 	JZ	PRET		;Indirect through reg, no displacement?
0C74 3C C0                 1692 	CMP	AL,0C0H
0C76 74 C7                 1693 	JZ	PRET		;Register to register operation?
0C78 8A E8                 1694 	MOV	CH,AL		;Save whether one- or two-byte displacement
0C7A                       1695 TWOBT:
0C7A 8B 1E 18 21           1696 	MOV	BX,[ADDR]
0C7E 8B 16 1A 21           1697 	MOV	DX,[ALABEL]
0C82 EB 96                 1698 	JP	PUTCHK
0C84                       1699 
0C84                       1700 GRP2:
0C84 E8 41 F7              1701 	CALL	GETOP
0C87 B9 30 FF              1702 	MOV	CX,0FF30H
0C8A 3C 00                 1703 	CMP	AL,UNDEFID
0C8C 74 14                 1704 	JZ	PMEM
0C8E B5 50                 1705 	MOV	CH,50H
0C90 3C 03                 1706 	CMP	AL,XREG
0C92 74 1A                 1707 	JZ	PXREG
0C94 B5 06                 1708 	MOV	CH,6
0C96 3C 04                 1709 	CMP	AL,SREG
0C98 75 03                 1710 	JNZ	$+5
0C9A E9 01 04              1711 	JMP	PACKREG
0C9D B1 14                 1712 	MOV	CL,20
0C9F E9 0F F6              1713 	JMP	ERROR
0CA2                       1714 
0CA2                       1715 PMEM:
0CA2 8A C5                 1716 	MOV	AL,CH
0CA4 E8 F5 FE              1717 	CALL	PUT
0CA7 8A C1                 1718 	MOV	AL,CL
0CA9 0A C2                 1719 	OR	AL,DL
0CAB E9 AE FF              1720 	JMP	PUTADD
0CAE                       1721 
0CAE                       1722 PXREG:
0CAE 8A C5                 1723 	MOV	AL,CH
0CB0 0A C2                 1724 	OR	AL,DL
0CB2 E9 E7 FE              1725 	JMP	PUT
0CB5                       1726 
0CB5                       1727 GRP3:
0CB5 E8 10 F7              1728 	CALL	GETOP
0CB8 52                    1729 	PUSH	DX
0CB9 E8 03 F7              1730 	CALL	GETOP2
0CBC 5B                    1731 	POP	BX
0CBD B9 14 86              1732 	MOV	CX,8614H
0CC0 B0 04                 1733 	MOV	AL,SREG
0CC2 3A C7                 1734 	CMP	AL,BH
0CC4 74 4C                 1735 	JZ	ERR6
0CC6 3A C6                 1736 	CMP	AL,DH
0CC8 74 48                 1737 	JZ	ERR6
0CCA B0 01                 1738 	MOV	AL,CONST
0CCC 3A C7                 1739 	CMP	AL,BH
0CCE 74 42                 1740 	JZ	ERR6
0CD0 3A C6                 1741 	CMP	AL,DH
0CD2 74 3E                 1742 	JZ	ERR6
0CD4 B0 00                 1743 	MOV	AL,UNDEFID
0CD6 3A C7                 1744 	CMP	AL,BH
0CD8 74 2D                 1745 	JZ	EXMEM
0CDA 3A C6                 1746 	CMP	AL,DH
0CDC 74 2B                 1747 	JZ	EXMEM1
0CDE 8A C7                 1748 	MOV	AL,BH
0CE0 3A C6                 1749 	CMP	AL,DH
0CE2 B1 16                 1750 	MOV	CL,22
0CE4 75 2C                 1751 	JNZ	ERR6
0CE6 3C 03                 1752 	CMP	AL,XREG
0CE8 74 03                 1753 	JZ	L0008
0CEA E8 38 F6              1754 	CALL	RR1
0CED                       1755 L0008:			;RR1 never returns
0CED 8A C3                 1756 	MOV	AL,BL
0CEF 0A C0                 1757 	OR	AL,AL
0CF1 74 0D                 1758 	JZ	EXACC
0CF3 87 DA                 1759 	XCHG	DX,BX
0CF5 8A C3                 1760 	MOV	AL,BL
0CF7 0A C0                 1761 	OR	AL,AL
0CF9 8A C7                 1762 	MOV	AL,BH
0CFB 74 03                 1763 	JZ	EXACC
0CFD E8 25 F6              1764 	CALL	RR1
0D00                       1765 EXACC:
0D00 B0 90                 1766 	MOV	AL,90H
0D02 0A C2                 1767 	OR	AL,DL
0D04 E9 95 FE              1768 	JMP	PUT
0D07                       1769 
0D07                       1770 EXMEM:
0D07 87 DA                 1771 	XCHG	DX,BX
0D09                       1772 EXMEM1:
0D09 3A C7                 1773 	CMP	AL,BH
0D0B 74 05                 1774 	JZ	ERR6
0D0D B1 01                 1775 	MOV	CL,1	;Flag word as OK
0D0F E8 8D F6              1776 	CALL	NOTAC	;NOTAC never returns
0D12 E9 9C F5              1777 ERR6:	JMP	ERROR
0D15                       1778 
0D15                       1779 GRP4:
0D15 50                    1780 	PUSH	AX
0D16 E8 AF F6              1781 	CALL	GETOP
0D19 59                    1782 	POP	CX
0D1A 86 CD                 1783 	XCHG	CL,CH
0D1C 3C 01                 1784 	CMP	AL,CONST
0D1E 74 13                 1785 	JZ	FIXED
0D20 2C 03                 1786 	SUB	AL,XREG
0D22 FE CA                 1787 	DEC	DL
0D24 FE CA                 1788 	DEC	DL
0D26 0A C2                 1789 	OR	AL,DL
0D28 B1 14                 1790 	MOV	CL,20
0D2A 75 E6                 1791 	JNZ	ERR6
0D2C 8A C5                 1792 	MOV	AL,CH
0D2E 0C 08                 1793 	OR	AL,8
0D30 E9 69 FE              1794 	JMP	PUT
0D33                       1795 FIXED:
0D33 8A C5                 1796 	MOV	AL,CH
0D35 E8 64 FE              1797 	CALL	PUT
0D38 E9 B7 FE              1798 	JMP	PUTBYT
0D3B                       1799 
0D3B                       1800 GRP5:
0D3B 50                    1801 	PUSH	AX
0D3C E8 89 F6              1802 	CALL	GETOP
0D3F B1 14                 1803 	MOV	CL,20
0D41 3C 01                 1804 	CMP	AL,CONST
0D43 75 CD                 1805 	JNZ	ERR6
0D45 8B 1E 1E 21           1806 	MOV	BX,[DLABEL]
0D49 8A C7                 1807 	MOV	AL,BH
0D4B 0A C3                 1808 	OR	AL,BL
0D4D B1 1E                 1809 	MOV	CL,30
0D4F 75 C1                 1810 	JNZ	ERR6
0D51 8B 1E 1C 21           1811 	MOV	BX,[DATA]
0D55 58                    1812 	POP	AX
0D56 0A C0                 1813 	OR	AL,AL
0D58 74 43                 1814 	JZ	ORG
0D5A FE C8                 1815 	DEC	AL
0D5C 74 19                 1816 	JZ	DSJ
0D5E FE C8                 1817 	DEC	AL
0D60 74 27                 1818 	JZ	EQU
0D62 FE C8                 1819 	DEC	AL
0D64 74 03                 1820 	JZ	$+5
0D66 E9 98 03              1821 	JMP	IF
0D69                       1822 PUTOP:
0D69 B0 FD                 1823 	MOV	AL,-3
0D6B EB 36                 1824 	JP	NEWLOC
0D6D                       1825 ALIGN:
0D6D A0 10 21              1826 	MOV	AL,[PC]
0D70 24 01                 1827 	AND	AL,1
0D72 74 28                 1828 	JZ	RET
0D74 BB 01 00              1829 	MOV	BX,1
0D77                       1830 DSJ:
0D77 87 DA                 1831 	XCHG	DX,BX
0D79 8B 1E 10 21           1832 	MOV	BX,[PC]
0D7D 03 DA                 1833 	ADD	BX,DX
0D7F 89 1E 10 21           1834 	MOV	[PC],BX
0D83 87 DA                 1835 	XCHG	DX,BX
0D85 B0 FC                 1836 	MOV	AL,-4
0D87 EB 1A                 1837 	JP	NEWLOC
0D89                       1838 EQU:
0D89 87 DA                 1839 	XCHG	DX,BX
0D8B 8B 1E 14 21           1840 	MOV	BX,[LABPT]
0D8F 8A C7                 1841 	MOV	AL,BH
0D91 0A C3                 1842 	OR	AL,BL
0D93 B1 22                 1843 	MOV	CL,34
0D95 74 27                 1844 	JZ	ERR7
0D97 88 17                 1845 	MOV	[BX],DL
0D99 43                    1846 	INC	BX
0D9A 88 37                 1847 	MOV	[BX],DH
0D9C C3                    1848 	RET
0D9D                       1849 ORG:
0D9D 89 1E 10 21           1850 	MOV	[PC],BX
0DA1 B0 FE                 1851 	MOV	AL,-2
0DA3                       1852 NEWLOC:
0DA3 E8 3B FE              1853 	CALL	PUTCD
0DA6 8A C3                 1854 	MOV	AL,BL
0DA8 E8 36 FE              1855 	CALL	PUTCD
0DAB 8A C7                 1856 	MOV	AL,BH
0DAD E8 31 FE              1857 	CALL	PUTCD
0DB0 B5 C0                 1858 	MOV	CH,0C0H
0DB2 E9 F4 FD              1859 	JMP	GEN1
0DB5                       1860 GRP6:
0DB5 8A E8                 1861 	MOV	CH,AL
0DB7 B1 04                 1862 	MOV	CL,4
0DB9 E8 30 F5              1863 	CALL	MROPS
0DBC B1 17                 1864 	MOV	CL,23
0DBE E9 F0 F4              1865 ERR7:	JMP	ERROR
0DC1                       1866 GRP7:
0DC1 8A E8                 1867 	MOV	CH,AL
0DC3 B1 01                 1868 	MOV	CL,1
0DC5 E8 24 F5              1869 	CALL	MROPS
0DC8 B1 80                 1870 	MOV	CL,80H
0DCA 8B 16 1E 21           1871 	MOV	DX,[DLABEL]
0DCE 8A C6                 1872 	MOV	AL,DH
0DD0 0A C2                 1873 	OR	AL,DL
0DD2 75 12                 1874 	JNZ	ACCJ
0DD4 87 DA                 1875 	XCHG	DX,BX
0DD6 8B 1E 1C 21           1876 	MOV	BX,[DATA]
0DDA 8A C3                 1877 	MOV	AL,BL
0DDC 98                    1878 	CBW
0DDD 3B C3                 1879 	CMP	AX,BX
0DDF 87 DA                 1880 	XCHG	DX,BX
0DE1 75 03                 1881 	JNZ	ACCJ
0DE3 80 C9 02              1882 	OR	CL,002H
0DE6 E9 B7 00              1883 ACCJ:	JMP	ACCIMM
0DE9                       1884 GRP8:
0DE9 8A C8                 1885 	MOV	CL,AL
0DEB B5 FE                 1886 	MOV	CH,0FEH
0DED EB 04                 1887 	JP	ONEOP
0DEF                       1888 GRP9:
0DEF 8A C8                 1889 	MOV	CL,AL
0DF1 B5 F6                 1890 	MOV	CH,0F6H
0DF3                       1891 ONEOP:
0DF3 51                    1892 	PUSH	CX
0DF4 E8 D1 F5              1893 	CALL	GETOP
0DF7                       1894 ONE:
0DF7 B1 1A                 1895 	MOV	CL,26
0DF9 3C 01                 1896 	CMP	AL,CONST
0DFB 74 C1                 1897 	JZ	ERR7
0DFD 3C 04                 1898 	CMP	AL,SREG
0DFF B1 16                 1899 	MOV	CL,22
0E01 74 BB                 1900 	JZ	ERR7
0E03 59                    1901 	POP	CX
0E04 3C 00                 1902 	CMP	AL,UNDEFID
0E06 74 12                 1903 	JZ	MOP
0E08 24 01                 1904 	AND	AL,1
0E0A 74 21                 1905 	JZ	ROP
0E0C F6 C1 01              1906 	TEST	CL,001H
0E0F 74 1C                 1907 	JZ	ROP
0E11 8A C1                 1908 	MOV	AL,CL
0E13 24 F8                 1909 	AND	AL,0F8H
0E15 0A C2                 1910 	OR	AL,DL
0E17 E9 82 FD              1911 	JMP	PUT
0E1A                       1912 MOP:
0E1A A0 16 21              1913 	MOV	AL,[FLAG]
0E1D 24 01                 1914 	AND	AL,1
0E1F 0A C5                 1915 	OR	AL,CH
0E21 E8 78 FD              1916 	CALL	PUT
0E24 8A C1                 1917 	MOV	AL,CL
0E26 24 38                 1918 	AND	AL,38H
0E28 0A C2                 1919 	OR	AL,DL
0E2A E9 2F FE              1920 	JMP	PUTADD
0E2D                       1921 ROP:
0E2D 0A C5                 1922 	OR	AL,CH
0E2F E8 6A FD              1923 	CALL	PUT
0E32 8A C1                 1924 	MOV	AL,CL
0E34 24 38                 1925 	AND	AL,38H
0E36 0C C0                 1926 	OR	AL,0C0H
0E38 0A C2                 1927 	OR	AL,DL
0E3A E9 5F FD              1928 	JMP	PUT
0E3D                       1929 GRP10:
0E3D 8A C8                 1930 	MOV	CL,AL
0E3F B5 F6                 1931 	MOV	CH,0F6H
0E41 51                    1932 	PUSH	CX
0E42 E8 83 F5              1933 	CALL	GETOP
0E45 B1 14                 1934 	MOV	CL,20
0E47 8A C2                 1935 	MOV	AL,DL
0E49 0A C0                 1936 	OR	AL,AL
0E4B 75 08                 1937 	JNZ	ERRJ1
0E4D 8A C6                 1938 	MOV	AL,DH
0E4F 3C 03                 1939 	CMP	AL,XREG
0E51 74 04                 1940 	JZ	G10
0E53 3C 02                 1941 	CMP	AL,REG
0E55 75 67                 1942 ERRJ1:	JNZ	ERR8
0E57                       1943 G10:
0E57 50                    1944 	PUSH	AX
0E58 E8 6D F5              1945 	CALL	GETOP
0E5B 58                    1946 	POP	AX
0E5C 24 01                 1947 	AND	AL,1
0E5E A2 16 21              1948 	MOV	[FLAG],AL
0E61 8A C6                 1949 	MOV	AL,DH
0E63 EB 92                 1950 ONEJ:	JP	ONE
0E65                       1951 GRP11:
0E65 E8 34 FD              1952 	CALL	PUT
0E68 B0 0A                 1953 	MOV	AL,0AH
0E6A E9 2F FD              1954 	JMP	PUT
0E6D                       1955 GRP12:
0E6D 8A C8                 1956 	MOV	CL,AL
0E6F B5 D0                 1957 	MOV	CH,0D0H
0E71 51                    1958 	PUSH	CX
0E72 E8 53 F5              1959 	CALL	GETOP
0E75 A0 76 21              1960 	MOV	AL,[SYM]
0E78 3C 2C                 1961 	CMP	AL,','
0E7A 8A C6                 1962 	MOV	AL,DH
0E7C 75 E5                 1963 	JNZ	ONEJ
0E7E 52                    1964 	PUSH	DX
0E7F E8 46 F5              1965 	CALL	GETOP
0E82 2C 02                 1966 	SUB	AL,REG
0E84 B1 14                 1967 	MOV	CL,20
0E86 FE CA                 1968 	DEC	DL
0E88 0A C2                 1969 	OR	AL,DL
0E8A 75 32                 1970 	JNZ	ERR8
0E8C 5A                    1971 	POP	DX
0E8D 8A C6                 1972 	MOV	AL,DH
0E8F 59                    1973 	POP	CX
0E90 80 CD 02              1974 	OR	CH,002H
0E93 51                    1975 	PUSH	CX
0E94 E9 60 FF              1976 	JMP	ONE
0E97                       1977 GRP13:
0E97 8A E8                 1978 	MOV	CH,AL
0E99 B1 01                 1979 	MOV	CL,1
0E9B E8 4E F4              1980 	CALL	MROPS
0E9E B1 80                 1981 	MOV	CL,80H
0EA0                       1982 ACCIMM:
0EA0 E8 BA FC              1983 	CALL	IMMED
0EA3 80 CD 04              1984 	OR	CH,004H
0EA6 80 E5 FD              1985 	AND	CH,0FDH
0EA9                       1986 AIMM:
0EA9 8A C7                 1987 	MOV	AL,BH
0EAB 24 01                 1988 	AND	AL,1
0EAD 9F                    1989 	LAHF
0EAE 50                    1990 	PUSH	AX
0EAF 0A C5                 1991 	OR	AL,CH
0EB1 E8 E8 FC              1992 	CALL	PUT
0EB4 58                    1993 	POP	AX
0EB5 9E                    1994 	SAHF
0EB6 75 03                 1995 	JNZ	$+5
0EB8 E9 37 FD              1996 	JMP	PUTBYT
0EBB E9 2D FD              1997 	JMP	PUTWOR
0EBE                       1998 
0EBE E9 F0 F3              1999 ERR8:	JMP	ERROR
0EC1                       2000 
0EC1                       2001 GRP14:
0EC1                       2002 ;JMP and CALL mnemonics
0EC1 9F                    2003 	LAHF
0EC2 86 E0                 2004 	XCHG	AH,AL
0EC4 50                    2005 	PUSH	AX
0EC5 86 E0                 2006 	XCHG	AH,AL
0EC7 C6 06 17 21 03        2007 	MOV	B,[MAXFLG],3	;Allow "L" flag
0ECC E8 F9 F4              2008 	CALL	GETOP
0ECF 3C 01                 2009 	CMP	AL,CONST
0ED1 74 33                 2010 	JZ	DIRECT
0ED3 B1 14                 2011 	MOV	CL,20
0ED5 3C 02                 2012 	CMP	AL,REG
0ED7 74 E5                 2013 	JZ	ERR8
0ED9 3C 04                 2014 	CMP	AL,SREG
0EDB 74 E1                 2015 	JZ	ERR8
0EDD 3C 03                 2016 	CMP	AL,XREG
0EDF 75 03                 2017 	JNZ	NOTRG
0EE1 80 CA C0              2018 	OR	DL,0C0H
0EE4                       2019 NOTRG:
0EE4                       2020 ;Indirect jump. DL has addressing mode.
0EE4 B0 FF                 2021 	MOV	AL,0FFH
0EE6 E8 B3 FC              2022 	CALL	PUT
0EE9 58                    2023 	POP	AX
0EEA 86 E0                 2024 	XCHG	AH,AL
0EEC 9E                    2025 	SAHF
0EED 24 38                 2026 	AND	AL,38H
0EEF 0A C2                 2027 	OR	AL,DL
0EF1 8A 2E 16 21           2028 	MOV	CH,[FLAG]
0EF5 82 FD 03              2029 	CMP	CH,3		;Flag "L" present?
0EF8 74 09                 2030 	JZ	PUTADDJ		;If so, do inter-segment
0EFA B1 27                 2031 	MOV	CL,27H
0EFC 82 FD FF              2032 	CMP	CH,-1		;Better not be a flag
0EFF 75 BD                 2033 	JNZ	ERR8
0F01 24 F7                 2034 	AND	AL,0F7H		;Convert to intra-segment
0F03                       2035 PUTADDJ:
0F03 E9 56 FD              2036 	JMP	PUTADD
0F06                       2037 DIRECT:
0F06 A0 76 21              2038 	MOV	AL,[SYM]
0F09 3C 2C                 2039 	CMP	AL,','
0F0B 74 1C                 2040 	JZ	LONGJ
0F0D 58                    2041 	POP	AX
0F0E 86 E0                 2042 	XCHG	AH,AL
0F10 9E                    2043 	SAHF
0F11 FE C8                 2044 	DEC	AL
0F13 3C E9                 2045 	CMP	AL,0E9H
0F15 74 02                 2046 	JZ	GOTOP
0F17 B0 E8                 2047 	MOV	AL,0E8H
0F19                       2048 GOTOP:
0F19 E8 80 FC              2049 	CALL	PUT
0F1C 8B 16 10 21           2050 	MOV	DX,[PC]
0F20 42                    2051 	INC	DX
0F21 42                    2052 	INC	DX
0F22 29 16 1C 21           2053 	SUB	[DATA],DX
0F26 E9 C2 FC              2054 	JMP	PUTWOR
0F29                       2055 LONGJ:
0F29 58                    2056 	POP	AX
0F2A 86 E0                 2057 	XCHG	AH,AL
0F2C 9E                    2058 	SAHF
0F2D E8 6C FC              2059 	CALL	PUT
0F30 E8 B8 FC              2060 	CALL	PUTWOR
0F33 E8 92 F4              2061 	CALL	GETOP
0F36 B1 14                 2062 	MOV	CL,20
0F38 3C 01                 2063 	CMP	AL,CONST
0F3A 75 82                 2064 	JNZ	ERR8
0F3C E9 AC FC              2065 	JMP	PUTWOR
0F3F                       2066 
0F3F                       2067 GRP16:
0F3F                       2068 ;RET mnemonic
0F3F 9F                    2069 	LAHF
0F40 86 E0                 2070 	XCHG	AH,AL
0F42 50                    2071 	PUSH	AX
0F43 86 E0                 2072 	XCHG	AH,AL
0F45 E8 BA F6              2073 	CALL	GETSYM
0F48 3C 05                 2074 	CMP	AL,5
0F4A 74 1C                 2075 	JZ	LONGR
0F4C 3C 0D                 2076 	CMP	AL,EOL
0F4E 74 3F                 2077 	JZ	NODEC
0F50 3C 3B                 2078 	CMP	AL,';'
0F52 74 3B                 2079 	JZ	NODEC
0F54                       2080 GETSP:
0F54 E8 74 F4              2081 	CALL	GETOP1
0F57 59                    2082 	POP	CX
0F58 3C 01                 2083 	CMP	AL,CONST
0F5A B1 14                 2084 	MOV	CL,20
0F5C 75 63                 2085 	JNZ	ERR9
0F5E 8A C5                 2086 	MOV	AL,CH
0F60 24 FE                 2087 	AND	AL,0FEH
0F62 E8 37 FC              2088 	CALL	PUT
0F65 E9 83 FC              2089 	JMP	PUTWOR
0F68                       2090 LONGR:
0F68 82 FA 03              2091 	CMP	DL,3		;Is flag "L"?
0F6B B1 27                 2092 	MOV	CL,27H
0F6D 75 7D                 2093 	JNZ	ERR10		;If not, bad flag
0F6F 58                    2094 	POP	AX
0F70 86 E0                 2095 	XCHG	AH,AL
0F72 9E                    2096 	SAHF
0F73 0C 08                 2097 	OR	AL,8
0F75 9F                    2098 	LAHF
0F76 86 E0                 2099 	XCHG	AH,AL
0F78 50                    2100 	PUSH	AX
0F79 86 E0                 2101 	XCHG	AH,AL
0F7B                       2102 NOTLON:
0F7B E8 84 F6              2103 	CALL	GETSYM
0F7E 3C 0D                 2104 	CMP	AL,EOL
0F80 74 2E                 2105 	JZ	DORET
0F82 3C 3B                 2106 	CMP	AL,';'
0F84 74 2A                 2107 	JZ	DORET
0F86 3C 2C                 2108 	CMP	AL,','
0F88 75 03                 2109 	JNZ	L0011
0F8A E8 75 F6              2110 	CALL	GETSYM
0F8D                       2111 L0011:	
0F8D EB C5                 2112 	JP	GETSP
0F8F                       2113 NODEC:
0F8F                       2114 ;Return is intra-segment (short) without add to SP. 
0F8F                       2115 ;Record position for RET symbol.
0F8F 8B 1E 10 21           2116 	MOV	BX,[PC]
0F93 89 1E 94 21           2117 	MOV	[LSTRET],BX
0F97 87 DA                 2118 	XCHG	DX,BX
0F99 8B 1E 96 21           2119 	MOV	BX,[RETPT]
0F9D 8A C7                 2120 	MOV	AL,BH
0F9F 0A C3                 2121 	OR	AL,BL
0FA1 74 0D                 2122 	JZ	DORET
0FA3 C6 07 01              2123 	MOV	B,[BX],1
0FA6 43                    2124 	INC	BX
0FA7 89 17                 2125 	MOV	[BX],DX
0FA9 BB 00 00              2126 	MOV	BX,0
0FAC 89 1E 96 21           2127 	MOV	[RETPT],BX
0FB0                       2128 DORET:
0FB0 58                    2129 	POP	AX
0FB1 86 E0                 2130 	XCHG	AH,AL
0FB3 9E                    2131 	SAHF
0FB4 E9 E5 FB              2132 	JMP	PUT
0FB7                       2133 
0FB7                       2134 GRP17:
0FB7 E8 E2 FB              2135 	CALL	PUT
0FBA E8 0B F4              2136 	CALL	GETOP
0FBD 3C 01                 2137 	CMP	AL,CONST
0FBF B1 14                 2138 	MOV	CL,20
0FC1 75 29                 2139 ERR9:	JNZ	ERR10
0FC3 8B 1E 1C 21           2140 	MOV	BX,[DATA]
0FC7 8B 16 10 21           2141 	MOV	DX,[PC]
0FCB 42                    2142 	INC	DX
0FCC 2B DA                 2143 	SUB	BX,DX
0FCE 89 1E 1C 21           2144 	MOV	[DATA],BX
0FD2 E8 1D FC              2145 	CALL	PUTBYT
0FD5 8B 1E 1E 21           2146 	MOV	BX,[DLABEL]
0FD9 8A C7                 2147 	MOV	AL,BH
0FDB 0A C3                 2148 	OR	AL,BL
0FDD 75 10                 2149 	JNZ	RET
0FDF 8B 1E 1C 21           2150 	MOV	BX,[DATA]
0FE3 8A C3                 2151 	MOV	AL,BL
0FE5 98                    2152 	CBW
0FE6 3B C3                 2153 	CMP	AX,BX		;Signed 8-bit number?
0FE8 74 05                 2154 	JZ	RET
0FEA B1 1F                 2155 	MOV	CL,31
0FEC E9 C2 F2              2156 ERR10:	JMP	ERROR
0FEF C3                    2157 	RET
0FF0                       2158 GRP18:
0FF0 E8 D5 F3              2159 	CALL	GETOP
0FF3 3C 01                 2160 	CMP	AL,CONST
0FF5 B1 14                 2161 	MOV	CL,20
0FF7 75 F3                 2162 	JNZ	ERR10
0FF9 8B 1E 1E 21           2163 	MOV	BX,[DLABEL]
0FFD 8A C7                 2164 	MOV	AL,BH
0FFF 0A C3                 2165 	OR	AL,BL
1001 75 10                 2166 	JNZ	GENINT
1003 8B 1E 1C 21           2167 	MOV	BX,[DATA]
1007 BA 03 00              2168 	MOV	DX,3
100A 1B DA                 2169 	SBB	BX,DX
100C 75 05                 2170 	JNZ	GENINT
100E B0 CC                 2171 	MOV	AL,0CCH
1010 E9 89 FB              2172 	JMP	PUT
1013                       2173 GENINT:
1013 B0 CD                 2174 	MOV	AL,0CDH
1015 E8 84 FB              2175 	CALL	PUT
1018 E9 D7 FB              2176 	JMP	PUTBYT
101B                       2177 
101B                       2178 GRP19:	;ESC opcode
101B E8 AA F3              2179 	CALL	GETOP
101E B1 14                 2180 	MOV	CL,20
1020 3C 01                 2181 	CMP	AL,CONST
1022 75 39                 2182 	JNZ	ERRJ		;First operand must be immediate
1024 B1 1E                 2183 	MOV	CL,1EH
1026 F7 06 1E 21 FF FF     2184 	TEST	[DLABEL],-1	;See if all labels have been defined
102C 75 2F                 2185 	JNZ	ERRJ
102E A1 1C 21              2186 	MOV	AX,[DATA]
1031 3D 40 00              2187 	CMP	AX,64		;Must only be 6 bits
1034 B1 1F                 2188 	MOV	CL,1FH
1036 73 25                 2189 	JNB	ERRJ
1038 8A D8                 2190 	MOV	BL,AL		;Save for second byte
103A D0 E8                 2191 	SHR	AL
103C D0 E8                 2192 	SHR	AL
103E D0 E8                 2193 	SHR	AL
1040 0C D8                 2194 	OR	AL,0D8H		;ESC opcode
1042 E8 57 FB              2195 	CALL	PUT
1045 53                    2196 	PUSH	BX
1046 E8 76 F3              2197 	CALL	GETOP2
1049 5B                    2198 	POP	BX
104A 80 E3 07              2199 	AND	BL,7		;Low 3 bits of first operand
104D D0 E3                 2200 	SHL	BL
104F D0 E3                 2201 	SHL	BL
1051 D0 E3                 2202 	SHL	BL
1053 3C 00                 2203 	CMP	AL,UNDEFID	;Check for memory operand
1055 74 09                 2204 	JZ	ESCMEM
1057 3C 01                 2205 	CMP	AL,CONST	;Check for another immediate
1059 74 0C                 2206 	JZ	ESCIMM
105B B1 14                 2207 	MOV	CL,20
105D E9 51 F2              2208 ERRJ:	JMP	ERROR
1060                       2209 
1060                       2210 ESCMEM:
1060 0A DA                 2211 	OR	BL,DL		;Combine mode with first operand
1062 8A C3                 2212 	MOV	AL,BL
1064 E9 F5 FB              2213 	JMP	PUTADD
1067                       2214 
1067                       2215 ESCIMM:
1067 B1 1E                 2216 	MOV	CL,1EH
1069 F7 06 1E 21 FF FF     2217 	TEST	[DLABEL],-1	;See if second operand is fully defined
106F 75 EC                 2218 	JNZ	ERRJ
1071 A1 1C 21              2219 	MOV	AX,[DATA]
1074 B1 1F                 2220 	MOV	CL,1FH
1076 3D 08 00              2221 	CMP	AX,8		;Must only be 3 bit value
1079 73 E2                 2222 	JNB	ERRJ
107B 0A C3                 2223 	OR	AL,BL		;Combine first and second operands
107D 0C C0                 2224 	OR	AL,0C0H		;Force "register" mode
107F E9 1A FB              2225 	JMP	PUT
1082                       2226 
1082                       2227 GRP20:
1082 8A E8                 2228 	MOV	CH,AL
1084 B1 01                 2229 	MOV	CL,1
1086 E8 63 F2              2230 	CALL	MROPS
1089 B1 F6                 2231 	MOV	CL,0F6H
108B E8 CF FA              2232 	CALL	IMMED
108E B5 A8                 2233 	MOV	CH,0A8H
1090 E9 16 FE              2234 	JMP	AIMM
1093                       2235 GRP21:
1093 E8 32 F3              2236 	CALL	GETOP
1096 3C 04                 2237 	CMP	AL,SREG
1098 B1 1C                 2238 	MOV	CL,28
109A 75 C1                 2239 	JNZ	ERRJ
109C B5 26                 2240 	MOV	CH,26H
109E                       2241 PACKREG:
109E 8A C2                 2242 	MOV	AL,DL
10A0 02 C0                 2243 	ADD	AL,AL
10A2 02 C0                 2244 	ADD	AL,AL
10A4 02 C0                 2245 	ADD	AL,AL
10A6 0A C5                 2246 	OR	AL,CH
10A8 E9 F1 FA              2247 	JMP	PUT
10AB                       2248 GRP22:
10AB E8 1A F3              2249 	CALL	GETOP
10AE B9 00 8F              2250 	MOV	CX,8F00H
10B1 3C 00                 2251 	CMP	AL,UNDEFID
10B3 75 03                 2252 	JNZ	$+5
10B5 E9 EA FB              2253 	JMP	PMEM
10B8 B5 58                 2254 	MOV	CH,58H
10BA 3C 03                 2255 	CMP	AL,XREG
10BC 75 03                 2256 	JNZ	$+5
10BE E9 ED FB              2257 	JMP	PXREG
10C1 B5 07                 2258 	MOV	CH,7
10C3 3C 04                 2259 	CMP	AL,SREG
10C5 74 D7                 2260 	JZ	PACKREG
10C7 B1 14                 2261 	MOV	CL,20
10C9 E9 E5 F1              2262 ERR11:	JMP	ERROR
10CC                       2263 GRP23:
10CC A2 7F 21              2264 	MOV	[DATSIZ],AL
10CF                       2265 GETDAT:
10CF E8 30 F5              2266 	CALL	GETSYM
10D2 B0 02                 2267 	MOV	AL,2
10D4 E8 0A F3              2268 	CALL	VAL1
10D7 A0 76 21              2269 	MOV	AL,[SYM]
10DA 3C 2C                 2270 	CMP	AL,','
10DC A0 7F 21              2271 	MOV	AL,[DATSIZ]
10DF 75 05                 2272 	JNZ	ENDDAT
10E1 E8 13 00              2273 	CALL	SAVDAT
10E4 EB E9                 2274 	JP	GETDAT
10E6                       2275 ENDDAT:
10E6 3C 02                 2276 	CMP	AL,2
10E8 75 0D                 2277 	JNZ	SAVDAT
10EA 8B 1E 1C 21           2278 	MOV	BX,[DATA]
10EE 9F                    2279 	LAHF
10EF 80 CB 80              2280 	OR	BL,080H
10F2 9E                    2281 	SAHF
10F3 89 1E 1C 21           2282 	MOV	[DATA],BX
10F7                       2283 SAVDAT:
10F7 0A C0                 2284 	OR	AL,AL
10F9 74 03                 2285 	JZ	$+5
10FB E9 F4 FA              2286 	JMP	PUTBYT
10FE E9 EA FA              2287 	JMP	PUTWOR
1101                       2288 IF:
1101 0B DB                 2289 	OR	BX,BX
1103 74 05                 2290 	JZ	SKIPCD
1105 FE 06 90 21           2291 	INC	B,[IFFLG]
1109 C3                    2292 	RET
110A                       2293 
110A                       2294 SKIPCD:
110A FE 06 91 21           2295 	INC	B,[CHKLAB]
110E                       2296 SKIPLP:
110E 32 C0                 2297 	XOR	AL,AL
1110 E8 48 F1              2298 	CALL	NEXLIN
1113 E8 A0 F1              2299 	CALL	NEXTCHR
1116 3C 1A                 2300 	CMP	AL,1AH
1118 74 40                 2301 	JZ	END
111A E8 E5 F7              2302 	CALL	GETLAB
111D 72 EF                 2303 	JC	SKIPLP
111F BF 24 21              2304 	MOV	DI,LENID
1122 BE BA 20              2305 	MOV	SI,IFEND
1125 B5 00                 2306 	MOV	CH,0
1127 8A 0D                 2307 	MOV	CL,[DI]
1129 FE C1                 2308 	INC	CL
112B F3                    2309 	REPE
112C A6                    2310 	CMPB
112D 74 14                 2311 	JZ	ENDCOND
112F BF 24 21              2312 	MOV	DI,LENID
1132 BE C0 20              2313 	MOV	SI,IFNEST
1135 8A 0D                 2314 	MOV	CL,[DI]
1137 FE C1                 2315 	INC	CL
1139 F3                    2316 	REPE
113A A6                    2317 	CMPB
113B 75 D1                 2318 	JNZ	SKIPLP
113D FE 06 91 21           2319 	INC	B,[CHKLAB]
1141 EB CB                 2320 	JP	SKIPLP
1143                       2321 
1143                       2322 ENDCOND:
1143 FE 0E 91 21           2323 	DEC	B,[CHKLAB]
1147 75 C5                 2324 	JNZ	SKIPLP
1149 C3                    2325 	RET
114A                       2326 
114A                       2327 ENDIF:
114A A0 90 21              2328 	MOV	AL,[IFFLG]
114D B1 24                 2329 	MOV	CL,36
114F FE C8                 2330 	DEC	AL
1151 78 04                 2331 	JS	ERRJMP
1153 A2 90 21              2332 	MOV	[IFFLG],AL
1156 C3                    2333 	RET
1157                       2334 
1157 E9 57 F1              2335 ERRJMP:	JMP	ERROR
115A                       2336 
115A                       2337 ;*********************************************************************
115A                       2338 ;
115A                       2339 ;	PASS 2
115A                       2340 ;
115A                       2341 ;*********************************************************************
115A                       2342 
115A                       2343 END:
115A B2 04                 2344 	MOV	DL,4
115C                       2345 WREND:
115C B5 FF                 2346 	MOV	CH,0FFH
115E 8A C5                 2347 	MOV	AL,CH
1160 E8 43 FA              2348 	CALL	GEN
1163 FE CA                 2349 	DEC	DL
1165 75 F5                 2350 	JNZ	WREND
1167 C7 06 EA 25 EC 25     2351 	MOV	[BUFPT],SRCBUF
116D C6 06 8C 21 FB        2352 	MOV	B,[HEXCNT],-5	;FLAG HEX BUFFER AS EMPTY
1172 C7 06 A2 21 EA 21     2353 	MOV	[LSTPNT],LSTBUF
1178 C7 06 A0 21 A4 21     2354 	MOV	[HEXPNT],HEXBUF
117E 33 C0                 2355 	XOR	AX,AX
1180 A3 92 21              2356 	MOV	[ERRCNT],AX
1183 A3 10 21              2357 	MOV	[PC],AX
1186 A3 84 21              2358 	MOV	[LINE],AX	;Current line number
1189 C7 06 88 21 00 01     2359 	MOV	[HEXADD],OBJECT
118F BA 5C 00              2360 	MOV	DX,FCB
1192 B4 0F                 2361 	MOV	AH,OPEN
1194 CD 21                 2362 	INT	33		;Re-open source file
1196 33 C0                 2363 	XOR	AX,AX
1198 A3 68 00              2364 	MOV	[FCB+12],AX	;Set CURRENT BLOCK to zero
119B A2 7C 00              2365 	MOV	[FCB+20H],AL	;Set NEXT RECORD field to zero
119E C7 06 6A 00 00 04     2366 	MOV	[FCB+14],BUFSIZ
11A4 A2 82 21              2367 	MOV	[COUNT],AL
11A7 B5 01                 2368 	MOV	CH,1
11A9 BE EC 2A              2369 	MOV	SI,START
11AC                       2370 FIXLINE:
11AC BF EC 2A              2371 	MOV	DI,START	;Store code over used up intermediate code
11AF 32 C0                 2372 	XOR	AL,AL
11B1 A2 9A 21              2373 	MOV	[SPC],AL	;No "special" yet (ORG, PUT, DS)
11B4 A2 83 21              2374 	MOV	[ERR],AL	;No second pass errors yet
11B7                       2375 NEXBT:
11B7 D0 E1                 2376 	SHL	CL		;Shift out last bit of previous code
11B9 FE CD                 2377 	DEC	CH		;Still have codes left?
11BB 75 05                 2378 	JNZ	TESTTYP
11BD AC                    2379 	LODB			;Get next flag byte
11BE 8A C8                 2380 	MOV	CL,AL
11C0 B5 04                 2381 	MOV	CH,4
11C2                       2382 TESTTYP:
11C2 D0 E1                 2383 	SHL	CL		;Set flags based on two bits
11C4 70 06                 2384 	JO	FIXUP
11C6 AC                    2385 	LODB
11C7 72 4E                 2386 	JC	EMARK
11C9                       2387 OBJBT:
11C9 AA                    2388 	STOB
11CA EB EB                 2389 	JP	NEXBT
11CC                       2390 
11CC                       2391 FIXUP:
11CC                       2392 ;Either a word or byte fixup is needed from a forward reference
11CC AD                    2393 	LODW			;Get pointer to symbol
11CD 93                    2394 	XCHG	AX,BX
11CE AD                    2395 	LODW			;Get constant part
11CF 03 47 01              2396 	ADD	AX,[BX+1]	;Add symbol value to constant part
11D2 82 3F 00              2397 	CMP	B,[BX],0	;See if symbol got defined
11D5 75 07                 2398 	JNZ	HAVDEF
11D7 C6 06 83 21 64        2399 	MOV	B,[ERR],100	;Undefined - flag error
11DC 33 C0                 2400 	XOR	AX,AX
11DE                       2401 HAVDEF:
11DE 0A C9                 2402 	OR	CL,CL		;See if word or byte fixup
11E0 78 03                 2403 	JS	DEFBYT
11E2 AB                    2404 	STOW
11E3 EB D2                 2405 	JP	NEXBT
11E5                       2406 
11E5                       2407 DEFBYT:
11E5 8B D0                 2408 	MOV	DX,AX
11E7 98                    2409 	CBW			;Extend sign
11E8 3B C2                 2410 	CMP	AX,DX		;See if in range +127 to -128
11EA 74 DD                 2411 	JZ	OBJBT		;If so, it's always OK
11EC F6 D4                 2412 	NOT	AH		;Check for range +255 to -256
11EE 3A E6                 2413 	CMP	AH,DH
11F0 75 1B                 2414 	JNZ	RNGERR		;Must always be in this range
11F2                       2415 ;Check for short jump. If so, we're out of range; otherwise we're OK
11F2 81 FF ED 2A           2416 	CMP	DI,START+1	;Only one other byte on line?
11F6 75 D1                 2417 	JNZ	OBJBT		;Can't be short jump if not
11F8 A0 EC 2A              2418 	MOV	AL,[START]	;Get the first byte of this line
11FB 3C EB                 2419 	CMP	AL,0EBH		;Direct short jump?
11FD 74 0E                 2420 	JZ	RNGERR
11FF 24 FC                 2421 	AND	AL,0FCH
1201 3C E0                 2422 	CMP	AL,0E0H		;LOOP or JCXZ instruction?
1203 74 08                 2423 	JZ	RNGERR
1205 24 F0                 2424 	AND	AL,0F0H
1207 3C 70                 2425 	CMP	AL,70H		;Conditional jump?
1209 8A C2                 2426 	MOV	AL,DL		;Get code byte in AL
120B 75 BC                 2427 	JNZ	OBJBT		;If not, we're OK
120D                       2428 RNGERR:
120D C6 06 83 21 65        2429 	MOV	B,[ERR],101	;Value out of range
1212 EB B5                 2430 	JP	OBJBT
1214                       2431 
1214 E9 7C 01              2432 FINIJ:	JMP	FINI
1217                       2433 
1217                       2434 EMARK:
1217 3C FF                 2435 	CMP	AL,-1		;End of file?
1219 74 F9                 2436 	JZ	FINIJ
121B 3C F6                 2437 	CMP	AL,-10		;Special item?
121D 77 5C                 2438 	JA	SPEND
121F 51                    2439 	PUSH	CX
1220 56                    2440 	PUSH	SI
1221 50                    2441 	PUSH	AX		;Save error code
1222 8A 26 98 21           2442 	MOV	AH,[LSTDEV]
1226 80 E4 FE              2443 	AND	AH,0FEH		;Reset error indicator
1229 0A 06 83 21           2444 	OR	AL,[ERR]	;See if any errors on this line
122D 74 03                 2445 	JZ	NOERR
122F 80 CC 01              2446 	OR	AH,1		;Send line to console if error occured
1232                       2447 NOERR:
1232 88 26 98 21           2448 	MOV	[LSTDEV],AH
1236 8B CF                 2449 	MOV	CX,DI
1238 E8 F0 00              2450 	CALL	STRTLIN		;Print address of line
123B BE EC 2A              2451 	MOV	SI,START
123E 2B CE                 2452 	SUB	CX,SI		;Get count of bytes of code
1240 74 06                 2453 	JZ	SHOLIN
1242                       2454 CODLP:
1242 AC                    2455 	LODB
1243 E8 75 02              2456 	CALL	SAVCD		;Ouput code to HEX and PRN files
1246 E2 FA                 2457 	LOOP	CODLP
1248                       2458 SHOLIN:
1248 B0 00                 2459 	MOV	AL,0
124A 86 06 82 21           2460 	XCHG	AL,[COUNT]
124E B9 07 00              2461 	MOV	CX,7		;Allow 7 bytes of code per line
1251 2A C8                 2462 	SUB	CL,AL
1253 B0 20                 2463 	MOV	AL,' '
1255 74 0B                 2464 	JZ	NOFIL
1257                       2465 BLNK:				;Put in 3 blanks for each byte not present
1257 E8 E6 00              2466 	CALL	LIST
125A E8 E3 00              2467 	CALL	LIST
125D E8 E0 00              2468 	CALL	LIST
1260 E2 F5                 2469 	LOOP	BLNK
1262                       2470 NOFIL:
1262 E8 45 00              2471 	CALL	OUTLIN
1265 58                    2472 	POP	AX		;Restore error code
1266 E8 88 02              2473 	CALL	REPERR
1269 A0 83 21              2474 	MOV	AL,[ERR]
126C E8 82 02              2475 	CALL	REPERR
126F 5E                    2476 	POP	SI
1270 59                    2477 	POP	CX
1271 A0 9A 21              2478 	MOV	AL,[SPC]	;Any special funtion?
1274 0A C0                 2479 	OR	AL,AL
1276 75 0D                 2480 	JNZ	SPCFUN
1278 E9 31 FF              2481 	JMP	FIXLINE
127B                       2482 
127B                       2483 SPEND:
127B A2 9A 21              2484 	MOV	[SPC],AL	;Record special function
127E AD                    2485 	LODW			;Get it's data
127F A3 1C 21              2486 	MOV	[DATA],AX
1282 E9 32 FF              2487 	JMP	NEXBT
1285                       2488 
1285                       2489 SPCFUN:
1285 8B 16 1C 21           2490 	MOV	DX,[DATA]
1289 3C FE                 2491 	CMP	AL,-2
128B 74 0F                 2492 	JZ	DORG
128D 3C FD                 2493 	CMP	AL,-3
128F 74 12                 2494 	JZ	DPUT
1291                       2495 DDS:
1291                       2496 ;Handle DS pseudo-op
1291 01 16 10 21           2497 	ADD	[PC],DX
1295 01 16 88 21           2498 	ADD	[HEXADD],DX
1299 E9 10 FF              2499 	JMP	FIXLINE
129C                       2500 
129C                       2501 DORG:
129C                       2502 ;Handle ORG pseudo-op
129C 89 16 10 21           2503 	MOV	[PC],DX
12A0 E9 09 FF              2504 	JMP	FIXLINE
12A3                       2505 
12A3                       2506 DPUT:
12A3                       2507 ;Handle PUT pseudo-op
12A3 89 16 88 21           2508 	MOV	[HEXADD],DX
12A7 E9 02 FF              2509 	JMP	FIXLINE
12AA                       2510 
12AA                       2511 OUTLIN:
12AA                       2512 ;Copy the source line to the ouput device. Line will be preceded by
12AA                       2513 ;assembler-generated line number. This routine may be called several times
12AA                       2514 ;on one line (once for each line of object code bytes), so it sets a flag
12AA                       2515 ;so the line will only be output on the first call.
12AA B0 FF                 2516 	MOV	AL,-1
12AC 86 06 8E 21           2517 	XCHG	AL,[LINFLG]
12B0 0A C0                 2518 	OR	AL,AL
12B2 75 35                 2519 	JNZ	CRLF		;Output line only if first time
12B4 A1 84 21              2520 	MOV	AX,[LINE]
12B7 40                    2521 	INC	AX
12B8 A3 84 21              2522 	MOV	[LINE],AX
12BB B7 00                 2523 	MOV	BH,0		;No leading zero suppression
12BD E8 32 00              2524 	CALL	OUT10
12C0 B0 20                 2525 	MOV	AL," "
12C2 E8 7B 00              2526 	CALL	LIST
12C5 A0 EB 20              2527 	MOV	AL,[LSTFCB]
12C8 3C 5A                 2528 	CMP	AL,'Z'
12CA 74 1D                 2529 	JZ	CRLF		;Don't call NEXTCHR if listing suppressed
12CC 56                    2530 	PUSH	SI		;Save the only register destroyed by NEXTCHR
12CD                       2531 OUTLN:
12CD E8 E6 EF              2532 	CALL	NEXTCHR
12D0 E8 6D 00              2533 	CALL	LIST
12D3 3C 0A                 2534 	CMP	AL,10		;Output until linefeed found
12D5 75 F6                 2535 	JNZ	OUTLN
12D7 5E                    2536 	POP	SI
12D8 C3                    2537 	RET
12D9                       2538 
12D9                       2539 PRTCNT:
12D9 A1 92 21              2540 	MOV	AX,[ERRCNT]
12DC BB 68 20              2541 	MOV	BX,ERCNTM
12DF                       2542 PRNT10:
12DF 50                    2543 	PUSH	AX
12E0 E8 3D 02              2544 	CALL	PRINT
12E3 58                    2545 	POP	AX
12E4 B7 10                 2546 	MOV	BH,"0"-" "	;Enable leading zero suppression
12E6 E8 09 00              2547 	CALL	OUT10
12E9                       2548 CRLF:
12E9 B0 0D                 2549 	MOV	AL,13
12EB E8 52 00              2550 	CALL	LIST
12EE B0 0A                 2551 	MOV	AL,10
12F0 EB 4E                 2552 	JP	LIST
12F2                       2553 
12F2                       2554 OUT10:
12F2 33 D2                 2555 	XOR	DX,DX
12F4 BF 10 27              2556 	MOV	DI,10000
12F7 F7 F7                 2557 	DIV	AX,DI
12F9 0A C0                 2558 	OR	AL,AL		;>10,000?
12FB 75 02                 2559 	JNZ	LEAD
12FD 2C 10                 2560 	SUB	AL,"0"-" "	;Convert leading zero to blank
12FF                       2561 LEAD:
12FF 04 30                 2562 	ADD	AL,"0"
1301 E8 3C 00              2563 	CALL	LIST
1304 92                    2564 	XCHG	AX,DX
1305 B3 64                 2565 	MOV	BL,100
1307 F6 F3                 2566 	DIV	AL,BL
1309 8A DC                 2567 	MOV	BL,AH
130B E8 0C 00              2568 	CALL	HIDIG		;Convert to decimal and print 1000s digit
130E E8 0E 00              2569 	CALL	DIGIT		;Print 100s digit
1311 8A C3                 2570 	MOV	AL,BL
1313 E8 04 00              2571 	CALL	HIDIG		;Convert to decimal and print 10s digit
1316 B7 00                 2572 	MOV	BH,0		;Ensure leading zero suppression is off
1318 EB 05                 2573 	JP	DIGIT
131A                       2574 
131A                       2575 HIDIG:
131A D4 0A                 2576 	AAM			;Convert binary to unpacked BCD
131C 0D 30 30              2577 	OR	AX,3030H	;Add "0" bias
131F                       2578 DIGIT:
131F 86 C4                 2579 	XCHG	AL,AH
1321 3C 30                 2580 	CMP	AL,"0"
1323 74 02                 2581 	JZ	SUPZ
1325 B7 00                 2582 	MOV	BH,0		;Turn off zero suppression if not zero
1327                       2583 SUPZ:
1327 2A C7                 2584 	SUB	AL,BH		;Convert leading zeros to blanks
1329 EB 15                 2585 	JP	LIST
132B                       2586 
132B                       2587 STRTLIN:
132B C6 06 8E 21 00        2588 	MOV	B,[LINFLG],0
1330 8B 1E 10 21           2589 	MOV	BX,[PC]
1334 8A C7                 2590 	MOV	AL,BH
1336 E8 4D 00              2591 	CALL	PHEX
1339 8A C3                 2592 	MOV	AL,BL
133B                       2593 PHEXB:
133B E8 48 00              2594 	CALL	PHEX
133E B0 20                 2595 	MOV	AL,' '
1340                       2596 LIST:
1340 50                    2597 	PUSH	AX
1341 52                    2598 	PUSH	DX
1342 24 7F                 2599 	AND	AL,7FH
1344 8A D0                 2600 	MOV	DL,AL
1346 F6 06 98 21 03        2601 	TEST	B,[LSTDEV],3	;See if output goes to console
134B 74 04                 2602 	JZ	PRNCHK
134D B4 02                 2603 	MOV	AH,2
134F CD 21                 2604 	INT	33		;Output to console
1351                       2605 PRNCHK:
1351 F6 06 98 21 04        2606 	TEST	B,[LSTDEV],4	;See if output goes to printer
1356 74 04                 2607 	JZ	FILCHK
1358 B4 05                 2608 	MOV	AH,5
135A CD 21                 2609 	INT	33		;Output to printer
135C                       2610 FILCHK:
135C 8A C2                 2611 	MOV	AL,DL
135E 5A                    2612 	POP	DX
135F F6 06 98 21 80        2613 	TEST	B,[LSTDEV],80H	;See if output goes to a file
1364 74 03                 2614 	JZ	LISTRET
1366 E8 02 00              2615 	CALL	WRTBUF
1369                       2616 LISTRET:
1369 58                    2617 	POP	AX
136A C3                    2618 	RET
136B                       2619 
136B                       2620 WRTBUF:
136B 57                    2621 	PUSH	DI
136C 8B 3E A2 21           2622 	MOV	DI,[LSTPNT]
1370 AA                    2623 	STOB
1371 81 FF EA 25           2624 	CMP	DI,LSTBUF+LSTBUFSIZ
1375 75 09                 2625 	JNZ	SAVPT
1377 50                    2626 	PUSH	AX
1378 51                    2627 	PUSH	CX
1379 52                    2628 	PUSH	DX
137A E8 7B 02              2629 	CALL	FLUSHBUF
137D 5A                    2630 	POP	DX
137E 59                    2631 	POP	CX
137F 58                    2632 	POP	AX
1380                       2633 SAVPT:
1380 89 3E A2 21           2634 	MOV	[LSTPNT],DI
1384 5F                    2635 	POP	DI
1385 C3                    2636 	RET
1386                       2637 
1386                       2638 PHEX:
1386 50                    2639 	PUSH	AX
1387 E8 8E 02              2640 	CALL	UHALF
138A E8 B3 FF              2641 	CALL	LIST
138D 58                    2642 	POP	AX
138E E8 8F 02              2643 	CALL	LHALF
1391 EB AD                 2644 	JP	LIST
1393                       2645 
1393                       2646 FINI:
1393 80 0E 98 21 01        2647 	OR	B,[LSTDEV],1
1398 E8 3E FF              2648 	CALL	PRTCNT
139B BB 79 20              2649 	MOV	BX,SYMSIZE
139E A1 06 00              2650 	MOV	AX,[6]
13A1 2B 06 79 21           2651 	SUB	AX,[HEAP]		;Size of symbol table
13A5 E8 37 FF              2652 	CALL	PRNT10
13A8 BB 8F 20              2653 	MOV	BX,FRESIZE
13AB A1 79 21              2654 	MOV	AX,[HEAP]
13AE 2B 06 7D 21           2655 	SUB	AX,[CODE]		;Free space remaining
13B2 E8 2A FF              2656 	CALL	PRNT10
13B5 80 26 98 21 FE        2657 	AND	B,[LSTDEV],0FEH
13BA A0 C6 20              2658 	MOV	AL,[HEXFCB]
13BD 3C 5A                 2659 	CMP	AL,'Z'
13BF 74 35                 2660 	JZ	SYMDMP
13C1 A0 8C 21              2661 	MOV	AL,[HEXCNT]
13C4 3C FB                 2662 	CMP	AL,-5
13C6 74 03                 2663 	JZ	L0012
13C8 E8 DF 01              2664 	CALL	ENHEXL
13CB                       2665 L0012:	
13CB B0 3A                 2666 	MOV	AL,':'
13CD E8 1E 02              2667 	CALL	PUTCHR
13D0 B5 0A                 2668 	MOV	CH,10
13D2                       2669 HEXEND:
13D2 51                    2670 	PUSH	CX
13D3 B0 30                 2671 	MOV	AL,'0'
13D5 E8 16 02              2672 	CALL	PUTCHR
13D8 59                    2673 	POP	CX
13D9 FE CD                 2674 	DEC	CH
13DB 75 F5                 2675 	JNZ	HEXEND
13DD B0 0D                 2676 	MOV	AL,13
13DF E8 0C 02              2677 	CALL	PUTCHR
13E2 B0 0A                 2678 	MOV	AL,10
13E4 E8 07 02              2679 	CALL	PUTCHR
13E7 B0 1A                 2680 	MOV	AL,1AH
13E9 E8 02 02              2681 	CALL	PUTCHR
13EC E8 E4 01              2682 	CALL	WRTHEX		;Flush HEX file buffer
13EF BA C6 20              2683 	MOV	DX,HEXFCB
13F2 B4 10                 2684 	MOV	AH,CLOSE
13F4 CD 21                 2685 	INT	33
13F6                       2686 SYMDMP:
13F6 A0 7B 21              2687 	MOV	AL,[SYMFLG]
13F9 3C 53                 2688 	CMP	AL,'S'
13FB 75 2A                 2689 	JNZ	ENDSYM
13FD A0 98 21              2690 	MOV	AL,[LSTDEV]
1400 0A C0                 2691 	OR	AL,AL		;Any output device for symbol table dump?
1402 75 05                 2692 	JNZ	DOSYMTAB
1404 0C 01                 2693 	OR	AL,1		;If not, send it to console
1406 A2 98 21              2694 	MOV	[LSTDEV],AL
1409                       2695 DOSYMTAB:
1409 BB A3 20              2696 	MOV	BX,SYMMES
140C E8 11 01              2697 	CALL	PRINT
140F 8B 16 77 21           2698 	MOV	DX,[BASE]
1413 8A C6                 2699 	MOV	AL,DH
1415 0A C2                 2700 	OR	AL,DL
1417 74 0E                 2701 	JZ	ENDSYM
1419 C6 06 7C 21 05        2702 	MOV	B,[SYMLIN],SYMWID  ;No symbols on this line yet
141E 8B 1E 79 21           2703 	MOV	BX,[HEAP]
1422 8B E3                 2704 	MOV	SP,BX		;Need maximum stack for recursive tree walk
1424 E8 1A 00              2705 	CALL	NODE
1427                       2706 ENDSYM:
1427 F6 06 98 21 80        2707 	TEST	B,[LSTDEV],80H	;Print listing to file?
142C 74 10                 2708 	JZ	EXIT
142E B0 1A                 2709 	MOV	AL,1AH
1430 E8 38 FF              2710 	CALL	WRTBUF		;Write end-of-file mark
1433 8B 3E A2 21           2711 	MOV	DI,[LSTPNT]
1437 E8 BE 01              2712 	CALL	FLUSHBUF
143A B4 10                 2713 	MOV	AH,CLOSE
143C CD 21                 2714 	INT	33
143E E9 BF EB              2715 EXIT:	JMP	0
1441                       2716 
1441                       2717 NODE:
1441 87 DA                 2718 	XCHG	DX,BX
1443 53                    2719 	PUSH	BX
1444 8A 17                 2720 	MOV	DL,[BX]
1446 B6 00                 2721 	MOV	DH,0
1448 43                    2722 	INC	BX
1449 03 DA                 2723 	ADD	BX,DX
144B 8B 17                 2724 	MOV	DX,[BX]
144D 0B D2                 2725 	OR	DX,DX
144F 74 03                 2726 	JZ	L0014
1451 E8 ED FF              2727 	CALL	NODE
1454                       2728 L0014:	
1454 5B                    2729 	POP	BX
1455 8A 07                 2730 	MOV	AL,[BX]
1457 43                    2731 	INC	BX
1458 8A E8                 2732 	MOV	CH,AL
145A 04 18                 2733 	ADD	AL,24
145C D0 E8                 2734 	SHR	AL
145E D0 E8                 2735 	SHR	AL
1460 D0 E8                 2736 	SHR	AL
1462 8A C8                 2737 	MOV	CL,AL
1464 FE C1                 2738 	INC	CL		;Invert last bit
1466 80 E1 01              2739 	AND	CL,1		;Number of extra tabs needed (0 or 1)
1469 D0 E8                 2740 	SHR	AL		;Number of positions wide this symbol needs
146B 28 06 7C 21           2741 	SUB	[SYMLIN],AL
146F 73 0A                 2742 	JNC	WRTSYM		;Will it fit?
1471 2C 05                 2743 	SUB	AL,SYMWID
1473 F6 D8                 2744 	NEG	AL
1475 A2 7C 21              2745 	MOV	[SYMLIN],AL
1478 E8 6E FE              2746 	CALL	CRLF		;Start new line if not
147B                       2747 WRTSYM:
147B 8A 07                 2748 	MOV	AL,[BX]
147D 43                    2749 	INC	BX
147E E8 BF FE              2750 	CALL	LIST
1481 FE CD                 2751 	DEC	CH
1483 75 F6                 2752 	JNZ	WRTSYM
1485 FE C1                 2753 	INC	CL
1487                       2754 TABVAL:
1487 B0 09                 2755 	MOV	AL,9
1489 E8 B4 FE              2756 	CALL	LIST
148C E2 F9                 2757 	LOOP	TABVAL
148E 43                    2758 	INC	BX
148F 43                    2759 	INC	BX
1490 53                    2760 	PUSH	BX
1491 8A 47 04              2761 	MOV	AL,[BX+4]
1494 E8 EF FE              2762 	CALL	PHEX
1497 8A 47 03              2763 	MOV	AL,[BX+3]
149A E8 E9 FE              2764 	CALL	PHEX
149D 82 3E 7C 21 00        2765 	CMP	B,[SYMLIN],0	;Will any more fit on line?
14A2 74 07                 2766 	JZ	NEXSYMLIN
14A4 B0 09                 2767 	MOV	AL,9
14A6 E8 97 FE              2768 	CALL	LIST
14A9 EB 08                 2769 	JP	RIGHTSON
14AB                       2770 NEXSYMLIN:
14AB E8 3B FE              2771 	CALL	CRLF
14AE C6 06 7C 21 05        2772 	MOV	B,[SYMLIN],SYMWID
14B3                       2773 RIGHTSON:
14B3 5B                    2774 	POP	BX
14B4 8B 17                 2775 	MOV	DX,[BX]
14B6 0B D2                 2776 	OR	DX,DX
14B8 75 87                 2777 	JNZ	NODE
14BA C3                    2778 	RET
14BB                       2779 
14BB                       2780 SAVCD:
14BB A2 8F 21              2781 	MOV	[PREV],AL
14BE 53                    2782 	PUSH	BX
14BF 51                    2783 	PUSH	CX
14C0 50                    2784 	PUSH	AX
14C1 52                    2785 	PUSH	DX
14C2 E8 72 00              2786 	CALL	CODBYT
14C5 5A                    2787 	POP	DX
14C6 BB 82 21              2788 	MOV	BX,COUNT
14C9 FE 07                 2789 	INC	B,[BX]
14CB 8A 07                 2790 	MOV	AL,[BX]
14CD 3C 08                 2791 	CMP	AL,8
14CF 75 11                 2792 	JNZ	NOEXT
14D1 C6 07 01              2793 	MOV	B,[BX],1
14D4 E8 D3 FD              2794 	CALL	OUTLIN
14D7 B0 20                 2795 	MOV	AL,' '
14D9 B5 05                 2796 	MOV	CH,5
14DB                       2797 TAB:
14DB E8 62 FE              2798 	CALL	LIST
14DE FE CD                 2799 	DEC	CH
14E0 75 F9                 2800 	JNZ	TAB
14E2                       2801 NOEXT:
14E2 58                    2802 	POP	AX
14E3 E8 55 FE              2803 	CALL	PHEXB
14E6 59                    2804 	POP	CX
14E7 FF 06 10 21           2805 	INC	[PC]
14EB FF 06 88 21           2806 	INC	[HEXADD]
14EF 5B                    2807 	POP	BX
14F0 C3                    2808 	RET
14F1                       2809 
14F1                       2810 REPERR:
14F1 0A C0                 2811 	OR	AL,AL		;Did an error occur?
14F3 74 FB                 2812 	JZ	RET
14F5 FF 06 92 21           2813 	INC	[ERRCNT]
14F9 50                    2814 	PUSH	AX
14FA BB F2 1F              2815 	MOV	BX,ERRMES	;Print "ERROR"
14FD E8 20 00              2816 	CALL	PRINT
1500 58                    2817 	POP	AX
1501                       2818 ;We have error number in AL. See if there's an error message for it
1501 BF 24 1C              2819 	MOV	DI,ERRTAB
1504 B3 80                 2820 	MOV	BL,80H
1506                       2821 ERRLOOK:
1506 AE                    2822 	SCASB			;Do we have the error message
1507 76 07                 2823 	JBE	HAVMES		;Quit looking if we have it or passed it
1509 93                    2824 	XCHG	AX,BX		;Put 80H in AL to look for end of this message
150A                       2825 NEXTMES:
150A AE                    2826 	SCASB			;Look for high bit set in message
150B 77 FD                 2827 	JA	NEXTMES		;   which means we've reached the end
150D 93                    2828 	XCHG	AX,BX		;Restore error number to AL
150E EB F6                 2829 	JMPS	ERRLOOK		;Keep looking
1510                       2830 
1510                       2831 HAVMES:
1510 8B DF                 2832 	MOV	BX,DI		;Put address of message in BX
1512 74 06                 2833 	JZ	PRNERR		;Do we have a message for this error?
1514 E8 6F FE              2834 	CALL	PHEX		;If not, just print error number
1517 E9 CF FD              2835 	JMP	CRLF
151A                       2836 
151A                       2837 PRNERR:
151A E8 03 00              2838 	CALL	PRINT
151D E9 C9 FD              2839 	JMP	CRLF
1520                       2840 
1520                       2841 PRINT:
1520 8A 07                 2842 	MOV	AL,[BX]
1522 E8 1B FE              2843 	CALL	LIST
1525 0A C0                 2844 	OR	AL,AL
1527 78 C7                 2845 	JS	RET
1529 43                    2846 	INC	BX
152A EB F4                 2847 	JP	PRINT
152C                       2848 
152C                       2849 OUTA:
152C 8A D0                 2850 	MOV	DL,AL
152E                       2851 OUT:
152E 80 E2 7F              2852 	AND	DL,7FH
1531 B1 02                 2853 	MOV	CL,2
1533                       2854 SYSTEM:
1533 E8 CF EA              2855 	CALL	5
1536 C3                    2856 	RET
1537                       2857 
1537                       2858 CODBYT:
1537 82 3E C6 20 5A        2859 	CMP	B,[HEXFCB],"Z"
153C 74 F8                 2860 	JZ	RET
153E 50                    2861 	PUSH	AX
153F 8B 16 8A 21           2862 	MOV	DX,[LASTAD]
1543 8B 1E 88 21           2863 	MOV	BX,[HEXADD]
1547 89 1E 8A 21           2864 	MOV	[LASTAD],BX
154B 42                    2865 	INC	DX
154C A0 8C 21              2866 	MOV	AL,[HEXCNT]
154F 3C FB                 2867 	CMP	AL,-5
1551 74 07                 2868 	JZ	NEWLIN
1553 3B DA                 2869 	CMP	BX,DX
1555 74 2E                 2870 	JZ	AFHEX
1557 E8 50 00              2871 	CALL	ENHEXL
155A                       2872 NEWLIN:
155A B0 3A                 2873 	MOV	AL,':'
155C E8 8F 00              2874 	CALL	PUTCHR
155F B0 FC                 2875 	MOV	AL,-4
1561 A2 8C 21              2876 	MOV	[HEXCNT],AL
1564 32 C0                 2877 	XOR	AL,AL
1566 A2 8D 21              2878 	MOV	[CHKSUM],AL
1569 8B 1E A0 21           2879 	MOV	BX,[HEXPNT]
156D 89 1E 86 21           2880 	MOV	[HEXLEN],BX
1571 E8 12 00              2881 	CALL	HEXBYT
1574 A0 89 21              2882 	MOV	AL,[HEXADD+1]
1577 E8 0C 00              2883 	CALL	HEXBYT
157A A0 88 21              2884 	MOV	AL,[HEXADD]
157D E8 06 00              2885 	CALL	HEXBYT
1580 32 C0                 2886 	XOR	AL,AL
1582 E8 01 00              2887 	CALL	HEXBYT
1585                       2888 AFHEX:
1585 58                    2889 	POP	AX
1586                       2890 HEXBYT:
1586 8A E8                 2891 	MOV	CH,AL
1588 BB 8D 21              2892 	MOV	BX,CHKSUM
158B 02 07                 2893 	ADD	AL,[BX]
158D 88 07                 2894 	MOV	[BX],AL
158F 8A C5                 2895 	MOV	AL,CH
1591 E8 84 00              2896 	CALL	UHALF
1594 E8 57 00              2897 	CALL	PUTCHR
1597 8A C5                 2898 	MOV	AL,CH
1599 E8 84 00              2899 	CALL	LHALF
159C E8 4F 00              2900 	CALL	PUTCHR
159F BB 8C 21              2901 	MOV	BX,HEXCNT
15A2 FE 07                 2902 	INC	B,[BX]
15A4 8A 07                 2903 	MOV	AL,[BX]
15A6 3C 1A                 2904 	CMP	AL,26
15A8 75 8C                 2905 	JNZ	RET
15AA                       2906 ENHEXL:
15AA 8B 3E 86 21           2907 	MOV	DI,[HEXLEN]
15AE 8A E8                 2908 	MOV	CH,AL
15B0 E8 65 00              2909 	CALL	UHALF
15B3 AA                    2910 	STOB
15B4 8A C5                 2911 	MOV	AL,CH
15B6 E8 67 00              2912 	CALL	LHALF
15B9 AA                    2913 	STOB
15BA B0 FA                 2914 	MOV	AL,-6
15BC A2 8C 21              2915 	MOV	[HEXCNT],AL
15BF A0 8D 21              2916 	MOV	AL,[CHKSUM]
15C2 02 C5                 2917 	ADD	AL,CH
15C4 F6 D8                 2918 	NEG	AL
15C6 E8 BD FF              2919 	CALL	HEXBYT
15C9 B0 0D                 2920 	MOV	AL,13
15CB E8 20 00              2921 	CALL	PUTCHR
15CE B0 0A                 2922 	MOV	AL,10
15D0 E8 1B 00              2923 	CALL	PUTCHR
15D3                       2924 WRTHEX:
15D3                       2925 ;Write out the line
15D3 BA A4 21              2926 	MOV	DX,HEXBUF
15D6 89 16 A0 21           2927 	MOV	[HEXPNT],DX
15DA B4 1A                 2928 	MOV	AH,SETDMA
15DC CD 21                 2929 	INT	33
15DE 2B FA                 2930 	SUB	DI,DX		;Length of buffer
15E0 8B CF                 2931 	MOV	CX,DI
15E2 BA C6 20              2932 	MOV	DX,HEXFCB
15E5 B4 28                 2933 	MOV	AH,BLKWRT
15E7 CD 21                 2934 	INT	33
15E9 0A C0                 2935 	OR	AL,AL
15EB 75 25                 2936 	JNZ	DSKFUL
15ED C3                    2937 	RET
15EE                       2938 
15EE                       2939 PUTCHR:
15EE 8B 3E A0 21           2940 	MOV	DI,[HEXPNT]
15F2 AA                    2941 	STOB
15F3 89 3E A0 21           2942 	MOV	[HEXPNT],DI
15F7 C3                    2943 	RET
15F8                       2944 
15F8                       2945 FLUSHBUF:
15F8 8B CF                 2946 	MOV	CX,DI
15FA BA EA 21              2947 	MOV	DX,LSTBUF
15FD 8B FA                 2948 	MOV	DI,DX
15FF 2B CA                 2949 	SUB	CX,DX
1601 74 F4                 2950 	JZ	RET		;Buffer empty?
1603 B4 1A                 2951 	MOV	AH,SETDMA
1605 CD 21                 2952 	INT	33
1607 BA EB 20              2953 	MOV	DX,LSTFCB
160A B4 28                 2954 	MOV	AH,BLKWRT
160C CD 21                 2955 	INT	33
160E 0A C0                 2956 	OR	AL,AL
1610 74 E5                 2957 	JZ	RET
1612                       2958 DSKFUL:
1612 BB 43 20              2959 	MOV	BX,WRTERR
1615 E9 5E EC              2960 	JMP	PRERR
1618                       2961 
1618                       2962 UHALF:
1618 D0 D8                 2963 	RCR	AL
161A D0 D8                 2964 	RCR	AL
161C D0 D8                 2965 	RCR	AL
161E D0 D8                 2966 	RCR	AL
1620                       2967 LHALF:
1620 24 0F                 2968 	AND	AL,0FH
1622 0C 30                 2969 	OR	AL,30H
1624 3C 3A                 2970 	CMP	AL,'9'+1
1626 72 CF                 2971 	JC	RET
1628 04 07                 2972 	ADD	AL,7
162A C3                    2973 	RET
162B                       2974 
162B 00                    2975 NONE:	DB	0
162C                       2976 
162C                       2977 ; 8086 MNEMONIC TABLE
162C                       2978 
162C                       2979 ; This table is actually a sequence of subtables, each starting with a label.
162C                       2980 ; The label signifies which mnemonics the subtable applies to--A3, for example,
162C                       2981 ; means all 3-letter mnemonics beginning with A.
162C                       2982 
162C                       2983 A3:
162C 07                    2984 	DB	7
162D 64 64                 2985 	DB	'dd'
162F C1 0D                 2986 	DW	GRP7
1631 02                    2987 	DB	2
1632 6E 64                 2988 	DB	'nd'
1634 97 0E                 2989 	DW	GRP13
1636 22                    2990 	DB	22H
1637 64 63                 2991 	DB	'dc'
1639 C1 0D                 2992 	DW	GRP7
163B 12                    2993 	DB	12H
163C 61 61                 2994 	DB	'aa'
163E 9C 0B                 2995 	DW	PUT
1640 37                    2996 	DB	37H
1641 61 73                 2997 	DB	'as'
1643 9C 0B                 2998 	DW	PUT
1645 3F                    2999 	DB	3FH
1646 61 6D                 3000 	DB	'am'
1648 65 0E                 3001 	DW	GRP11
164A D4                    3002 	DB	0D4H
164B 61 64                 3003 	DB	'ad'
164D 65 0E                 3004 	DW	GRP11
164F D5                    3005 	DB	0D5H
1650                       3006 A5:
1650 01                    3007 	DB	1
1651 6C 69 67 6E           3008 	DB	'lign'
1655 6D 0D                 3009 	DW	ALIGN
1657 00                    3010 	DB	0
1658                       3011 C3:
1658 07                    3012 	DB	7
1659 6D 70                 3013 	DB	'mp'
165B C1 0D                 3014 	DW	GRP7
165D 3A                    3015 	DB	3AH
165E 6C 63                 3016 	DB	'lc'
1660 9C 0B                 3017 	DW	PUT
1662 F8                    3018 	DB	0F8H
1663 6C 64                 3019 	DB	'ld'
1665 9C 0B                 3020 	DW	PUT
1667 FC                    3021 	DB	0FCH
1668 6C 69                 3022 	DB	'li'
166A 9C 0B                 3023 	DW	PUT
166C FA                    3024 	DB	0FAH
166D 6D 63                 3025 	DB	'mc'
166F 9C 0B                 3026 	DW	PUT
1671 F5                    3027 	DB	0F5H
1672 62 77                 3028 	DB	'bw'
1674 9C 0B                 3029 	DW	PUT
1676 98                    3030 	DB	98H
1677 77 64                 3031 	DB	'wd'
1679 9C 0B                 3032 	DW	PUT
167B 99                    3033 	DB	99H
167C                       3034 C4:
167C 03                    3035 	DB	3
167D 61 6C 6C              3036 	DB	'all'
1680 C1 0E                 3037 	DW	GRP14
1682 9A                    3038 	DB	9AH
1683 6D 70 62              3039 	DB	'mpb'
1686 9C 0B                 3040 	DW	PUT
1688 A6                    3041 	DB	0A6H
1689 6D 70 77              3042 	DB	'mpw'
168C 9C 0B                 3043 	DW	PUT
168E A7                    3044 	DB	0A7H
168F                       3045 C5:
168F 02                    3046 	DB	2
1690 6D 70 73 62           3047 	DB	'mpsb'
1694 9C 0B                 3048 	DW	PUT
1696 A6                    3049 	DB	0A6H
1697 6D 70 73 77           3050 	DB	'mpsw'
169B 9C 0B                 3051 	DW	PUT
169D A7                    3052 	DB	0A7H
169E                       3053 D2:
169E 05                    3054 	DB	5
169F 62                    3055 	DB	'b'
16A0 CC 10                 3056 	DW	GRP23
16A2 01                    3057 	DB	1
16A3 77                    3058 	DB	'w'
16A4 CC 10                 3059 	DW	GRP23
16A6 00                    3060 	DB	0
16A7 6D                    3061 	DB	'm'
16A8 CC 10                 3062 	DW	GRP23
16AA 02                    3063 	DB	2
16AB 73                    3064 	DB	's'
16AC 3B 0D                 3065 	DW	GRP5
16AE 01                    3066 	DB	1
16AF 69                    3067 	DB	'i'
16B0 9C 0B                 3068 	DW	PUT
16B2 FA                    3069 	DB	0FAH
16B3                       3070 D3:
16B3 04                    3071 	DB	4
16B4 65 63                 3072 	DB	'ec'
16B6 E9 0D                 3073 	DW	GRP8
16B8 49                    3074 	DB	49H
16B9 69 76                 3075 	DB	'iv'
16BB 3D 0E                 3076 	DW	GRP10
16BD 30                    3077 	DB	30H
16BE 61 61                 3078 	DB	'aa'
16C0 9C 0B                 3079 	DW	PUT
16C2 27                    3080 	DB	27H
16C3 61 73                 3081 	DB	'as'
16C5 9C 0B                 3082 	DW	PUT
16C7 2F                    3083 	DB	2FH
16C8                       3084 D4:
16C8 01                    3085 	DB	1
16C9 6F 77 6E              3086 	DB	'own'
16CC 9C 0B                 3087 	DW	PUT
16CE FD                    3088 	DB	0FDH
16CF                       3089 E2:
16CF 01                    3090 	DB	1
16D0 69                    3091 	DB	'i'
16D1 9C 0B                 3092 	DW	PUT
16D3 FB                    3093 	DB	0FBH
16D4                       3094 E3:
16D4 03                    3095 	DB	3
16D5 71 75                 3096 	DB	'qu'
16D7 3B 0D                 3097 	DW	GRP5
16D9 02                    3098 	DB	2
16DA 73 63                 3099 	DB	'sc'
16DC 1B 10                 3100 	DW	GRP19
16DE D8                    3101 	DB	0D8H
16DF 6E 64                 3102 	DB	'nd'
16E1 5A 11                 3103 	DW	END
16E3 00                    3104 	DB	0
16E4                       3105 E5:
16E4 01                    3106 	DB	1
16E5 6E 64 69 66           3107 	DB	'ndif'
16E9 4A 11                 3108 	DW	ENDIF
16EB 00                    3109 	DB	0
16EC                       3110 H3:
16EC 01                    3111 	DB	1
16ED 6C 74                 3112 	DB	'lt'
16EF 9C 0B                 3113 	DW	PUT
16F1 F4                    3114 	DB	0F4H
16F2                       3115 H4:
16F2 01                    3116 	DB	1
16F3 61 6C 74              3117 	DB	'alt'
16F6 9C 0B                 3118 	DW	PUT
16F8 F4                    3119 	DB	0F4H
16F9                       3120 I2:
16F9 02                    3121 	DB	2
16FA 6E                    3122 	DB	'n'
16FB 15 0D                 3123 	DW	GRP4
16FD E4                    3124 	DB	0E4H
16FE 66                    3125 	DB	'f'
16FF 3B 0D                 3126 	DW	GRP5
1701 04                    3127 	DB	4
1702                       3128 I3:
1702 04                    3129 	DB	4
1703 6E 63                 3130 	DB	'nc'
1705 E9 0D                 3131 	DW	GRP8
1707 41                    3132 	DB	41H
1708 6E 62                 3133 	DB	'nb'
170A 15 0D                 3134 	DW	GRP4
170C E4                    3135 	DB	0E4H
170D 6E 77                 3136 	DB	'nw'
170F 15 0D                 3137 	DW	GRP4
1711 E5                    3138 	DB	0E5H
1712 6E 74                 3139 	DB	'nt'
1714 F0 0F                 3140 	DW	GRP18
1716 CC                    3141 	DB	0CCH
1717                       3142 I4:
1717 04                    3143 	DB	4
1718 6D 75 6C              3144 	DB	'mul'
171B 3D 0E                 3145 	DW	GRP10
171D 28                    3146 	DB	28H
171E 64 69 76              3147 	DB	'div'
1721 3D 0E                 3148 	DW	GRP10
1723 38                    3149 	DB	38H
1724 72 65 74              3150 	DB	'ret'
1727 9C 0B                 3151 	DW	PUT
1729 CF                    3152 	DB	0CFH
172A 6E 74 6F              3153 	DB	'nto'
172D 9C 0B                 3154 	DW	PUT
172F CE                    3155 	DB	0CEH
1730                       3156 J2:
1730 0A                    3157 	DB	10
1731 70                    3158 	DB	'p'
1732 B7 0F                 3159 	DW	GRP17
1734 EB                    3160 	DB	0EBH
1735 7A                    3161 	DB	'z'
1736 B7 0F                 3162 	DW	GRP17
1738 74                    3163 	DB	74H
1739 65                    3164 	DB	'e'
173A B7 0F                 3165 	DW	GRP17
173C 74                    3166 	DB	74H
173D 6C                    3167 	DB	'l'
173E B7 0F                 3168 	DW	GRP17
1740 7C                    3169 	DB	7CH
1741 62                    3170 	DB	'b'
1742 B7 0F                 3171 	DW	GRP17
1744 72                    3172 	DB	72H
1745 61                    3173 	DB	'a'
1746 B7 0F                 3174 	DW	GRP17
1748 77                    3175 	DB	77H
1749 67                    3176 	DB	'g'
174A B7 0F                 3177 	DW	GRP17
174C 7F                    3178 	DB	7FH
174D 6F                    3179 	DB	'o'
174E B7 0F                 3180 	DW	GRP17
1750 70                    3181 	DB	70H
1751 73                    3182 	DB	's'
1752 B7 0F                 3183 	DW	GRP17
1754 78                    3184 	DB	78H
1755 63                    3185 	DB	'c'
1756 B7 0F                 3186 	DW	GRP17
1758 72                    3187 	DB	72H
1759                       3188 J3:
1759 11                    3189 	DB	17
175A 6D 70                 3190 	DB	'mp'
175C C1 0E                 3191 	DW	GRP14
175E EA                    3192 	DB	0EAH
175F 6E 7A                 3193 	DB	'nz'
1761 B7 0F                 3194 	DW	GRP17
1763 75                    3195 	DB	75H
1764 6E 65                 3196 	DB	'ne'
1766 B7 0F                 3197 	DW	GRP17
1768 75                    3198 	DB	75H
1769 6E 6C                 3199 	DB	'nl'
176B B7 0F                 3200 	DW	GRP17
176D 7D                    3201 	DB	7DH
176E 67 65                 3202 	DB	'ge'
1770 B7 0F                 3203 	DW	GRP17
1772 7D                    3204 	DB	7DH
1773 6E 62                 3205 	DB	'nb'
1775 B7 0F                 3206 	DW	GRP17
1777 73                    3207 	DB	73H
1778 61 65                 3208 	DB	'ae'
177A B7 0F                 3209 	DW	GRP17
177C 73                    3210 	DB	73H
177D 6E 63                 3211 	DB	'nc'
177F B7 0F                 3212 	DW	GRP17
1781 73                    3213 	DB	73H
1782 6E 67                 3214 	DB	'ng'
1784 B7 0F                 3215 	DW	GRP17
1786 7E                    3216 	DB	7EH
1787 6C 65                 3217 	DB	'le'
1789 B7 0F                 3218 	DW	GRP17
178B 7E                    3219 	DB	7EH
178C 6E 61                 3220 	DB	'na'
178E B7 0F                 3221 	DW	GRP17
1790 76                    3222 	DB	76H
1791 62 65                 3223 	DB	'be'
1793 B7 0F                 3224 	DW	GRP17
1795 76                    3225 	DB	76H
1796 70 65                 3226 	DB	'pe'
1798 B7 0F                 3227 	DW	GRP17
179A 7A                    3228 	DB	7AH
179B 6E 70                 3229 	DB	'np'
179D B7 0F                 3230 	DW	GRP17
179F 7B                    3231 	DB	7BH
17A0 70 6F                 3232 	DB	'po'
17A2 B7 0F                 3233 	DW	GRP17
17A4 7B                    3234 	DB	7BH
17A5 6E 6F                 3235 	DB	'no'
17A7 B7 0F                 3236 	DW	GRP17
17A9 71                    3237 	DB	71H
17AA 6E 73                 3238 	DB	'ns'
17AC B7 0F                 3239 	DW	GRP17
17AE 79                    3240 	DB	79H
17AF                       3241 J4:
17AF 06                    3242 	DB	6
17B0 6D 70 73              3243 	DB	'mps'
17B3 B7 0F                 3244 	DW	GRP17
17B5 EB                    3245 	DB	0EBH
17B6 63 78 7A              3246 	DB	'cxz'
17B9 B7 0F                 3247 	DW	GRP17
17BB E3                    3248 	DB	0E3H
17BC 6E 67 65              3249 	DB	'nge'
17BF B7 0F                 3250 	DW	GRP17
17C1 7C                    3251 	DB	7CH
17C2 6E 61 65              3252 	DB	'nae'
17C5 B7 0F                 3253 	DW	GRP17
17C7 72                    3254 	DB	72H
17C8 6E 62 65              3255 	DB	'nbe'
17CB B7 0F                 3256 	DW	GRP17
17CD 77                    3257 	DB	77H
17CE 6E 6C 65              3258 	DB	'nle'
17D1 B7 0F                 3259 	DW	GRP17
17D3 7F                    3260 	DB	7FH
17D4                       3261 L3:
17D4 03                    3262 	DB	3
17D5 65 61                 3263 	DB	'ea'
17D7 B5 0D                 3264 	DW	GRP6
17D9 8D                    3265 	DB	8DH
17DA 64 73                 3266 	DB	'ds'
17DC B5 0D                 3267 	DW	GRP6
17DE C5                    3268 	DB	0C5H
17DF 65 73                 3269 	DB	'es'
17E1 B5 0D                 3270 	DW	GRP6
17E3 C4                    3271 	DB	0C4H
17E4                       3272 L4:
17E4 05                    3273 	DB	5
17E5 6F 6F 70              3274 	DB	'oop'
17E8 B7 0F                 3275 	DW	GRP17
17EA E2                    3276 	DB	0E2H
17EB 6F 64 62              3277 	DB	'odb'
17EE 9C 0B                 3278 	DW	PUT
17F0 AC                    3279 	DB	0ACH
17F1 6F 64 77              3280 	DB	'odw'
17F4 9C 0B                 3281 	DW	PUT
17F6 AD                    3282 	DB	0ADH
17F7 61 68 66              3283 	DB	'ahf'
17FA 9C 0B                 3284 	DW	PUT
17FC 9F                    3285 	DB	9FH
17FD 6F 63 6B              3286 	DB	'ock'
1800 9C 0B                 3287 	DW	PUT
1802 F0                    3288 	DB	0F0H
1803                       3289 L5:
1803 04                    3290 	DB	4
1804 6F 6F 70 65           3291 	DB	'oope'
1808 B7 0F                 3292 	DW	GRP17
180A E1                    3293 	DB	0E1H
180B 6F 6F 70 7A           3294 	DB	'oopz'
180F B7 0F                 3295 	DW	GRP17
1811 E1                    3296 	DB	0E1H
1812 6F 64 73 62           3297 	DB	'odsb'
1816 9C 0B                 3298 	DW	PUT
1818 AC                    3299 	DB	0ACH
1819 6F 64 73 77           3300 	DB	'odsw'
181D 9C 0B                 3301 	DW	PUT
181F AD                    3302 	DB	0ADH
1820                       3303 L6:
1820 02                    3304 	DB	2
1821 6F 6F 70 6E 65        3305 	DB	'oopne'
1826 B7 0F                 3306 	DW	GRP17
1828 E0                    3307 	DB	0E0H
1829 6F 6F 70 6E 7A        3308 	DB	'oopnz'
182E B7 0F                 3309 	DW	GRP17
1830 E0                    3310 	DB	0E0H
1831                       3311 M3:
1831 02                    3312 	DB	2
1832 6F 76                 3313 	DB	'ov'
1834 33 0B                 3314 	DW	GRP1
1836 88                    3315 	DB	88H
1837 75 6C                 3316 	DB	'ul'
1839 3D 0E                 3317 	DW	GRP10
183B 20                    3318 	DB	20H
183C                       3319 M4:
183C 02                    3320 	DB	2
183D 6F 76 62              3321 	DB	'ovb'
1840 9C 0B                 3322 	DW	PUT
1842 A4                    3323 	DB	0A4H
1843 6F 76 77              3324 	DB	'ovw'
1846 9C 0B                 3325 	DW	PUT
1848 A5                    3326 	DB	0A5H
1849                       3327 M5:
1849 02                    3328 	DB	2
184A 6F 76 73 62           3329 	DB	'ovsb'
184E 9C 0B                 3330 	DW	PUT
1850 A4                    3331 	DB	0A4H
1851 6F 76 73 77           3332 	DB	'ovsw'
1855 9C 0B                 3333 	DW	PUT
1857 A5                    3334 	DB	0A5H
1858                       3335 N3:
1858 03                    3336 	DB	3
1859 6F 74                 3337 	DB	'ot'
185B EF 0D                 3338 	DW	GRP9
185D 10                    3339 	DB	10H
185E 65 67                 3340 	DB	'eg'
1860 EF 0D                 3341 	DW	GRP9
1862 18                    3342 	DB	18H
1863 6F 70                 3343 	DB	'op'
1865 9C 0B                 3344 	DW	PUT
1867 90                    3345 	DB	90H
1868                       3346 O2:
1868 01                    3347 	DB	1
1869 72                    3348 	DB	'r'
186A 97 0E                 3349 	DW	GRP13
186C 0A                    3350 	DB	0AH
186D                       3351 O3:
186D 02                    3352 	DB	2
186E 75 74                 3353 	DB	'ut'
1870 15 0D                 3354 	DW	GRP4
1872 E6                    3355 	DB	0E6H
1873 72 67                 3356 	DB	'rg'
1875 3B 0D                 3357 	DW	GRP5
1877 00                    3358 	DB	0
1878                       3359 O4:
1878 02                    3360 	DB	2
1879 75 74 62              3361 	DB	'utb'
187C 15 0D                 3362 	DW	GRP4
187E E6                    3363 	DB	0E6H
187F 75 74 77              3364 	DB	'utw'
1882 15 0D                 3365 	DW	GRP4
1884 E7                    3366 	DB	0E7H
1885                       3367 P3:
1885 02                    3368 	DB	2
1886 6F 70                 3369 	DB	'op'
1888 AB 10                 3370 	DW	GRP22
188A 8F                    3371 	DB	8FH
188B 75 74                 3372 	DB	'ut'
188D 3B 0D                 3373 	DW	GRP5
188F 03                    3374 	DB	3
1890                       3375 P4:
1890 02                    3376 	DB	2
1891 75 73 68              3377 	DB	'ush'
1894 84 0C                 3378 	DW	GRP2
1896 FF                    3379 	DB	0FFH
1897 6F 70 66              3380 	DB	'opf'
189A 9C 0B                 3381 	DW	PUT
189C 9D                    3382 	DB	9DH
189D                       3383 P5:
189D 01                    3384 	DB	1
189E 75 73 68 66           3385 	DB	'ushf'
18A2 9C 0B                 3386 	DW	PUT
18A4 9C                    3387 	DB	9CH
18A5                       3388 R3:
18A5 06                    3389 	DB	6
18A6 65 74                 3390 	DB	'et'
18A8 3F 0F                 3391 	DW	GRP16
18AA C3                    3392 	DB	0C3H
18AB 65 70                 3393 	DB	'ep'
18AD 9C 0B                 3394 	DW	PUT
18AF F3                    3395 	DB	0F3H
18B0 6F 6C                 3396 	DB	'ol'
18B2 6D 0E                 3397 	DW	GRP12
18B4 00                    3398 	DB	0
18B5 6F 72                 3399 	DB	'or'
18B7 6D 0E                 3400 	DW	GRP12
18B9 08                    3401 	DB	8
18BA 63 6C                 3402 	DB	'cl'
18BC 6D 0E                 3403 	DW	GRP12
18BE 10                    3404 	DB	10H
18BF 63 72                 3405 	DB	'cr'
18C1 6D 0E                 3406 	DW	GRP12
18C3 18                    3407 	DB	18H
18C4                       3408 R4:
18C4 02                    3409 	DB	2
18C5 65 70 7A              3410 	DB	'epz'
18C8 9C 0B                 3411 	DW	PUT
18CA F3                    3412 	DB	0F3H
18CB 65 70 65              3413 	DB	'epe'
18CE 9C 0B                 3414 	DW	PUT
18D0 F3                    3415 	DB	0F3H
18D1                       3416 R5:
18D1 02                    3417 	DB	2
18D2 65 70 6E 7A           3418 	DB	'epnz'
18D6 9C 0B                 3419 	DW	PUT
18D8 F2                    3420 	DB	0F2H
18D9 65 70 6E 65           3421 	DB	'epne'
18DD 9C 0B                 3422 	DW	PUT
18DF F2                    3423 	DB	0F2H
18E0                       3424 S3:
18E0 0B                    3425 	DB	11
18E1 75 62                 3426 	DB	'ub'
18E3 C1 0D                 3427 	DW	GRP7
18E5 2A                    3428 	DB	2AH
18E6 62 62                 3429 	DB	'bb'
18E8 C1 0D                 3430 	DW	GRP7
18EA 1A                    3431 	DB	1AH
18EB 62 63                 3432 	DB	'bc'
18ED C1 0D                 3433 	DW	GRP7
18EF 1A                    3434 	DB	1AH
18F0 74 63                 3435 	DB	'tc'
18F2 9C 0B                 3436 	DW	PUT
18F4 F9                    3437 	DB	0F9H
18F5 74 64                 3438 	DB	'td'
18F7 9C 0B                 3439 	DW	PUT
18F9 FD                    3440 	DB	0FDH
18FA 74 69                 3441 	DB	'ti'
18FC 9C 0B                 3442 	DW	PUT
18FE FB                    3443 	DB	0FBH
18FF 68 6C                 3444 	DB	'hl'
1901 6D 0E                 3445 	DW	GRP12
1903 20                    3446 	DB	20H
1904 68 72                 3447 	DB	'hr'
1906 6D 0E                 3448 	DW	GRP12
1908 28                    3449 	DB	28H
1909 61 6C                 3450 	DB	'al'
190B 6D 0E                 3451 	DW	GRP12
190D 20                    3452 	DB	20H
190E 61 72                 3453 	DB	'ar'
1910 6D 0E                 3454 	DW	GRP12
1912 38                    3455 	DB	38H
1913 65 67                 3456 	DB	'eg'
1915 93 10                 3457 	DW	GRP21
1917 26                    3458 	DB	26H
1918                       3459 S4:
1918 05                    3460 	DB	5
1919 63 61 62              3461 	DB	'cab'
191C 9C 0B                 3462 	DW	PUT
191E AE                    3463 	DB	0AEH
191F 63 61 77              3464 	DB	'caw'
1922 9C 0B                 3465 	DW	PUT
1924 AF                    3466 	DB	0AFH
1925 74 6F 62              3467 	DB	'tob'
1928 9C 0B                 3468 	DW	PUT
192A AA                    3469 	DB	0AAH
192B 74 6F 77              3470 	DB	'tow'
192E 9C 0B                 3471 	DW	PUT
1930 AB                    3472 	DB	0ABH
1931 61 68 66              3473 	DB	'ahf'
1934 9C 0B                 3474 	DW	PUT
1936 9E                    3475 	DB	9EH
1937                       3476 S5:
1937 04                    3477 	DB	4
1938 63 61 73 62           3478 	DB	'casb'
193C 9C 0B                 3479 	DW	PUT
193E AE                    3480 	DB	0AEH
193F 63 61 73 77           3481 	DB	'casw'
1943 9C 0B                 3482 	DW	PUT
1945 AF                    3483 	DB	0AFH
1946 74 6F 73 62           3484 	DB	'tosb'
194A 9C 0B                 3485 	DW	PUT
194C AA                    3486 	DB	0AAH
194D 74 6F 73 77           3487 	DB	'tosw'
1951 9C 0B                 3488 	DW	PUT
1953 AB                    3489 	DB	0ABH
1954                       3490 T4:
1954 01                    3491 	DB	1
1955 65 73 74              3492 	DB	'est'
1958 82 10                 3493 	DW	GRP20
195A 84                    3494 	DB	84H
195B                       3495 U2:
195B 01                    3496 	DB	1
195C 70                    3497 	DB	'p'
195D 9C 0B                 3498 	DW	PUT
195F FC                    3499 	DB	0FCH
1960                       3500 W4:
1960 01                    3501 	DB	1
1961 61 69 74              3502 	DB	'ait'
1964 9C 0B                 3503 	DW	PUT
1966 9B                    3504 	DB	9BH
1967                       3505 X3:
1967 01                    3506 	DB	1
1968 6F 72                 3507 	DB	'or'
196A 97 0E                 3508 	DW	GRP13
196C 32                    3509 	DB	32H
196D                       3510 X4:
196D 02                    3511 	DB	2
196E 63 68 67              3512 	DB	'chg'
1971 B5 0C                 3513 	DW	GRP3
1973 86                    3514 	DB	86H
1974 6C 61 74              3515 	DB	'lat'
1977 9C 0B                 3516 	DW	PUT
1979 D7                    3517 	DB	0D7H
197A                       3518 
197A                       3519 
197A                       3520 ; 8087 MNEMONIC TABLE
197A                       3521 ; Similar to 8086 table above, except NOT distinguished by opcode length
197A                       3522 
197A                       3523 XM1:	;F2XM1
197A 01                    3524 	DB	1		;One opcode
197B 78 6D B1              3525 	DM	"xm1"
197E 01 F0                 3526 	DB	1,0F0H
1980                       3527 
1980                       3528 NDPA:
1980 03                    3529 	DB	3
1981 64 E4                 3530 	DM	"dd"
1983 0E C1                 3531 	DB	6+ARITH,0C1H
1985 64 64 F0              3532 	DM	"ddp"
1988 90 00                 3533 	DB	NEEDOP+STACKOP,0
198A 62 F3                 3534 	DM	"bs"
198C 01 E1                 3535 	DB	1,0E1H
198E                       3536 
198E                       3537 NDPB:
198E 02                    3538 	DB	2
198F 6C E4                 3539 	DM	"ld"
1991 9F 20                 3540 	DB	7+NEEDOP+MEMORY,20H
1993 73 74 F0              3541 	DM	"stp"
1996 9F 30                 3542 	DB	7+NEEDOP+MEMORY,30H
1998                       3543 
1998                       3544 NDPC:
1998 05                    3545 	DB	5
1999 6F ED                 3546 	DM	"om"
199B 68 D1                 3547 	DB	0+ONEREG+REAL,0D1H
199D 6F 6D F0              3548 	DM	"omp"
19A0 68 D9                 3549 	DB	0+ONEREG+REAL,0D9H
19A2 68 F3                 3550 	DM	"hs"
19A4 01 E0                 3551 	DB	1,0E0H
19A6 6F 6D 70 F0           3552 	DM	"ompp"
19AA 06 D9                 3553 	DB	6,0D9H
19AC 6C 65 F8              3554 	DM	"lex"
19AF 03 E2                 3555 	DB	3,0E2H
19B1                       3556 
19B1                       3557 NDPD:
19B1 06                    3558 	DB	6
19B2 69 F6                 3559 	DM	"iv"
19B4 0E F1                 3560 	DB	6+ARITH,0F1H
19B6 69 76 F0              3561 	DM	"ivp"
19B9 90 30                 3562 	DB	NEEDOP+STACKOP,30H
19BB 69 76 F2              3563 	DM	"ivr"
19BE 0E F9                 3564 	DB	6+ARITH,0F9H
19C0 69 76 72 F0           3565 	DM	"ivrp"
19C4 90 38                 3566 	DB	NEEDOP+STACKOP,38H
19C6 65 63 73 74 F0        3567 	DM	"ecstp"
19CB 01 F6                 3568 	DB	1,0F6H
19CD 69 73 E9              3569 	DM	"isi"
19D0 03 E1                 3570 	DB	3,0E1H
19D2                       3571 
19D2                       3572 NDPE:
19D2 01                    3573 	DB	1
19D3 6E E9                 3574 	DM	"ni"
19D5 03 E0                 3575 	DB	3,0E0H
19D7                       3576 
19D7                       3577 NDPF:
19D7 01                    3578 	DB	1
19D8 72 65 E5              3579 	DM	"ree"
19DB C5 00                 3580 	DB	5+NEEDOP+ONEREG,0
19DD                       3581 
19DD                       3582 NDPI:
19DD 0D                    3583 	DB	13
19DE 61 64 E4              3584 	DM	"add"
19E1 A2 00                 3585 	DB	2+NEEDOP+INTEGER,0
19E3 6C E4                 3586 	DM	"ld"
19E5 B3 00                 3587 	DB	3+NEEDOP+INTEGER+EXTENDED,0
19E7 73 75 E2              3588 	DM	"sub"
19EA A2 20                 3589 	DB	2+NEEDOP+INTEGER,20H
19EC 73 74 F0              3590 	DM	"stp"
19EF B3 18                 3591 	DB	3+NEEDOP+INTEGER+EXTENDED,18H
19F1 73 F4                 3592 	DM	"st"
19F3 A3 10                 3593 	DB	3+NEEDOP+INTEGER,10H
19F5 6D 75 EC              3594 	DM	"mul"
19F8 A2 08                 3595 	DB	2+NEEDOP+INTEGER,8
19FA 64 69 F6              3596 	DM	"div"
19FD A2 30                 3597 	DB	2+NEEDOP+INTEGER,30H
19FF 73 75 62 F2           3598 	DM	"subr"
1A03 A2 28                 3599 	DB	2+NEEDOP+INTEGER,28H
1A05 64 69 76 F2           3600 	DM	"divr"
1A09 A2 38                 3601 	DB	2+NEEDOP+INTEGER,38H
1A0B 63 6F ED              3602 	DM	"com"
1A0E A2 10                 3603 	DB	2+NEEDOP+INTEGER,10H
1A10 63 6F 6D F0           3604 	DM	"comp"
1A14 A2 18                 3605 	DB	2+NEEDOP+INTEGER,18H
1A16 6E 63 73 74 F0        3606 	DM	"ncstp"
1A1B 01 F7                 3607 	DB	1,0F7H
1A1D 6E 69 F4              3608 	DM	"nit"
1A20 03 E3                 3609 	DB	3,0E3H
1A22                       3610 
1A22                       3611 NDPL:
1A22 0A                    3612 	DB	10
1A23 E4                    3613 	DM	"d"
1A24 F9 00                 3614 	DB	1+NEEDOP+ONEREG+REAL+EXTENDED,0
1A26 64 FA                 3615 	DM	"dz"
1A28 01 EE                 3616 	DB	1,0EEH
1A2A 64 B1                 3617 	DM	"d1"
1A2C 01 E8                 3618 	DB	1,0E8H
1A2E 64 70 E9              3619 	DM	"dpi"
1A31 01 EB                 3620 	DB	1,0EBH
1A33 64 6C 32 F4           3621 	DM	"dl2t"
1A37 01 E9                 3622 	DB	1,0E9H
1A39 64 6C 32 E5           3623 	DM	"dl2e"
1A3D 01 EA                 3624 	DB	1,0EAH
1A3F 64 6C 67 B2           3625 	DM	"dlg2"
1A43 01 EC                 3626 	DB	1,0ECH
1A45 64 6C 6E B2           3627 	DM	"dln2"
1A49 01 ED                 3628 	DB	1,0EDH
1A4B 64 63 F7              3629 	DM	"dcw"
1A4E 99 28                 3630 	DB	1+NEEDOP+MEMORY,28H
1A50 64 65 6E F6           3631 	DM	"denv"
1A54 99 20                 3632 	DB	1+NEEDOP+MEMORY,20H
1A56                       3633 
1A56                       3634 NDPM:
1A56 02                    3635 	DB	2
1A57 75 EC                 3636 	DM	"ul"
1A59 0E C9                 3637 	DB	6+ARITH,0C9H
1A5B 75 6C F0              3638 	DM	"ulp"
1A5E 90 08                 3639 	DB	NEEDOP+STACKOP,8
1A60                       3640 
1A60                       3641 NDPO:
1A60 01                    3642 	DB	1
1A61 F0                    3643 	DM	"p"
1A62 81 00                 3644 	DB	NEEDOP+1,0	;Flag special handling
1A64                       3645 
1A64                       3646 NDPN:
1A64 01                    3647 	DB	1
1A65 6F F0                 3648 	DM	"op"
1A67 01 D0                 3649 	DB	1,0D0H
1A69                       3650 
1A69                       3651 NDPP:
1A69 03                    3652 	DB	3
1A6A 72 65 ED              3653 	DM	"rem"
1A6D 01 F8                 3654 	DB	1,0F8H
1A6F 74 61 EE              3655 	DM	"tan"
1A72 01 F2                 3656 	DB	1,0F2H
1A74 61 74 61 EE           3657 	DM	"atan"
1A78 01 F3                 3658 	DB	1,0F3H
1A7A                       3659 
1A7A                       3660 NDPR:
1A7A 02                    3661 	DB	2
1A7B 6E 64 69 6E F4        3662 	DM	"ndint"
1A80 01 FC                 3663 	DB	1,0FCH
1A82 73 74 6F F2           3664 	DM	"stor"
1A86 9D 20                 3665 	DB	5+NEEDOP+MEMORY,20H
1A88                       3666 
1A88                       3667 NDPS:
1A88 0C                    3668 	DB	12
1A89 F4                    3669 	DM	"t"
1A8A ED D0                 3670 	DB	5+NEEDOP+ONEREG+REAL,0D0H
1A8C 74 F0                 3671 	DM	"tp"
1A8E FF D8                 3672 	DB	7+NEEDOP+ONEREG+REAL+EXTENDED,0D8H
1A90 75 E2                 3673 	DM	"ub"
1A92 0E E1                 3674 	DB	6+ARITH,0E1H
1A94 75 62 F0              3675 	DM	"ubp"
1A97 90 E0                 3676 	DB	NEEDOP+STACKOP,0E0H
1A99 75 62 F2              3677 	DM	"ubr"
1A9C 0E E9                 3678 	DB	6+ARITH,0E9H
1A9E 75 62 72 F0           3679 	DM	"ubrp"
1AA2 90 E8                 3680 	DB	NEEDOP+STACKOP,0E8H
1AA4 71 72 F4              3681 	DM	"qrt"
1AA7 01 FA                 3682 	DB	1,0FAH
1AA9 63 61 6C E5           3683 	DM	"cale"
1AAD 01 FD                 3684 	DB	1,0FDH
1AAF 61 76 E5              3685 	DM	"ave"
1AB2 9D 30                 3686 	DB	5+NEEDOP+MEMORY,30H
1AB4 74 63 F7              3687 	DM	"tcw"
1AB7 99 38                 3688 	DB	1+NEEDOP+MEMORY,38H
1AB9 74 65 6E F6           3689 	DM	"tenv"
1ABD 99 30                 3690 	DB	1+NEEDOP+MEMORY,30H
1ABF 74 73 F7              3691 	DM	"tsw"
1AC2 9D 38                 3692 	DB	5+NEEDOP+MEMORY,38H
1AC4                       3693 
1AC4                       3694 NDPT:
1AC4 01                    3695 	DB	1
1AC5 73 F4                 3696 	DM	"st"
1AC7 01 E4                 3697 	DB	1,0E4H
1AC9                       3698 
1AC9                       3699 NDPW:
1AC9 01                    3700 	DB	1
1ACA 61 69 F4              3701 	DM	"ait"
1ACD 80 00                 3702 	DB	NEEDOP,0	;Flag special handling
1ACF                       3703 
1ACF                       3704 NDPX:
1ACF 03                    3705 	DB	3
1AD0 63 E8                 3706 	DM	"ch"
1AD2 41 C9                 3707 	DB	1+ONEREG,0C9H
1AD4 61 ED                 3708 	DM	"am"
1AD6 01 E5                 3709 	DB	1,0E5H
1AD8 74 72 61 63 F4        3710 	DM	"tract"
1ADD 01 F4                 3711 	DB	1,0F4H
1ADF                       3712 
1ADF                       3713 NDPY:
1ADF 02                    3714 	DB	2
1AE0 6C 32 F8              3715 	DM	"l2x"
1AE3 01 F1                 3716 	DB	1,0F1H
1AE5 6C 32 78 70 B1        3717 	DM	"l2xp1"
1AEA 01 F9                 3718 	DB	1,0F9H
1AEC                       3719 
1AEC                       3720 
1AEC                       3721 OPTAB:
1AEC                       3722 ; Table of pointers  to mnemonics. For each letter of the alphabet (the
1AEC                       3723 ; starting letter of the mnemonic), there are 5 entries. Each entry
1AEC                       3724 ; corresponds to a mnemonic whose length is 2, 3, 4, 5, and 6 characters
1AEC                       3725 ; long, respectively. If there are no mnemonics for a given combination
1AEC                       3726 ; of first letter and length (such as A-2), then the corresponding entry
1AEC                       3727 ; points to NONE. Otherwise, it points to a place in the mnemonic table
1AEC                       3728 ; for that type.
1AEC                       3729 
1AEC                       3730 ; This table only needs to be modified if a mnemonic is added to a group
1AEC                       3731 ; previously marked NONE. Change the NONE to a label made up of the first
1AEC                       3732 ; letter of the mnemonic and its length, then add a new subsection to
1AEC                       3733 ; the mnemonic table in alphabetical order.
1AEC                       3734 
1AEC 2B 16                 3735 	DW	NONE
1AEE 2C 16                 3736 	DW	A3
1AF0 2B 16                 3737 	DW	NONE
1AF2 50 16                 3738 	DW	A5
1AF4 2B 16                 3739 	DW	NONE
1AF6 2B 16                 3740 	DW	NONE	;B
1AF8 2B 16                 3741 	DW	NONE
1AFA 2B 16                 3742 	DW	NONE
1AFC 2B 16                 3743 	DW	NONE
1AFE 2B 16                 3744 	DW	NONE
1B00 2B 16                 3745 	DW	NONE	;C
1B02 58 16                 3746 	DW	C3
1B04 7C 16                 3747 	DW	C4
1B06 8F 16                 3748 	DW	C5
1B08 2B 16                 3749 	DW	NONE
1B0A 9E 16                 3750 	DW	D2	;D
1B0C B3 16                 3751 	DW	D3
1B0E C8 16                 3752 	DW	D4
1B10 2B 16                 3753 	DW	NONE
1B12 2B 16                 3754 	DW	NONE
1B14 CF 16                 3755 	DW	E2	;E
1B16 D4 16                 3756 	DW	E3
1B18 2B 16                 3757 	DW	NONE
1B1A E4 16                 3758 	DW	E5
1B1C 2B 16                 3759 	DW	NONE
1B1E 2B 16                 3760 	DW	NONE	;F
1B20 2B 16                 3761 	DW	NONE
1B22 2B 16                 3762 	DW	NONE
1B24 2B 16                 3763 	DW	NONE
1B26 2B 16                 3764 	DW	NONE
1B28 2B 16                 3765 	DW	NONE	;G
1B2A 2B 16                 3766 	DW	NONE
1B2C 2B 16                 3767 	DW	NONE
1B2E 2B 16                 3768 	DW	NONE
1B30 2B 16                 3769 	DW	NONE
1B32 2B 16                 3770 	DW	NONE	;H
1B34 EC 16                 3771 	DW	H3
1B36 F2 16                 3772 	DW	H4
1B38 2B 16                 3773 	DW	NONE
1B3A 2B 16                 3774 	DW	NONE
1B3C F9 16                 3775 	DW	I2	;I
1B3E 02 17                 3776 	DW	I3
1B40 17 17                 3777 	DW	I4
1B42 2B 16                 3778 	DW	NONE
1B44 2B 16                 3779 	DW	NONE
1B46 30 17                 3780 	DW	J2	;J
1B48 59 17                 3781 	DW	J3
1B4A AF 17                 3782 	DW	J4
1B4C 2B 16                 3783 	DW	NONE
1B4E 2B 16                 3784 	DW	NONE
1B50 2B 16                 3785 	DW	NONE	;K
1B52 2B 16                 3786 	DW	NONE
1B54 2B 16                 3787 	DW	NONE
1B56 2B 16                 3788 	DW	NONE
1B58 2B 16                 3789 	DW	NONE
1B5A 2B 16                 3790 	DW	NONE	;L
1B5C D4 17                 3791 	DW	L3
1B5E E4 17                 3792 	DW	L4
1B60 03 18                 3793 	DW	L5
1B62 20 18                 3794 	DW	L6
1B64 2B 16                 3795 	DW	NONE	;M
1B66 31 18                 3796 	DW	M3
1B68 3C 18                 3797 	DW	M4
1B6A 49 18                 3798 	DW	M5
1B6C 2B 16                 3799 	DW	NONE
1B6E 2B 16                 3800 	DW	NONE	;N
1B70 58 18                 3801 	DW	N3
1B72 2B 16                 3802 	DW	NONE
1B74 2B 16                 3803 	DW	NONE
1B76 2B 16                 3804 	DW	NONE
1B78 68 18                 3805 	DW	O2	;O
1B7A 6D 18                 3806 	DW	O3
1B7C 78 18                 3807 	DW	O4
1B7E 2B 16                 3808 	DW	NONE
1B80 2B 16                 3809 	DW	NONE
1B82 2B 16                 3810 	DW	NONE	;P
1B84 85 18                 3811 	DW	P3
1B86 90 18                 3812 	DW	P4
1B88 9D 18                 3813 	DW	P5
1B8A 2B 16                 3814 	DW	NONE
1B8C 2B 16                 3815 	DW	NONE	;Q
1B8E 2B 16                 3816 	DW	NONE
1B90 2B 16                 3817 	DW	NONE
1B92 2B 16                 3818 	DW	NONE
1B94 2B 16                 3819 	DW	NONE
1B96 2B 16                 3820 	DW	NONE	;R
1B98 A5 18                 3821 	DW	R3
1B9A C4 18                 3822 	DW	R4
1B9C D1 18                 3823 	DW	R5
1B9E 2B 16                 3824 	DW	NONE
1BA0 2B 16                 3825 	DW	NONE	;S
1BA2 E0 18                 3826 	DW	S3
1BA4 18 19                 3827 	DW	S4
1BA6 37 19                 3828 	DW	S5
1BA8 2B 16                 3829 	DW	NONE
1BAA 2B 16                 3830 	DW	NONE	;T
1BAC 2B 16                 3831 	DW	NONE
1BAE 54 19                 3832 	DW	T4
1BB0 2B 16                 3833 	DW	NONE
1BB2 2B 16                 3834 	DW	NONE
1BB4 5B 19                 3835 	DW	U2	;U
1BB6 2B 16                 3836 	DW	NONE
1BB8 2B 16                 3837 	DW	NONE
1BBA 2B 16                 3838 	DW	NONE
1BBC 2B 16                 3839 	DW	NONE
1BBE 2B 16                 3840 	DW	NONE	;V
1BC0 2B 16                 3841 	DW	NONE
1BC2 2B 16                 3842 	DW	NONE
1BC4 2B 16                 3843 	DW	NONE
1BC6 2B 16                 3844 	DW	NONE
1BC8 2B 16                 3845 	DW	NONE	;W
1BCA 2B 16                 3846 	DW	NONE
1BCC 60 19                 3847 	DW	W4
1BCE 2B 16                 3848 	DW	NONE
1BD0 2B 16                 3849 	DW	NONE
1BD2 2B 16                 3850 	DW	NONE	;X
1BD4 67 19                 3851 	DW	X3
1BD6 6D 19                 3852 	DW	X4
1BD8 2B 16                 3853 	DW	NONE
1BDA 2B 16                 3854 	DW	NONE
1BDC 2B 16                 3855 	DW	NONE	;Y
1BDE 2B 16                 3856 	DW	NONE
1BE0 2B 16                 3857 	DW	NONE
1BE2 2B 16                 3858 	DW	NONE
1BE4 2B 16                 3859 	DW	NONE
1BE6 2B 16                 3860 	DW	NONE	;Z
1BE8 2B 16                 3861 	DW	NONE
1BEA 2B 16                 3862 	DW	NONE
1BEC 2B 16                 3863 	DW	NONE
1BEE 2B 16                 3864 	DW	NONE
1BF0                       3865 
1BF0                       3866 NDPTAB:
1BF0                       3867 ;Lookup table for 8087 mnemonics. There is one entry for each letter of the
1BF0                       3868 ;alphabet
1BF0 80 19                 3869 	DW	NDPA
1BF2 8E 19                 3870 	DW	NDPB
1BF4 98 19                 3871 	DW	NDPC
1BF6 B1 19                 3872 	DW	NDPD
1BF8 D2 19                 3873 	DW	NDPE
1BFA D7 19                 3874 	DW	NDPF
1BFC 2B 16                 3875 	DW	NONE	;G
1BFE 2B 16                 3876 	DW	NONE	;H
1C00 DD 19                 3877 	DW	NDPI
1C02 2B 16                 3878 	DW	NONE	;J
1C04 2B 16                 3879 	DW	NONE	;K
1C06 22 1A                 3880 	DW	NDPL
1C08 56 1A                 3881 	DW	NDPM
1C0A 64 1A                 3882 	DW	NDPN
1C0C 60 1A                 3883 	DW	NDPO
1C0E 69 1A                 3884 	DW	NDPP
1C10 2B 16                 3885 	DW	NONE	;Q
1C12 7A 1A                 3886 	DW	NDPR
1C14 88 1A                 3887 	DW	NDPS
1C16 C4 1A                 3888 	DW	NDPT
1C18 2B 16                 3889 	DW	NONE	;U
1C1A 2B 16                 3890 	DW	NONE	;V
1C1C C9 1A                 3891 	DW	NDPW
1C1E CF 1A                 3892 	DW	NDPX
1C20 DF 1A                 3893 	DW	NDPY
1C22 2B 16                 3894 	DW	NONE	;Z
1C24                       3895 
1C24                       3896 ;Error message table
1C24                       3897 
1C24                       3898 ERRTAB:
1C24 01 52 65 67 69 73 74  3899 	DM	1,"Register not allowed in immediate value"
     65 72 20 6E 6F 74 20 
     61 6C 6C 6F 77 65 64 
     20 69 6E 20 69 6D 6D 
     65 64 69 61 74 65 20 
     76 61 6C 75 E5       
1C4C 02 49 6E 64 65 78 20  3900 	DM	2,"Index or base register must be BP, BX, SI, or DI"
     6F 72 20 62 61 73 65 
     20 72 65 67 69 73 74 
     65 72 20 6D 75 73 74 
     20 62 65 20 42 50 2C 
     20 42 58 2C 20 53 49 
     2C 20 6F 72 20 44 C9 
1C7D 03 4F 6E 6C 79 20 6F  3901 	DM	3,"Only one base register (BX, BP) allowed"
     6E 65 20 62 61 73 65 
     20 72 65 67 69 73 74 
     65 72 20 28 42 58 2C 
     20 42 50 29 20 61 6C 
     6C 6F 77 65 E4       
1CA5 04 4F 6E 6C 79 20 6F  3902 	DM	4,"Only one index register (SI or DI) allowed"
     6E 65 20 69 6E 64 65 
     78 20 72 65 67 69 73 
     74 65 72 20 28 53 49 
     20 6F 72 20 44 49 29 
     20 61 6C 6C 6F 77 65 
     E4                   
1CD0 05 4F 6E 6C 79 20 61  3903 	DM	5,"Only addition allowed on register or undefined label"
     64 64 69 74 69 6F 6E 
     20 61 6C 6C 6F 77 65 
     64 20 6F 6E 20 72 65 
     67 69 73 74 65 72 20 
     6F 72 20 75 6E 64 65 
     66 69 6E 65 64 20 6C 
     61 62 65 EC          
1D05 06 4F 6E 6C 79 20 6F  3904 	DM	6,"Only one undefined label per expression allowed"
     6E 65 20 75 6E 64 65 
     66 69 6E 65 64 20 6C 
     61 62 65 6C 20 70 65 
     72 20 65 78 70 72 65 
     73 73 69 6F 6E 20 61 
     6C 6C 6F 77 65 E4    
1D35 07 49 6C 6C 65 67 61  3905 	DM	7,"Illegal digit in hexadecimal number"
     6C 20 64 69 67 69 74 
     20 69 6E 20 68 65 78 
     61 64 65 63 69 6D 61 
     6C 20 6E 75 6D 62 65 
     F2                   
1D59 08 49 6C 6C 65 67 61  3906 	DM	8,"Illegal digit in decimal number"
     6C 20 64 69 67 69 74 
     20 69 6E 20 64 65 63 
     69 6D 61 6C 20 6E 75 
     6D 62 65 F2          
1D79 0A 49 6C 6C 65 67 61  3907 	DM	10,"Illegal character in label or opcode"
     6C 20 63 68 61 72 61 
     63 74 65 72 20 69 6E 
     20 6C 61 62 65 6C 20 
     6F 72 20 6F 70 63 6F 
     64 E5                
1D9E 0B 4C 61 62 65 6C 20  3908 	DM	11,"Label defined twice"
     64 65 66 69 6E 65 64 
     20 74 77 69 63 E5    
1DB2 0C 4F 70 63 6F 64 65  3909 	DM	12,"Opcode not recognized"
     20 6E 6F 74 20 72 65 
     63 6F 67 6E 69 7A 65 
     E4                   
1DC8 14 49 6E 76 61 6C 69  3910 	DM	20,"Invalid operand"
     64 20 6F 70 65 72 61 
     6E E4                
1DD8 15 22 2C 22 20 61 6E  3911 	DM	21,'"," and second operand expected'
     64 20 73 65 63 6F 6E 
     64 20 6F 70 65 72 61 
     6E 64 20 65 78 70 65 
     63 74 65 E4          
1DF8 16 52 65 67 69 73 74  3912 	DM	22,"Register mismatch"
     65 72 20 6D 69 73 6D 
     61 74 63 E8          
1E0A 17 49 6D 6D 65 64 69  3913 	DM	23,"Immediate operand not allowed"
     61 74 65 20 6F 70 65 
     72 61 6E 64 20 6E 6F 
     74 20 61 6C 6C 6F 77 
     65 E4                
1E28 18 22 5D 22 20 65 78  3914 	DM	24,'"]" expected'
     70 65 63 74 65 E4    
1E35 19 54 77 6F 20 6D 65  3915 	DM	25,"Two memory operands not allowed"
     6D 6F 72 79 20 6F 70 
     65 72 61 6E 64 73 20 
     6E 6F 74 20 61 6C 6C 
     6F 77 65 E4          
1E55 1A 44 65 73 74 69 6E  3916 	DM	26,"Destination must not be immediate value"
     61 74 69 6F 6E 20 6D 
     75 73 74 20 6E 6F 74 
     20 62 65 20 69 6D 6D 
     65 64 69 61 74 65 20 
     76 61 6C 75 E5       
1E7D 1B 42 6F 74 68 20 6F  3917 	DM	27,"Both operands must not be registers"
     70 65 72 61 6E 64 73 
     20 6D 75 73 74 20 6E 
     6F 74 20 62 65 20 72 
     65 67 69 73 74 65 72 
     F3                   
1EA1 1C 4F 70 65 72 61 6E  3918 	DM	28,"Operand must be segment register"
     64 20 6D 75 73 74 20 
     62 65 20 73 65 67 6D 
     65 6E 74 20 72 65 67 
     69 73 74 65 F2       
1EC2 1D 46 69 72 73 74 20  3919 	DM	29,"First operand must be register"
     6F 70 65 72 61 6E 64 
     20 6D 75 73 74 20 62 
     65 20 72 65 67 69 73 
     74 65 F2             
1EE1 1E 55 6E 64 65 66 69  3920 	DM	30,"Undefined label not allowed"
     6E 65 64 20 6C 61 62 
     65 6C 20 6E 6F 74 20 
     61 6C 6C 6F 77 65 E4 
1EFD 1F 56 61 6C 75 65 20  3921 	DM	31,"Value out of range"
     6F 75 74 20 6F 66 20 
     72 61 6E 67 E5       
1F10 20 4D 69 73 73 69 6E  3922 	DM	32,"Missing or illegal operand size flag"
     67 20 6F 72 20 69 6C 
     6C 65 67 61 6C 20 6F 
     70 65 72 61 6E 64 20 
     73 69 7A 65 20 66 6C 
     61 E7                
1F35 21 4D 75 73 74 20 68  3923 	DM	33,"Must have label on same line"
     61 76 65 20 6C 61 62 
     65 6C 20 6F 6E 20 73 
     61 6D 65 20 6C 69 6E 
     E5                   
1F52 23 5A 65 72 6F 2D 6C  3924 	DM	35,"Zero-length string illegal"
     65 6E 67 74 68 20 73 
     74 72 69 6E 67 20 69 
     6C 6C 65 67 61 EC    
1F6D 24 45 4E 44 49 46 20  3925 	DM	36,"ENDIF without IF"
     77 69 74 68 6F 75 74 
     20 49 C6             
1F7E 25 4F 6E 65 2D 63 68  3926 	DM	37,"One-character strings only"
     61 72 61 63 74 65 72 
     20 73 74 72 69 6E 67 
     73 20 6F 6E 6C F9    
1F99 26 49 6C 6C 65 67 61  3927 	DM	38,"Illegal expression"
     6C 20 65 78 70 72 65 
     73 73 69 6F EE       
1FAC 27 45 6E 64 20 6F 66  3928 	DM	39,"End of string not found"
     20 73 74 72 69 6E 67 
     20 6E 6F 74 20 66 6F 
     75 6E E4             
1FC4 64 55 6E 64 65 66 69  3929 	DM	100,"Undefined label"
     6E 65 64 20 6C 61 62 
     65 EC                
1FD4 65 56 61 6C 75 65 20  3930 	DM	101,"Value out of range (forward)"
     6F 75 74 20 6F 66 20 
     72 61 6E 67 65 20 28 
     66 6F 72 77 61 72 64 
     A9                   
1FF1 FF                    3931 	DB	255
1FF2                       3932 
1FF2 2A 2A 2A 2A 2A 20 45  3933 ERRMES:	DM	'***** ERROR:  '
     52 52 4F 52 3A 20 A0 
2000 0D 0A 46 69 6C 65 20  3934 NOSPAC:	DB	13,10,'File creation error',13,10,"$"
     63 72 65 61 74 69 6F 
     6E 20 65 72 72 6F 72 
     0D 0A 24             
2018 0D 0A 49 6E 73 75 66  3935 NOMEM:	DB	13,10,'Insufficient memory',13,10,'$'
     66 69 63 69 65 6E 74 
     20 6D 65 6D 6F 72 79 
     0D 0A 24             
2030 0D 0A 46 69 6C 65 20  3936 NOFILE:	DB	13,10,'File not found',13,10,'$'
     6E 6F 74 20 66 6F 75 
     6E 64 0D 0A 24       
2043 0D 0A 44 69 73 6B 20  3937 WRTERR:	DB	13,10,'Disk full',13,10,'$'
     66 75 6C 6C 0D 0A 24 
2051 0D 0A 42 61 64 20 64  3938 BADDSK:	DB	13,10,'Bad disk specifier',13,10,'$'
     69 73 6B 20 73 70 65 
     63 69 66 69 65 72 0D 
     0A 24                
2068 0D 0A 0D 0A 45 72 72  3939 ERCNTM:	DM	13,10,13,10,'Error Count ='
     6F 72 20 43 6F 75 6E 
     74 20 BD             
2079 0D 0A 53 79 6D 62 6F  3940 SYMSIZE	DM	13,10,'Symbol Table size = '
     6C 20 54 61 62 6C 65 
     20 73 69 7A 65 20 3D 
     A0                   
208F 46 72 65 65 20 73 70  3941 FRESIZE	DM	      'Free space =        '
     61 63 65 20 3D 20 20 
     20 20 20 20 20 A0    
20A3 0D 0A 53 79 6D 62 6F  3942 SYMMES:	DM	13,10,'Symbol Table',13,10,13,10
     6C 20 54 61 62 6C 65 
     0D 0A 0D 8A          
20B5 41 53 4D 00 00        3943 EXTEND:	DB	'ASM',0,0
20BA 05 65 6E 64 69 66     3944 IFEND:	DB	5,'endif'
20C0 02 69 66              3945 IFNEST:	DB	2,'if'
20C3 72 65 F4              3946 RETSTR:	DM	'ret'
20C6 00 20 20 20 20 20 20  3947 HEXFCB:	DB	0,'        HEX',0,0,0,0
     20 20 48 45 58 00 00 
     00 00                
20D6                       3948 	DS	16
20E6 00 00 00 00 00        3949 	DB	0,0,0,0,0
20EB 00 20 20 20 20 20 20  3950 LSTFCB:	DB	0,'        PRN',0,0,0,0
     20 20 50 52 4E 00 00 
     00 00                
20FB                       3951 	DS	16
210B 00 00 00 00 00        3952 	DB	0,0,0,0,0
2110                       3953 PC:	DS	2
2112                       3954 OLDPC:	DS	2
2114                       3955 LABPT:	DS	2
2116                       3956 FLAG:	DS	1
2117                       3957 MAXFLG:	DS	1
2118                       3958 ADDR:	DS	2
211A                       3959 ALABEL:	DS	2
211C                       3960 DATA:	DS	2
211E                       3961 DLABEL:	DS	2
2120                       3962 CON:	DS	2
2122                       3963 UNDEF:	DS	2
2124                       3964 LENID:	DS	1
2125                       3965 ID:	DS	80
2175                       3966 CHR:	DS	1
2176                       3967 SYM:	DS	1
2177                       3968 BASE:	DS	2
2179                       3969 HEAP:	DS	2
217B                       3970 SYMFLG:	DS	1
217C                       3971 SYMLIN:	DS	1
217D                       3972 CODE:	DS	2
217F                       3973 DATSIZ:	DS	1
2180                       3974 RELOC:	DS	1
2181                       3975 BCOUNT:	DS	1
2182                       3976 COUNT:	DS	1
2183                       3977 ERR:	DS	1
2184                       3978 LINE:	DS	2
2186                       3979 HEXLEN:	DS	2
2188                       3980 HEXADD:	DS	2
218A                       3981 LASTAD:	DS	2
218C                       3982 HEXCNT:	DS	1
218D                       3983 CHKSUM:	DS	1
218E                       3984 LINFLG:	DS	1
218F                       3985 PREV:	DS	1
2190                       3986 IFFLG:	DS	1
2191                       3987 CHKLAB:	DS	1
2192                       3988 ERRCNT:	DS	2
2194                       3989 LSTRET:	DS	2
2196                       3990 RETPT:	DS	2
2198                       3991 LSTDEV:	DS	2
219A                       3992 SPC:	DS	1
219B                       3993 NOWAIT:	DS	1
219C                       3994 IX:	DS	2
219E                       3995 IY:	DS	2
21A0                       3996 HEXPNT:	DS	2
21A2                       3997 LSTPNT:	DS	2
21A4                       3998 HEXBUF:	DS	HEXBUFSIZ
21EA                       3999 LSTBUF:	DS	LSTBUFSIZ
25EA                       4000 BUFPT:	DS	2
25EC                       4001 SRCBUF:	DS	BUFSIZ
29EC                       4002 	DS	100H
2AEC                       4003 	ALIGN
2AEC                       4004 STACK:	EQU	$
2AEC                       4005 START:	EQU	$


Error Count =    0
